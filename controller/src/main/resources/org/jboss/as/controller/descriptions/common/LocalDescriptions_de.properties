namespaces=Map von im Konfigurations-XML-Dokument verwendeten Namespaces, wobei Schl\u00FCssel Namespace-Pr\u00E4fixe und Werte Schema-URIs sind.
namespaces.add=F\u00FCgt der Namespaces-Attribute-Map ein Namespace-Pr\u00E4fix-Mapping hinzu.
namespaces.add.prefix=Der Pr\u00E4fix des hinzuzuf\u00FCgenden Namespace.
namespaces.add.uri=Die Schema-uri des hinzuzuf\u00FCgenden Namespace.
namespaces.remove=Entfernt ein Namespace-Pr\u00E4fix-Mapping aus der Namespaces-Attribute-Map.
namespaces.remove.namespace=Der Pr\u00E4fix des zu entfernenden Namespace.
schema-locations=Map von im Konfigurations-XML-Dokument verwendeten Speicherorten, wobei Schl\u00FCssel Schema-URIs und Werte die Speicherorte sind, an denen sich die Schema befindet.
schema-locations.add=F\u00FCgt das Speicherort-Mapping des Schemas zur Map des 'schema-locations' Attributes.
schema-locations.add.uri=Die URI des hinzuzuf\u00FCgenden Schema-Speicherorts.
schema-locations.add.schema-location=Der Speicherort, an dem das hinzugef\u00FCgte Schema gefunden werden kann.
schema-locations.remove=Entfernt das Speicherort-Mapping des Schemas aus der Map des  schema-locations Attributes.
schema-locations.remove.schema-uri=Die URI des zu entfernenden Schema-Speicherorts.
core.management=Die Management-Dienste, die zur Steuerung eines eigenst\u00E4ndigen Servers oder eines Host-Controllers eines Hosts in einer Management-Domain verwendet werden.
core.management.security-realms=Die Sicherheitsbereiche, die zur Steuerung des Zugriffs auf die Management-Dienste verf\u00FCgbar sind.
core.management.security-realm=Ein Sicherheitsbereich, der mit einem Management-Interface verkn\u00FCpft und zur Steuerung des Zugriffs auf die Management-Dienste verwendet werden kann.
core.management.security-realm.add=F\u00FCgt eine Sicherheitsbereich hinzu, der mit einem Management-Interface verkn\u00FCpft und zur Steuerung des Zugriffs auf die Management-Dienste verwendet werden kann.
core.management.security-realm.remove=Entfernt einen Sicherheitsbereich, der mit einem Management-Interface verkn\u00FCpft und zur Steuerung des Zugriffs auf die Management-Dienste verwendet werden kann.
core.management.security-realm.server-identity=Konfiguration der Identit\u00E4ten, die den Server repr\u00E4sentieren.
core.management.security-realm.server-identity.secret=Konfiguration der Geheimnis/Passwort-basierten Identit\u00E4t eines Servers oder Host-Controllers.
core.management.security-realm.server-identity.secret.add=F\u00FCgt eine Geheimnis/Passwort-basierte Identit\u00E4t f\u00FCr einen Server oder Host-Controller hinzu.
core.management.security-realm.server-identity.secret.remove=Entfernt eine Geheimnis/Passwort-basierte Identit\u00E4t f\u00FCr einen Server oder Host-Controller.
core.management.security-realm.server-identity.secret.value=Das Geheimnis / Passwort - Base64 verschl\u00FCsselt.
core.management.security-realm.server-identity.ssl=Konfiguration der SSL-Identit\u00E4t eines Servers oder Host-Controllers.
core.management.security-realm.server-identity.ssl.add=F\u00FCgt die SSL-Identit\u00E4t eines Servers oder Host-Controllers hinzu.
core.management.security-realm.server-identity.ssl.remove=Entfernt die SSL-Identit\u00E4t eines Servers oder Host-Controllers.
core.management.security-realm.server-identity.ssl.protocol=Das bei der Erstellung des SSLContext zu verwendende Protokoll.
core.management.security-realm.server-identity.ssl.keystore-password=Das zum \u00D6ffnen des Keystore zu verwendende Passwort.
core.management.security-realm.server-identity.ssl.keystore-path=Der Pfad des Keystore.
core.management.security-realm.server-identity.ssl.keystore-relative-to=Der Name eines anderen vorher benannten Pfads, oder einer der Standardpfade des Systems. Falls 'relative-to' angegeben ist, gilt der Wert des 'path' Attributs als relativ zu dem Pfad, der von diesem Attribut spezifiziert ist.
core.management.security-realm.authentication=Konfiguration der serverseitigen Authentizierungsmechanismsen. Optional kann ein Truststore und ein Benutzername/Passwort definiert werden. Die Authentifizierung wird zun\u00E4chst versuchen, den Truststore zu verwenden, und falls dies fehlschl\u00E4gt, auf die Authentifizierung mittels Benutzername/Passwort ausweichen. Falls keines von beidem spezifiziert wurde, ist der einzige verf\u00FCgbare Mechanismus der lokale Mechanismus f\u00FCr das native Interface und auf das HTTP-Interface kann nicht zugegriffen werden.
core.management.security-realm.authentication.truststore=Konfiguration eines Keystores, der beim Erstellen eines Trust-Managers zum Verifizieren von Clients verwendet wird.
core.management.security-realm.authentication.truststore.add=F\u00FCgt einen Keystore hinzu, der beim Erstellen eines Trust-Managers zum Verifizieren von Clients verwendet wird.
core.management.security-realm.authentication.truststore.remove=Entfernt einen Keystore, der beim Erstellen eines Trust-Managers zum Verifizieren von Clients verwendet wird.
core.management.security-realm.authentication.truststore.keystore-password=Das zum \u00D6ffnen des Keystore zu verwendende Passwort.
core.management.security-realm.authentication.truststore.keystore-path=Der Pfad des Keystore.
core.management.security-realm.authentication.truststore.keystore-relative-to=Der Name eines anderen vorher benannten Pfads, oder einer der Standardpfade des Systems. Falls 'relative-to' angegeben ist, gilt der Wert des 'path' Attributs als relativ zu dem Pfad, der von diesem Attribut spezifiziert ist.
core.management.security-realm.authentication.jaas=Als JAAS-LoginContext zur Authentifizierung zu verwendende Konfiguration.
core.management.security-realm.authentication.jaas.add=F\u00FCgt eine Konfiguration zur Verwendung von JAAS zur Authentifizierung hinzu.
core.management.security-realm.authentication.jaas.remove=Entfernt eine Konfiguration zur Verwendung von JAAS zur Authentifizierung.
core.management.security-realm.authentication.jaas.name=Der Name der zu verwendenden JAAS-Konfiguration.
core.management.security-realm.authentication.ldap=Konfiguration zur Verwendung von LDAP als Benutzerdatenbank.
core.management.security-realm.authentication.ldap.add=F\u00FCgt eine Konfiguration hinzu zur Verwendung von LDAP als Benutzerdatenbank.
core.management.security-realm.authentication.ldap.remove=Entfernt eine Konfiguration zur Verwendung von LDAP als Benutzerdatenbank.
core.management.security-realm.authentication.ldap.connection=Der Name der f\u00FCr die Verbindung mit LDAP zu verwendenden Verbindung.
core.management.security-realm.authentication.ldap.base-dn=Der Basis-DN zum Beginn der Suche nach dem Benuzter.
core.management.security-realm.authentication.ldap.recursive=Ob die Suche rekursiv sein soll.
core.management.security-realm.authentication.ldap.user-dn=Der Name des Attributs, das der DN des Benutzers ist.
core.management.security-realm.authentication.ldap.username-attribute=Der Name des Attributs zur Suche nach dem Benutzer. Dieser Filter wird dann eine einfache Suche durchf\u00FChren, wobei der vom Benutzer angegebene Benutzername mit dem hier spezifizierten Attribut \u00FCbereinstimmt.
core.management.security-realm.authentication.ldap.advanced-filter=Der voll definierte Filter zur Suche nach dem Benutzer basierend auf dessen angegebener Benutzer-ID. Der Filter sollte eine Variable in der Form {0} enthalten - diese wird durch den Benutzernamen ersetzt, der vom Benutzer angegeben wird.
core.management.security-realm.authentication.properties=Konfiguration, um eine Liste von Benutzern, die innerhalb einer Eigenschaftsdatei gespeichert sind, als Benutzerdatenbank zu verwenden. Die Eintr\u00E4ge innerhalb der Eigenschaftsdatei sind 'username\={credentials}', wobei jeder Benutzer in einer neuen Zeile spezifiziert wird.
core.management.security-realm.authentication.properties.add=F\u00FCgt eine Konfiguration zur Verwendung einer von Nutzern innerhalb einer Properties-Datei gespeicherten Liste als Nutzer-Repository hinzu.
core.management.security-realm.authentication.properties.remove=Entfernt eine Konfiguration zur Verwendung einer Liste mit Benutzern, gespeichert innerhalb einer Eigenschaftsdatei, als Benutzerdatenbank.
core.management.security-realm.authentication.properties.path=Der Pfad der die Benutzer enthaltenden Eigenschaftsdatei. 
core.management.security-realm.authentication.properties.relative-to=Der Name eines anderen vorher benannten Pfads, oder einer der Standardpfade des Systems. Falls 'relative-to' angegeben ist, gilt der Wert des 'path' Attributs als relativ zu dem Pfad, der von diesem Attribut spezifiziert ist.
core.management.security-realm.authentication.properties.plain-text=Ob die Berechtigungsnachweise innerhalb der Eigenschaftsdatei als Klartext gespeichert sind. Falls nicht, werden die Berechtigungsnachweise als hex-kodierter Digest-Hash von 'username \: realm \: password' erwartet.
core.management.security-realm.authentication.xml=Konfiguration, um eine Liste von Benutzern, die direkt innerhalb der standalone.xml oder host.xml gespeichert sind, als Benutzerdatenbank zu verwenden.
core.management.security-realm.authentication.xml.add=F\u00FCgt eine Konfiguration hinzu, um eine Liste von Benutzern, die direkt innerhalb der standalone.xml oder host.xml gespeichert sind, als Benutzerdatenbank zu verwenden.
core.management.security-realm.authentication.xml.remove=Entfernt eine Konfiguration, um eine Liste von Benutzern, die direkt innerhalb der standalone.xml oder host.xml gespeichert sind, als Benutzerdatenbank zu verwenden.
core.management.security-realm.authentication.xml.user=Ein autorisierter Nutzer.
core.management.security-realm.authentication.xml.user.add=F\u00FCgt einen autorisierten Nutzer hinzu.
core.management.security-realm.authentication.xml.user.remove=Entfernt einen autorisierten Nutzer.
core.management.security-realm.authentication.xml.user.password=Das Passwort des Nutzers.
core.management.security-realm.authorization=Serverseitige Konfiguration zum Laden zus\u00E4tzlicher Benutzerinformationen wie z.B. Rollen zur Verwendung f\u00FCr nachfolgende Autorisierungspr\u00FCfungen.
core.management.security-realm.authorization.properties=Konfiguration, um eine Eigenschaftsdatei f\u00FCr Benutzerrollen zu laden. Die Eintr\u00E4ge innerhalb der Eigenschaftsdatei sind 'username\={roles}', wobei 'roles' eine kommagetrennte Liste von Benutzerrollen ist.
core.management.security-realm.authorization.properties.add=F\u00FCgt eine Konfiguration zur Verwendung einer Eigenschaftsdatei zum Laden von Benutzerrollen hinzu.
core.management.security-realm.authorization.properties.remove=Entfernt eine Konfiguration zur Verwendung einer Eigenschaftsdatei zum Laden von Benutzerrollen.
core.management.security-realm.authorization.properties.path=Der Pfad der Eigenschaftsdatei, die die Benutzerrollen enth\u00E4lt. 
core.management.security-realm.authorization.properties.relative-to=Der Name eines anderen vorher benannten Pfads, oder einer der Standardpfade des Systems. Falls 'relative-to' angegeben ist, gilt der Wert des 'path' Attributs als relativ zu dem Pfad, der von diesem Attribut spezifiziert ist.
core.management.ldap-connections=Konfigurationen f\u00FCr Verbindungs-Factories, die von einem Sicherheitsbereich verwendet werden k\u00F6nnen, um auf LDAP-Server f\u00FCr Informationen zur Authentifizierung und Autorisierung zuzugreifen.
core.management.ldap-connection=Eine Verbindungs-Factory, die von einem Sicherheitsbereich verwendet werden kann, um auf einen LDAP-Server f\u00FCr Informationen zur Authentifizierung und Autorisierung zuzugreifen.
core.management.ldap-connection.add=F\u00FCgt eine Verbindungs-Factory hinzu, die von einem Sicherheitsbereich verwendet werden k\u00F6nnen, um auf einen LDAP-Server f\u00FCr Informationen zur Authentifizierung und Autorisierung zuzugreifen.
core.management.ldap-connection.remove=Entfernt eine Verbindungs-Factory, die von einem Sicherheitsbereich verwendet werden k\u00F6nnte, um auf einen LDAP-Server f\u00FCr Informationen zur Authentifizierung und Autorisierung zuzugreifen.
core.management.ldap-connection.url=Die f\u00FCr die Verbindung zum LDAP-Server zu verwendende URL. 
core.management.ldap-connection.search-dn=Der DN f\u00FCr die Verbindung mit dem LDAP-Server zum Durchf\u00FChren von Suchen.
core.management.ldap-connection.search-credential=Der Berechtigungsnachweis f\u00FCr die Verbindung zum Durchf\u00FChren einer Suche.
core.management.ldap-connection.initial-context-factory=Die anf\u00E4ngliche Context-Factory zur Schaffung des LdapContext.
core.management.management-interfaces=Von Management-Diensten bereitgestellte Schnittstellen, die externen Aufrufern das Ausf\u00FChren von Verwaltungsaufgaben erm\u00F6glichen.
core.management.native-interface=Konfiguration des nativen Management-Interface des Servers
core.management.native-interface.add=F\u00FCgt die Konfiguration des nativen Management-Interface des Servers hinzu
core.management.native-interface.interface=Netzwerk-Interface, an dem das Socket des Servers f\u00FCr native Management-Kommunikation ge\u00F6ffnet werden sollte. Muss 'undefined' sein, wenn das 'socket-binding'-Attribut eingestellt ist.
core.management.native-interface.port=Port, an dem das Socket des Servers f\u00FCr native Management-Kommunikation ge\u00F6ffnet werden sollte. Muss 'undefined' sein, wenn das 'socket-binding'-Attribut eingestellt ist.
core.management.native-interface.security-realm=Der f\u00FCr das native Management-Interface zu verwendende Sicherheitsbereich.
core.management.native-interface.socket-binding=Der Name der Socket-Binding-Konfiguration zur Verwendung f\u00FCr den Socket des nativen Management-Interface.
core.management.native-remoting-interface=Konfiguration des nativen Management-Interface des Servers unter Verwendung eines Connectors vom Remoting-Untersystem.
core.management.native-remoting-interface.add=F\u00FCgt die Konfiguration des nativen Management-Interface des Servers unter Verwendung eines Connectors vom Remoting-Untersystem hinzu.
core.management.http-interface=Konfiguration des HTTP Management-Interface des Servers
core.management.http-interface.add=F\u00FCgt die Konfiguration des HTTP Management-Interface des Servers hinzu
core.management.http-interface.interface=Netzwerkschnittstelle, an dem das Socket des Servers f\u00FCr HTTP Management-Kommunikation ge\u00F6ffnet werden sollte. 
core.management.http-interface.port=Port, an dem das Socket des Servers f\u00FCr HTTP Management-Kommunikation ge\u00F6ffnet werden sollte. 
core.service-container=Der zentrale Container, der alle Dienste in einem laufenden, eigenst\u00E4ndigen Server oder in einem Host-Controller in einer Management-Domain verwaltet.
extension=Ein Modul, das die Standardfunktionen einer Domain oder eines eigenst\u00E4ndigen Servers erweitert.
extension.module=Der Name des Moduls.
extension.add=F\u00FCgt eine Erweiterung hinzu. 
extension.remove=Entfernt eine Erweiterung. 
extension.subsystem=Ein von der Erweiterung geliefertes Subsystem. Was hier bereitgestellt wird sind vom Untersystem gelieferte Informationen zum xml-Schema und dem Management-Interface, nicht die Konfiguration des Untersystems selbst. 
extension.subsystem.xml-namespaces=Eine Liste mit URIs f\u00FCr die XML-Namespaces, die vom XML-Parser des Untersystems unterst\u00FCtzt werden. Kann leer sein, falls die Erweiterung nicht ausdr\u00FCcklich einen XML-Namespace mit einem bestimmten Untersystem verkn\u00FCpfte.
extension.subsystem.management-major-version=Hauptversion des Management-Interface des Untersystems. Kann undefiniert sein, falls das Untersystem derzeit kein versioniertes Management-Interface bereitstellt.
extension.subsystem.management-minor-version=Nebenversion des Management-Interface des Untersystems. Kann undefiniert sein, falls das Untersystem derzeit kein versioniertes Management-Interface bereitstellt.
named_path=Ein benannter Dateisystempfad, ohne dass ein Spezifizieren des eigentlichen Pfads n\u00F6tig ist. Falls kein eigentlicher Pfad spezifiziert ist, fungiert dies als Platzhalter im Modell (z.B. auf Domain-Ebene), bis eine voll spezifizierte Pfaddefinition auf niedrigerer Ebene (z.B. auf Host-Ebene, wo verf\u00FCgbare Adressen bekannt sind) angewendet wird.
specified_path=Ein benannter Dateisystempfad. 
path.name=Der Name des Pfads. Kann nicht einer der vom System bereitgestellten standardm\u00E4\u00DFigen, festen Pfade sein\: <ul><li>jboss.home - das root-Verzeichnis der JBoss AS Distribution</li><li>user.home - das Heimverzeichnis des Nutzers</li><li>user.dir - das aktuelle Arbeitsverzeichnis des Nutzers</li><li>java.home - Java-Installationsverzeichnis</li><li>jboss.server.base.dir - root-Verzeichnis f\u00FCr eine einzelne Serverinstanz</li></ul> Beachten Sie, dass das System andere Standardpfade bereitstellt, die au\u00DFer Kraft gesetzt werden k\u00F6nnen, indem sie in der Konfigurationsdatei deklariert werden. Werfen Sie einen Blick auf die Dokumentation f\u00FCr das 'relative-to' Attribut f\u00FCr eine vollst\u00E4ndige Liste der Standardpfade.
path.path=Der tats\u00E4chlich Dateisystempfad. Wird als absoluter Pfad gehandhabt, sofern nicht der 'relative-to' Parameter spezifiziert ist, in welchem Fall der Wert relativ zu diesem Pfad gilt. <p>Falls als absoluter Pfad gehandhabt, wird der tats\u00E4chliche Laufzeit-Pfadname, der vom Wert dieses Attributs spezifiziert wird, folgenderma\u00DFen bestimmt\: </p>Falls dieser Wert bereits absolut ist, dann wird der Wert direkt verwendet. Andernfalls wird der Laufzeit-Pfadname abh\u00E4ngig vom Systemtyp aufgel\u00F6st. Auf UNIX-Systemen wird ein relativer Pfadname in einen absoluten Pfad umgewandelt, indem er gegen das aktuelle Benutzerverzeichnis aufgel\u00F6st wird. Auf Microsoft Windows Systemen wird ein relativer Pfadname in einen absoluten Pfad umgewandelt, indem er gegen das aktuelle Verzeichnis des Laufwerks, das vom Pfadnamen genannt wird, aufgel\u00F6st wird. Falls keines angegeben ist, wird gegen das aktuelle Benutzerverzeichnis aufgel\u00F6st.
path.relative-to=Der Name eines anderen vorher benannten Pfads, oder einer der Standardpfade des Systems. Falls 'relative-to' angegeben ist, gilt der Wert des 'path' Attributs als relativ zu dem Pfad, der von diesem Attribut spezifiziert ist. Die Standardpfade des Systems sind u.a.\: <ul><li>jboss.home - Das Stammverzeichnis der JBoss AS Distribution</li><li>user.home - Heimverzeichnis des Benutzers</li><li>user.dir - Arbeitsverzeichnis des Benutzers</li><li>java.home - Java-Installationsverzeichnis</li><li>jboss.server.base.dir - Stammverzeichnis f\u00FCr eine einzelne Serverinstanz</li><li>jboss.server.data.dir - Verzeichnis zur persistenten  Datenspeicherung durch den Server</li><li>jboss.server.log.dir - Verzeichnis zur Speicherung von Protokolldateien durch den Server</li><li>jboss.server.tmp.dir - Verzeichnis zur Speicherung tempor\u00E4rer Dateien durch den Server</li><li>jboss.domain.servers.dir - Verzeichnis, unter dem ein Host-Controller den Arbeitsbereich f\u00FCr einzelne Serverinstanzen erstellt</li></ul>
path.add=Einen neuen Pfad hinzuf\u00FCgen.
path.add.path=Der Wert des 'path'-Attributs des Pfads
path.add.relative-to=TDer Wert des 'relative-to'-Attributs des Pfades
path.remove=Einen Pfad entfernen
profile=Ein benannter Satz von Untersystem Konfigurationen.
profile.name=Der Name des Profils
profile.add=Ein neues 'profile' hinzuf\u00FCgen
profile.add.includes=Der Wert des 'includes'-Attributs des neuen Profils
profile.describe=Gibt die Untersysteme des Profils als eine Liste von Operationen aus, die zur Erstellung desselben Modells ausgef\u00FChrt werden kann
profile.remove=Entfernt ein 'profile'
profile.remove.name=Der Wert des 'name'-Attributs des Profils
profile.includes=Eine Liste anderer Profile, die in diesem Profil eingeschlossen werden sollen
profile.include=Spezifiziert, dass der Inhalt eines benannten Profils in das Profil, dessen Definition dieses Element enth\u00E4lt, aufgenommen werden soll.
profile.include.profile=Der Name des eingeschlossenen Profils
profile.includes.add=Der Liste eingeschlossener Profile ein Profil hinzuf\u00FCgen
profile.includes.add.include=Der Name des eingeschlossenen Profils
profile.includes.remove=Ein Profil aus der Liste eingeschlossener Profile entfernen
profile.includes.remove.include=Der Name des eingeschlossenen Profils
profile.subsystem=Die Untersysteme, aus denen das Profil besteht.
named_interface=Ein benanntes Netzwerk-Interface, ohne erforderliche Kriterien zum Bestimmen der IP-Adresse, die mit diesem Interface zu verkn\u00FCpfen ist. Falls keine IP-Adress-Auswahlkriterien spezifiziert sind, fungiert dies als Platzhalter im Modell (z.B. auf Domain-Ebene), bis eine voll spezifizierte Interface-Definition auf niedrigerer Ebene (z.B. auf Host-Ebene, wo verf\u00FCgbare Adressen bekannt sind) angewendet wird.
specified_interface=Ein benanntes Netzwerk-Interface sowie die ben\u00F6tigten Kriterien zur Bestimmung der mit diesem Interface assoziierten IP-Adresse. 
interface.name=Der Name des Interface.
interface.criteria=Veraltet. Ein Satz von Kriterien, die zur Runtime dazu eingesetzt werden k\u00F6nnen, welche IP-Adresse f\u00FCr ein Interface verwendet werden soll.
interface.add=Eine neue Interface-Spezifikation hinzuf\u00FCgen.
interface.add.criteria=Veraltet.
interface.remove=Eine Interface-Spezifikation entfernen.
interface.any-address=Attribut das anzeigt, dass dieses Interface verwendende Sockets an eine Platzhalter-Adresse gebunden werden sollten. Es wird die IPv6 Platzhalter-Adresse (\:\:) verwendet, au\u00DFer die java.net.preferIpV4Stack System-Property ist auf "true" eingestellt, in welchem Fall die IPv4 Platzhalter-Adresse (0.0.0.0) verwendet wird. Wird ein Socket an eine IPv6 anylocal-Adresse an einer dual-stack Maschine gebunden, so kann es sowohl IPv6 als auch IPv4 Traffic akzeptieren; wird es an eine IPv4 (IPv4-gemappte) anylocal-Adresse gebunden, so kann es nur IPv4 Traffic akzeptieren.
interface.any-ipv4-address=Attribut das anzeigt, dass dieses Interface verwendende Sockets an die IPv4 Platzhalter-Adresse (0.0.0.0) gebunden werden sollten.
interface.any-ipv6-address=Attribut das anzeigt, dass dieses Interface verwendende Sockets an die IPv6 Platzhalter-Adresse (\:\:) gebunden werden sollten.
interface.inet-address=Attribut, das anzeigt, dass in den Auswahlkriterien f\u00FCr die Bestimmung einer IP-Adresse f\u00FCr dieses Interface ber\u00FCcksichtigt werden sollte, ob die Adresse mit dem angegebenen Wert \u00FCbereinstimmt. Der Wert ist entweder eine IP-Adresse in IPv6 oder IPv4 punktierter Dezimalschreibweise oder ein Hostname, der in eine IP-Adresse aufgel\u00F6st werden kann. Der Wert 'undefined' bedeutet, dass dieses Attribut f\u00FCr die Bestimmung der IP-Adresse nicht relevant ist.
interface.link-local-address=Attribut, das anzeigt, dass in den Auswahlkriterien f\u00FCr die Bestimmung einer IP-Adresse f\u00FCr dieses Interface ber\u00FCcksichtigt werden sollte, ob die Adresse verbindungslokal ist. Der Wert 'undefined' oder 'false' bedeutet, dass dieses Attribut f\u00FCr die Bestimmung der IP-Adresse nicht relevant ist.
interface.loopback=Attribut, das anzeigt, dass in den Auswahlkriterien f\u00FCr die Bestimmung einer IP-Adresse f\u00FCr dieses Interface ber\u00FCcksichtigt werden sollte, ob die Adresse eine Loopback-Adresse ist. Der Wert 'undefined' oder 'false' bedeutet, dass dieses Attribut f\u00FCr die Bestimmung der IP-Adresse nicht relevant ist.
interface.loopback-address=Attribut, das anzeigt, dass die IP-Adresse f\u00FCr dieses Interface der angegebene Wert sein soll, falls auf dem Rechner ein Loopback-Interface existiert. Eine 'loopback address' muss auf dem Loopback-Interface des Rechners dabei nicht unbedingt tats\u00E4chlich konfiguriert sein. Unterscheidet sich von der inet-Adresse insofern, als der angegebene Wert selbst dann verwendet wird, wenn kein NIC gefunden werden kann, mit dem die IP-spezifizierte Adresse verkn\u00FCpft ist. Der Wert 'undefined' oder 'false' bedeutet, dass dieses Attribut f\u00FCr die Bestimmung der IP-Adresse nicht relevant ist.
interface.multicast=Attribut, das anzeigt, dass in den Auswahlkriterien f\u00FCr die Bestimmung einer IP-Adresse f\u00FCr dieses Interface ber\u00FCcksichtigt werden sollte, ob das Netzwerk-Interface Multicast unterst\u00FCtzt. Der Wert 'undefined' oder 'false' bedeutet, dass dieses Attribut f\u00FCr die Bestimmung der IP-Adresse nicht relevant ist.
interface.nic=Attribut, das anzeigt, dass in den Auswahlkriterien f\u00FCr die Bestimmung einer IP-Adresse f\u00FCr dieses Interface ber\u00FCcksichtigt werden sollte, ob das Netzwerk-Interface den angegebenen Namen tr\u00E4gt. Der Wert dieses Attributs ist der Name eines Netzwerk-Interfaces (z.B. eth0, eth1, lo). Der Wert 'undefined' bedeutet, dass dieses Attribut f\u00FCr die Bestimmung der IP-Adresse nicht relevant ist.
interface.nic-match=Attribut, das anzeigt, dass in den Auswahlkriterien f\u00FCr die Bestimmung einer IP-Adresse f\u00FCr dieses Interface ber\u00FCcksichtigt werden sollte, ob das Netzwerk-Interface einen Namen tr\u00E4gt, der mit dem angegebenen regul\u00E4ren Ausdruck \u00FCbereinstimmt. Der Wert ist ein regul\u00E4rer Ausdruck, anhand dessen die Namen der auf dem Rechner verf\u00FCgbaren Interfaces \u00FCberpr\u00FCft werden, um ein passendes Interface zu finden. Der Wert 'undefined' bedeutet, dass dieses Attribut f\u00FCr die Bestimmung der IP-Adresse nicht relevant ist.
interface.point-to-point=Attribut, das anzeigt, dass in den Auswahlkriterien f\u00FCr die Bestimmung einer IP-Adresse f\u00FCr dieses Interface ber\u00FCcksichtigt werden sollte, ob das Netzwerk-Interface ein Punkt-zu-Punkt-Interface ist. Der Wert 'undefined' oder 'false' bedeutet, dass dieses Attribut f\u00FCr die Bestimmung der IP-Adresse nicht relevant ist.
interface.public-address=Attribut, das anzeigt, dass in den Auswahlkriterien f\u00FCr die Bestimmung einer IP-Adresse f\u00FCr dieses Interface ber\u00FCcksichtigt werden sollte, ob die Adresse eine \u00F6ffentlich routbare Adresse ist. Der Wert 'undefined' oder 'false' bedeutet, dass dieses Attribut f\u00FCr die Bestimmung der IP-Adresse nicht relevant ist.
interface.site-local-address=Attribut, das anzeigt, dass in den Auswahlkriterien f\u00FCr die Bestimmung einer IP-Adresse f\u00FCr dieses Interface ber\u00FCcksichtigt werden sollte, ob die Adresse eine standortlokale Adresse ist. Der Wert 'undefined' oder 'false' bedeutet, dass dieses Attribut f\u00FCr die Bestimmung der IP-Adresse nicht relevant ist.
interface.subnet-match=Attribut, das anzeigt, dass in den Auswahlkriterien f\u00FCr die Bestimmung einer IP-Adresse f\u00FCr dieses Interface ber\u00FCcksichtigt werden sollte, ob die Adresse in die angegebene Subnetz-Definition passt. Der Wert ist eine Netzwerk-IP-Adresse und die Anzahl der Bits im Netzwerkpr\u00E4fix der Adresse, ausgedr\u00FCckt in Schr\u00E4gstrich-Schreibweise, also z.B. "192.168.0.0/16". Der Wert 'undefined' bedeutet, dass dieses Attribut f\u00FCr die Bestimmung der IP-Adresse nicht relevant ist.
interface.up=Attribut, das anzeigt, dass in den Auswahlkriterien f\u00FCr die Bestimmung einer IP-Adresse f\u00FCr dieses Interface ber\u00FCcksichtigt werden sollte, ob das Netzwerk-Interface derzeit aktiv ist. Der Wert 'undefined' oder 'false' bedeutet, dass dieses Attribut f\u00FCr die Bestimmung der IP-Adresse nicht relevant ist.
interface.virtual=Attribut, das anzeigt, dass in den Auswahlkriterien f\u00FCr die Bestimmung einer IP-Adresse f\u00FCr dieses Interface ber\u00FCcksichtigt werden sollte, ob das Netzwerk-Interface ein virtuelles Interface ist. Der Wert 'undefined' oder 'false' bedeutet, dass dieses Attribut f\u00FCr die Bestimmung der IP-Adresse nicht relevant ist.
interface.not=Attribut, das anzeigt, dass in den Auswahlkriterien f\u00FCr die Bestimmung einer IP-Adresse f\u00FCr dieses Interface ber\u00FCcksichtigt werden sollte, ob die IP-Adresse *kein* Kriterium innerhalb einer Gruppe verschachtelter Kriterien erf\u00FCllt. Der Wert des Attributs ist eine Gruppe von Kriterien (z.B. 'loopback'), deren normale Bedeutung umgekehrt wird. Der Wert 'undefined' bedeutet, dass dieses Attribut f\u00FCr die Bestimmung der IP-Adresse nicht relevant ist.
interface.any=Attribut, das anzeigt, dass in den Auswahlkriterien f\u00FCr die Bestimmung einer IP-Adresse f\u00FCr dieses Interface ber\u00FCcksichtigt werden sollte, ob das Netzwerk-Interface mindestens ein Kriterium innerhalb einer Gruppe verschachtelter Kriterien erf\u00FCllt, jedoch nicht notwendigerweise alle. Der Wert des Attributs ist eine Gruppe von Kriterien. Der Wert 'undefined' bedeutet, dass dieses Attribut f\u00FCr die Bestimmung der IP-Adresse nicht relevant ist.
socket-binding-group=Enth\u00E4lt eine Liste von Socket-Konfigurationen.
socket-binding-group.name=Der Name der Socket-Binding-Gruppe. 
socket-binding-group.default-interface=Name eines Interface, das als Interface f\u00FCr Sockets verwenden soll, die keines explizit deklariert haben. 
socket-binding-group.socket-binding=Die individuellen Socket-Konfigurationen.
socket-binding-group.port-offset=Erh\u00F6hen, um die in den Socket-Bindings definierten Basis-Portwerte anzuwenden, um die f\u00FCr diesen Server zu verwendenden Runtime-Werte abzuleiten.
socket-binding-group.includes=Eine Liste von Socket-Binding-Gruppennamen, deren Bindings in dieser socket-binding-group enthalten sein sollen. Das Standard-Inteface dieser Binding-Gruppe wird an allen eingeschlossenen Bindings angewendet, die kein Interface festlegen.
socket-binding-group.add=F\u00FCgt eine Socket-Binding-Gruppe hinzu.
socket-binding-group.remove=Entfernt eine Socket-Binding-Gruppe.
socket-binding-group.include.add=F\u00FCgt dem 'includes'-Attribut der Socket Binding Gruppe eine Socket Binding Gruppe hinzu. 
socket-binding-group.include.add.include=Der Name der Socket-Binding-Gruppe, die enthalten sein soll.  
socket-binding-group.include.remove=Entfernt eine  Socket-Binding-Gruppe aus dem 'includes'-Attribut der Socket-Binding-Gruppe.
socket-binding-group.include.remove.include=Der Name der Socket-Binding-Gruppe, die nicht mehr l\u00E4nger enthalten sein soll.  
socket-binding=Konfigurationsinformationen f\u00FCr ein Socket.
socket-binding.name=Der Name des Socket. Dienste, die auf die Konfigurationsinformationen des Sockets zugreifen m\u00FCssen, finden es \u00FCber diesen Namen.
socket-binding.interface=Name des Interface, an das das Socket gebunden werden sollte, oder - bei Multicast Sockets - das Interface, an dem gehor cht werden soll. Es sollte sich dabei um eines der deklarierten Interfaces handeln.
socket-binding.port=Nummer des Ports, an den das Socket gebunden werden sollte.
socket-binding.fixed-port=Ob der Port-Wert unver\u00E4ndert bleiben soll, selbst wenn nummerische Offsets auf andere Sockets in der Socket-Gruppe angewendet werden.
socket-binding.multicast-address=Multicast-Adresse, an der das Socket Multicast-Traffic empfangen soll. Falls nicht festgelegt, so wird das Socket nicht konfiguriert, um Multicast zu empfangen.
socket-binding.multicast-port=Port, an dem das Socket Multicast-Traffic empfangen soll. Muss  konfiguriert sein, wenn 'multicast-address' konfiguriert ist.
socket-binding.add=F\u00FCgt der Gruppe eine Socket-Binding-Konfiguration hinzu.
socket-binding.remove=Entfernt eine Socket-Binding-Konfiguration aus der Gruppe.
socket-binding.bound=Ob ein tats\u00E4chliches Socket, das diese Socket-Binding-Konfiguration verwendet, gebunden wurde.
socket-binding.bound-address=Die Adresse, an die das tats\u00E4chliche Socket, das diese Socket-Binding-Konfiguration verwendet gebunden wurde oder undefiniert, falls kein Socket gebunden wurde.
socket-binding.bound-port=Der Port, an an den das tats\u00E4chliche Socket, das diese Socket-Binding-Konfiguration verwendet gebunden wurde oder undefiniert, falls kein Socket gebunden wurde.
socket-binding.client-mappings=Spezifiziert null oder mehr Client-Mappings f\u00FCr dieses Socket-Binding. Ein Client, der sich mit diesem Socket verbindet, sollte die im Mapping angegebene Zieladresse verwenden, die mit dem gew\u00FCnschten ausgehenden Interface \u00FCbereinstimmt. Dies erm\u00F6glicht fortgeschrittene Netzwerktopologien, die entweder Netzwerkadressen\u00FCbersetzung oder Bindings auf mehreren Netzwerk-Interfaces nutzen, um zu funtionieren. Jedes Mapping sollte in einer deklarierten Reihenfolge untersucht werden, so dass die erste erfolgreiche \u00DCbereinstimmung das Ziel bestimmt.
socket-binding.client-mappings.source-network=Quellnetzwerk, mit der sich die Client-Verbindung verbindet. Dieser Wert hat das Format IP/Netzmaske. Ein Client sollte diesen Wert mit dem gew\u00FCnschten Client-Hostnetzwerk-Interface vergleichen und , falls diese \u00FCbereinstimmen, mit den entsprechenden Zielwerten verbinden. Falls weggelassen, stimmt dieses Mapping mit jedem Interface \u00FCberein.
socket-binding.client-mappings.destination-address=Die Zieladresse, mit der ein Client verbinden sollte, falls das Quellnetzwerk \u00FCbereinstimmt. Dieser Wert kann entweder ein Hostname oder eine IP-Adresse sein.
socket-binding.client-mappings.destination-port=Der Zielport, mit dem ein Client verbinden sollte, falls das Quellnetzwerk \u00FCbereinstimmt. Falls weggelassen, kann dieses Mapping den effektiven Socket-Binding-Port wiederverwenden.
remote-destination-outbound-socket-binding=Konfigurationsinformationen f\u00FCr ein ausgehendes Socket-Binding f\u00FCr ein Remote-Ziel.
remote-destination-outbound-socket-binding.name=Name des Outbound-Socket-Bindings. Dienste, die auf Socket-Konfigurationsinformationen zugreifen m\u00FCssen, finden diese unter diesem Namen.
remote-destination-outbound-socket-binding.source-interface=Der Name des Interface, das f\u00FCr die Quelladresse des Outbound-Socket verwendet wird.
remote-destination-outbound-socket-binding.source-port=Die Portnummer, die als Quell-Port des Outbound-Socket verwendet wird.
remote-destination-outbound-socket-binding.host=Der Hostname oder die IP-Adresse des Remote-Ziels, mit dem sich dieses ausgehende Socket verbinden wird.
remote-destination-outbound-socket-binding.port=Die Portnumber des Remote-Ziels, mit dem sich das ausgehende Socket verbinden sollte.
remote-destination-outbound-socket-binding.add=F\u00FCgt der Socket Binding Gruppe ein remotes Outbound Socket Binding hinzu. 
remote-destination-outbound-socket-binding.remove=Entfernt ein remotes Outbound Socket Binding aus der Socket Binding Gruppe. 
remote-destination-outbound-socket-binding.fixed-source-port=Ob der Port-Wert unver\u00E4ndert bleiben soll, selbst wenn nummerische Offsets auf andere ausgehende Sockets in der Socket-Gruppe angewendet werden.
local-destination-outbound-socket-binding=Konfigurationsinformationen f\u00FCr ein ausgehendes Socket-Binding f\u00FCr ein lokales Ziel.
local-destination-outbound-socket-binding.name=Name des Outbound-Socket-Bindings. Dienste, die auf Socket-Konfigurationsinformationen zugreifen m\u00FCssen, finden diese unter diesem Namen.
local-destination-outbound-socket-binding.source-interface=Der Name des Interface, das f\u00FCr die Quelladresse des Outbound-Socket verwendet wird.
local-destination-outbound-socket-binding.source-port=Die Portnummer, die als Quell-Port des Outbound-Socket verwendet wird.
local-destination-outbound-socket-binding.socket-binding-ref=Der Name des local socket-binding, der verwendet wird, um den Port mit dem sich dieses Outbound Socket verbindet zu bestimmen.
local-destination-outbound-socket-binding.add=F\u00FCgt der Socket Binding Gruppe ein lokales Outbound Socket Binding hinzu. 
local-destination-outbound-socket-binding.remove=Entfernt ein lokales Outbound Socket Binding aus der Socket Binding Gruppe. 
local-destination-outbound-socket-binding.fixed-source-port=Ob der Port-Wert unver\u00E4ndert bleiben soll, selbst wenn nummerische Offsets auf andere ausgehende Sockets in der Socket-Gruppe angewendet werden.
subsystem.describe=Gibt das Untersystem als eine Liste von Operationen aus, die zur Erstellung des originalen Modells ausgef\u00FChrt werden kann
system-property.add=F\u00FCgt eine Systemeigenschaft hinzu oder aktualisiert eine bestehende. 
system-property.remove=Entfernt eine Systemeigenschaft.
system-property.value=Der Wert der Systemeigenschaft.
system-property.boottime=Falls 'true', wird die Systemeigenschaft auf der Befehlszeile an die gestartete Server-JVM \u00FCbergeben. Falls 'false', wird sie als Teil der Startsequenz an den Server \u00FCbertragen.
deployment=Ein Deployment repr\u00E4sentiert etwas, das auf einem Server bereitgestellt werden kann (z.B. eine Applikation wie EJB-JAR, WAR, EAR, jede Art von Standardarchiv wie z.B. RAR oder JBoss-spezifische Deployments).
deployment.name=Eindeutiger Bezeichner des Deployments. Muss \u00FCber alle Deployments hinweg eindeutig sein.
deployment.runtime-name=Name, unter dem das Deployment in der Laufzeit des Servers bekannt ist. Dies entspricht dem Dateinamen einer Deployment-Datei und bildet die Grundlage f\u00FCr die standardm\u00E4\u00DFigen Namen von z.B. der  Java Enterprise Edition Applikation und Modulen. Dies ist in der Regel dasselbe wie 'name', doch in einigen F\u00E4llen m\u00F6chten Benutzer u.U. zwei Deployments mit demselben 'runtime-name' (z.B. zwei Versionen von "foo.war") einsetzen, die beide im  Deployment-Inhaltsrepository verf\u00FCgbar sind. In diesem Fall brauchen die Deployments unterschiedliche 'name' Werte, tragen jedoch denselben 'runtime-name'.
deployment.content=Liste von Content-Teilen, aus denen das Deployment besteht.
deployment.hash=Der Hash verwalteter Deployment-Inhalte, die in das Deployment-Inhaltsrepository der Domain oder des eigenst\u00E4ndigen Servers hochgeladen wurden.
deployment.inputstream=Der Index der mit der Operation zusammenh\u00E4ngenden Eingabestreams von dem Eingabestream, der Deployment-Inhalte enth\u00E4lt, die in das Deployment-Inhaltsrepository der Domain oder des eigenst\u00E4ndigen Servers hochgeladen werden sollen.
deployment.enabled=Boolesche Variable, die anzeigt, ob der Deployment-Inhalt derzeit in der Laufzeit bereitgestellt wird (oder beim n\u00E4chsten Serverstart in der Laufzeit bereitgestellt werden sollte.)
deployment.persistent=Boolesche Variable, die anzeigt, ob das Vorhandensein des Deployments in der persistenten Serverkonfiguration aufgezeichnet werden soll. Nur relevant f\u00FCr eigenst\u00E4ndige Server. Standard ist 'true'. Bei einem Deployment, das von einem Deployment-Scanner verwaltet wird, ist dies auf 'false' gesetzt, um sicherzustellen, dass dieses Deployment beim Serverstart nur dann bereitgestellt wird, falls der Scanner das Deployment erkennt.
deployment.upload-bytes=Zeigt an, dass der Deployment-Inhalt im enthaltenen Byte-Array zum Deployment-Inhaltsrepository hinzugef\u00FCgt werden sollte. Beachten Sie, dass diese Operation nicht bedeutet, dass der Inhalt zur Laufzeit bereitzustellen ist.
deployment.bytes=Byte-Array, das die Deployment-Inhalte enth\u00E4lt, die in das Deployment-Inhaltsrepository der Domain oder des eigenst\u00E4ndigen Servers hochgeladen werden sollen.
deployment.upload-url=Zeigt an, dass der unter der angegebenen URL verf\u00FCgbare Deployment-Inhalt zum Deployment-Inhaltsrepository hinzugef\u00FCgt werden sollte. Beachten Sie, dass diese Operation nicht bedeutet, dass der Inhalt zur Laufzeit bereitzustellen ist.
deployment.url=Die URL, unter der die Deployment-Inhalte zum Hochladen in das Deployment-Inhaltsrepository der Domain oder des eigenst\u00E4ndigen Servers zur Verf\u00FCgung stehen. Beachten Sie, dass die URL vom Ziel der Operation aus (d.h. vom Domain-Controller oder eigenst\u00E4ndigen Server) erreichbar sein muss.
deployment.upload-stream=Zeigt an, dass der im enthaltenen Eingabestream verf\u00FCgbare Deployment-Inhalt zum Deployment-Inhaltsrepository hinzugef\u00FCgt werden sollte. Beachten Sie, dass diese Operation nicht bedeutet, dass der Inhalt zur Laufzeit bereitzustellen ist.
deployment.path=Pfad (relativ oder absolut) zu nicht verwaltetem Inhalt, der Teil des Deployments ist.
deployment.relative-to=Name eines Systempfads, zu dem der Wert 'path' relativ ist. Falls nicht angegeben, gilt 'path' als absolut.
deployment.archive=Flag, das anzeigt, ob nicht verwaltete Inhalte in einem Zip-Archiv (true) oder entpackt (false) vorliegt.
deployment.add=F\u00FCgt vorher hochgeladene Inhalte zur Liste der verf\u00FCgbaren Inhalte hinzu. Stellt den Inhalt jedoch nicht bereit, es sei denn, der 'enabled' Parameter ist auf 'true' gesetzt.
deployment.deploy=Bereitstellen der spezifizierten Deployment-Inhalte zur Laufzeit, wobei optional vorhandene Inhalte ersetzt werden.
deployment.deploy.name=Der Name des neuen Inhalts.
deployment.deploy.to-replace=Der Name des zu ersetzenden Inhalts.
deployment.replace=Ersetzen Sie den bestehenden Inhalt zur Laufzeit durch neuen Inhalt. Der neue Inhalt muss zuvor im Deployment Content Repository hochgeladen worden sein.
deployment.replace.name=Der Name des neuen Inhalts.
deployment.replace.to-replace=Der Name des zu ersetzenden Inhalts.
deployment.full-replace=Hinzuf\u00FCgen vorher hochgeladener Deployment-Inhalte zur Liste der verf\u00FCgbaren Inhalte, Ersetzen vorhandener Inhalte desselben Namens in der Laufzeit, und Entfernen des ersetzten Inhalts von der Liste der verf\u00FCgbaren Inhalte. Die ist \u00E4quivalent zu einer 'add', 'undeploy', 'deploy', 'remove' Sequenz, wobei der neue Inhalt denselben Namen tr\u00E4gt wie der ersetzte Inhalt. Nur genau einer der Parameter 'runtime-name', 'hash', 'input-stream-index', 'bytes' oder 'url' muss spezifiziert werden.
deployment.undeploy=Undeployment von Inhalten aus der Laufzeit. Der Inhalt verbleibt in der Liste der verf\u00FCgbaren Inhalte.
deployment.redeploy=Undeployment von bestehenden Inhalten aus der Laufzeit und deren erneutes Deployment.
deployment.status=Der aktuelle Laufzeitstatus eines Deployments. M\u00F6gliche Status-Modi sind OK, FAILED und STOPPED. FAILED zeigt an, dass eine Abh\u00E4ngigkeit fehlt oder ein Dienst nicht starten k\u00F6nnte. STOPPED zeigt an, dass das Deployment nicht aktiviert war oder manuell gestoppt wurde. 
deployment.subsystem=Laufzeitressourcen erstellt bei der Bereitstellung des Deployments, organisiert nach dem Subsystem, das f\u00FCr die Laufzeitressource zust\u00E4ndig ist.
deployment.subdeployment=Laufzeitressourcen verkn\u00FCpft mit einem untergeordneten Deployment, das innerhalb eines anderen Deployments liegt; z.B. ein War innerhalb eines Ear.
global.read-attribute=Ruft den Wert eines Attributs f\u00FCr die gew\u00E4hlte Ressource ab
global.read-attribute.name=Der Name des Attributs, f\u00FCr das unter der gew\u00E4hlten Ressource der Wert abzurufen ist
global.read-attribute.include-defaults=Boolesche Variable zum Aktivieren/Deaktivieren der standardm\u00E4\u00DFigen Leseoperation. Falls 'false', werden nur die von Benutzern festgelegten Attribute zur\u00FCckgegeben, wobei 'undefined' ignoriert wird.
global.read-attribute.reply=Der Wert des Attributs. Der Typ ist derselbe, wie der des gefundenen Attributs 
global.read-children-names=Ruft die Namen aller untergeordneten Objekte unter der ausgew\u00E4hlten Ressource vom angegebenen Typ ab
global.read-children-names.child-type=Der Name des Knotens, unter dem sich die untergeordneten Namen befinden
global.read-children-names.reply=Die Namen der untergeordneten Objekte
global.read-children-types=Ruft die Typennamen aller untergeordneten Objekte unter der ausgew\u00E4hlten Ressource ab
global.read-children-types.reply=Die  Typen der untergeordneten Objekte
global.read-children-resources=Liest Informationen zu allen untergeordneten Objekten eines bestimmten Typs einer Ressource
global.read-children-resources.child-type=Der Name der Ressource, unter der die untergeordneten Ressourcen abzurufen sind
global.read-children-resources.recursive=Ob untergeordnete Ressourcen rekursiv abzurufen sind. Falls weggelassen, ist der Standard 'false'
global.read-children-resources.recursive-depth=Der Umfang, in dem Informationen zu untergeordneten Ressourcen mit eingeschlossen werden sollten.
global.read-children-resources.proxies=Ob Remote-Ressourcen in einer rekursiven Abfrage eingeschlossen werden sollen (d.h. Ressourcen auf Host-Ebene in einer Abfrage der Domain-Root; laufende Server-Ressourcen in einer Abfrage auf einem Host). Falls weggelassen, ist der Standard 'false'
global.read-children-resources.include-runtime=Ob Laufzeitattribute (d.h. solche, deren Wert nicht aus der persistenten Konfiguration stammen) in der Antwort enthalten sein sollen. Falls weggelassen, ist der Standard 'false'. Wird ignoriert, falls der 'recursive' Parameter auf 'true' gesetzt ist; d.h. Laufzeitattribute k\u00F6nnen nur in nicht-rekursiven Abfragen gelesen werden.
global.read-children-resources.include-defaults=Boolesche Variable zum Aktivieren/Deaktivieren der standardm\u00E4\u00DFigen Leseoperation. Falls 'false', werden nur die von Benutzern festgelegten Attribute zur\u00FCckgegeben, wobei 'undefined' ignoriert wird.
global.read-children-resources.reply=Die untergeordneten Ressourcen
global.read-operation=Ruft die Details einer Operationen auf der gegebenen Ressource ab
global.read-operation.locale=Das Gebietsschema, in der die Operationsbeschreibung ausgegeben wird. Falls null, wird das standardm\u00E4\u00DFige Gebietsschema verwendet
global.read-operation.reply=Der Name der Operation, f\u00FCr die Details abzurufen sind
global.read-operation.type=Die Beschreibung der Operation. 'undefined', falls nicht gefunden
global.read-operation-names=Ruft die Namen aller Operationen f\u00FCr die gegebene Ressource ab
global.read-operation-names.reply=Die Namen der Operationen
global.read-resource=Liest die Attributwerte einer Modellressource samt einfacher oder vollst\u00E4ndiger Informationen \u00FCber untergeordnete Ressourcen auf
global.read-resource.recursive=Ob vollst\u00E4ndige Informationen \u00FCber untergeordnete Ressourcen enthalten sein sollen. Falls weggelassen, ist der Standard 'false'
global.read-resource.recursive-depth=Der Umfang, in dem Informationen zu untergeordneten Ressourcen mit eingeschlossen werden sollten.
global.read-resource.proxies=Ob Remote-Ressourcen in einer rekursiven Abfrage eingeschlossen werden sollen (d.h. Ressourcen auf Host-Ebene in einer Abfrage der Domain-Root; laufende Server-Ressourcen in einer Abfrage auf einem Host). Falls weggelassen, ist der Standard 'false'.
global.read-resource.include-runtime=Ob Laufzeitattribute (d.h. solche, deren Wert nicht aus der persistenten Konfiguration stammen) in der Antwort enthalten sein sollen. Falls weggelassen, ist der Standard 'false'.
global.read-resource.include-defaults=Boolesche Variable zum Aktivieren/Deaktivieren der standardm\u00E4\u00DFigen Leseoperation. Falls 'false', werden nur die von Benutzern festgelegten Attribute zur\u00FCckgegeben, wobei 'undefined' ignoriert wird.
global.read-resource.reply=Die Attributwerte einer Modellressource samt Informationen \u00FCber untergeordnete Ressourcen
global.read-resource-description=Ruft die Beschreibung von Attributen, Typen untergeordneter Objekte und optional Operationen einer Ressource ab
global.read-resource-description.locale=Das Gebietsschema, in der die Ressourcenbeschreibung ausgegeben wird. Falls null, wird das standardm\u00E4\u00DFige Gebietsschema verwendet
global.read-resource-description.operations=Ob Beschreibungen der Operationen der Ressource enthalten sein sollten. Standard ist "false".
global.read-resource-description.inherited=Falls 'operations' "true" ist, ob die vererbten Operationen der Ressource enthalten sein sollen. Standard ist "true".
global.read-resource-description.recursive=Ob rekursive Beschreibungen von untergeordneten Ressourcen enthalten sein sollen. Standard ist "false".
global.read-resource-description.proxies=Ob Remote-Ressourcen in einer rekursiven Abfrage eingeschlossen werden sollen (d.h. Ressourcen auf Host-Ebene in einer Abfrage der Domain-Root; laufende Server-Ressourcen in einer Abfrage auf einem Host). Falls weggelassen, ist der Standard 'false'
global.read-resource-description.recursive-depth=Der Umfang, in dem Informationen zu untergeordneten Ressourcen mit eingeschlossen werden sollten.
global.read-resource-description.reply=Die Beschreibung der Ressource.
global.undefine-attribute=Setzt den Wert eines Attributs der gew\u00E4hlten Ressource auf 'undefined'
global.undefine-attribute.name=Der Name des Attributs, das auf 'undefined' gesetzt werden soll
global.write-attribute=Setzt den Wert eines Attributs f\u00FC die gew\u00E4hlte Ressource 
global.write-attribute.name=Der Name des Attributs, f\u00FCr das unter der gew\u00E4hlten Ressource der Wert einzustellen ist
global.write-attribute.value=Der Wert des Attributs, f\u00FCr das unter der gew\u00E4hlten Ressource der Wert einzustellen ist. Kann null sein, falls das zugrunde liegende Modell Null-Werte unterst\u00FCtzt.
global.validate-address=Pr\u00FCft, ob eine Ressource mit der als Parameter \u00FCbergebenen Adresse existiert.
global.validate-address.value=Die zu pr\u00FCfende Adresse. 
global.validate-address.reply=Bericht der Adressenpr\u00FCfung.
global.validate-address.reply.valid=Zeigt an, ob eine Ressource mit der als Parameter \u00FCbergebenen Adresse existiert.
global.validate-address.reply.problem=Ist nur dann enthalten, wenn die Adresse nicht g\u00FCltig ist, und beschreibt den Fehler der Adresse.
global.validate-operation=Pr\u00FCft anhand der Beschreibung einer Operation, ob diese g\u00FCltig ist. Jegliche Fehler werden in der Fehlerbeschreibung der Operation angezeigt.
global.validate-operation.value=Die zu pr\u00FCfende Operation. 
root.composite=Eine Operation, die mehrere Operationsanfragen in eine einzelne Operationsanfrage zusammenfasst.
root.composite.steps=Eine Liste der Operationsanfragen, aus denen die zusammengefasste Anfrage besteht.
root.composite.reply=Eine Antwort auf eine zusammengefasste Operation, die aus allen schrittweisen Ergebnissen besteht.
read-config-as-xml=Liest die aktuelle Konfiguration und gibt sie im XML-Format wieder.
read-config-as-xml.response=Die XML-Form der persistenten Konfiguration.
jvm=Die JVM-Konfiguration f\u00FCr gemanagte Prozesse / Server.
jvm.add=Hinzuf\u00FCgen einer neuen JVM-Konfiguration.
jvm.remove=Entfernung einer JVM-Konfiguration.
jvm.name=Der Name der JVM-Konfiguration.
jvm.heap=Die von der JVM uspr\u00FCnglich zugewiesene Heap-Gr\u00F6\u00DFe.
jvm.heap.max=Die maximale Heap-Gr\u00F6\u00DFe die von der JVM ugewiesen werden kann.
jvm.permgen=Die initale Gr\u00F6\u00DFe der permanenten Generierung.
jvm.permgen.max=Die maximale Gr\u00F6\u00DFe der permanenten Generierung.
jvm.stack=Die Gr\u00F6\u00DFeneinstellungen des JVM-Stack. 
jvm.agent.lib=Die JVM Agent-lib.
jvm.agent.path=Der JVM Agent-Pfad.
jvm.javaagent=Der java-Agent.
jvm.option=Eine JVM-Option.
jvm.options=Die JVM-Optionen.
jvm.option.add=Hinzuf\u00FCgen einer jvm-Option.
jvm.option.remove=Entfernen einer jvm-Option.
jvm.env.variables=Die JVM-Umgebungsvariablen.
jvm.system.properties=Sie JVM-Systemeigenschaften.
jvm.java.home=Das java Home
jvm.type=Der JVM-Typ kann entweder SUN oder IBM sein
jvm.debug.enabled=Boolesche Variable, die anzeigt, ob Debugging aktiviert ist.
jvm.debug.options=Die Optionen zur Fehlerbehebung.
jvm.env.classpath.ignored=Ignorieren Sie den Umgebungs-Klassenpfad.
snapshot.delete.description=L\u00F6scht einen Schnappschuss aus dem Schnappschuss-Verzeichnis
snapshot.delete.name=Der Name des zu l\u00F6schenden Schnappschusses. Es wird nicht der gesamte Name ben\u00F6tigt, so lange der eingegebene Teil den Schnappschuss innerhalb des Schnappschuss-Verzeichnisses eindeutig identifiziert. Wird 'all' verwendet, so werden alle Schnappsch\u00FCsse im Schnappschuss-Verzeichnis gel\u00F6scht.
snapshot.list.description=Listet die Schnappsch\u00FCsse
snapshot.list.reply.dir=Das Verzeichnis, in dem die Schnappsch\u00FCsse aufbewahrt werden
snapshot.list.reply.names=Die Namen der Schnappsch\u00FCsse innerhalb des Schnappschuss-Verzeichnisses
snapshot.take.description=Macht einen Schnappschuss der aktuellen Konfiguration
snapshot.take.reply.name=Der Speicherort der Datei auf dem Rechner zu der die Konfiguration geh\u00F6rt
vault=Security Vault f\u00FCr Attribute.
vault.code=Vollst\u00E4ndiger Name der Security Vault Implementierung.
vault.option=Security Vault Option.
vault.options=Security Vault Optionen.
vault.add=F\u00FCgen Sie den Security Vault hinzu.
vault.remove=Entfernen Sie den Security Vault.
core.resolve-expression=Operation, die einen Ausdruck als Eingabe akzeptiert (oder einen String, der in einen Ausdruck umgewandelt werden kann) und diesen anhand der lokalen Systemeigenschaften und Umgebungsvariablen aufl\u00F6st.
core.resolve-expression.expression=Der aufzul\u00F6sende Ausdruck.
core.resolve-expression.reply=Der aufgel\u00F6ste Ausdruck oder die String-Form des urspr\u00FCnglichen Eingabewerts, falls dieser keinen Ausdruck repr\u00E4sentierte. 
