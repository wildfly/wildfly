{
    "model-description" => {
        "description" => "The messaging subsystem.",
        "attributes" => {},
        "operations" => undefined,
        "children" => {"hornetq-server" => {
            "description" => "A HornetQ server instance.",
            "model-description" => undefined
        }}
    },
    "address" => [("subsystem" => "messaging")],
    "children" => [{
        "model-description" => {
            "description" => "A HornetQ server instance.",
            "attributes" => {
                "shared-store" => {
                    "type" => BOOLEAN,
                    "description" => "Whether this server is using a shared store for failover.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => true
                },
                "thread-pool-max-size" => {
                    "type" => INT,
                    "description" => "The number of threads that the main thread pool has. -1 means no limit.",
                    "expressions-allowed" => true,
                    "nillable" => true,
                    "default" => 30
                },
                "clustered" => {
                    "type" => BOOLEAN,
                    "description" => "Whether the server is clustered.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => false
                },
                "remoting-interceptors" => {
                    "type" => LIST,
                    "description" => "The list of interceptor classes used by this server.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "value-type" => STRING
                },
                "create-bindings-dir" => {
                    "type" => BOOLEAN,
                    "description" => "Whether the server should create the bindings directory on start up.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => true
                },
                "journal-buffer-size" => {
                    "type" => LONG,
                    "description" => "The size of the internal buffer on the journal.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "unit" => "BYTES"
                },
                "security-invalidation-interval" => {
                    "type" => LONG,
                    "description" => "How long (in ms) to wait before invalidating the security cache.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => 10000L,
                    "unit" => "MILLISECONDS"
                },
                "message-counter-enabled" => {
                    "type" => BOOLEAN,
                    "description" => "Whether message counters are enabled.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => false
                },
                "journal-type" => {
                    "type" => STRING,
                    "description" => "The type of journal to use.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => "ASYNCIO",
                    "allowed" => [
                        "NIO",
                        "ASYNCIO"
                    ]
                },
                "journal-sync-transactional" => {
                    "type" => BOOLEAN,
                    "description" => "Whether to wait for transaction data to be synchronized to the journal before returning a response to the client.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => true
                },
                "journal-compact-min-files" => {
                    "type" => INT,
                    "description" => "The minimal number of journal data files before we can start compacting.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => 10
                },
                "log-journal-write-rate" => {
                    "type" => BOOLEAN,
                    "description" => "Whether to periodically log the journal's write rate and flush rate.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => false
                },
                "journal-max-io" => {
                    "type" => INT,
                    "description" => "The maximum number of write requests that can be in the AIO queue at any one time.",
                    "expressions-allowed" => false,
                    "nillable" => true
                },
                "scheduled-thread-pool-max-size" => {
                    "type" => INT,
                    "description" => "The number of threads that the main scheduled thread pool has.",
                    "expressions-allowed" => true,
                    "nillable" => true,
                    "default" => 5
                },
                "security-enabled" => {
                    "type" => BOOLEAN,
                    "description" => "Whether security is enabled.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => true
                },
                "memory-warning-threshold" => {
                    "type" => INT,
                    "description" => "Percentage of available memory which if exceeded results in a warning log",
                    "expressions-allowed" => true,
                    "nillable" => true,
                    "default" => 25,
                    "unit" => "PERCENTAGE"
                },
                "journal-compact-percentage" => {
                    "type" => INT,
                    "description" => "The percentage of live data on which we consider compacting the journal.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => 30,
                    "unit" => "PERCENTAGE"
                },
                "failover-on-shutdown" => {
                    "type" => BOOLEAN,
                    "description" => "Whether this backup server (if it is a backup server) should come live on a normal server shutdown.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => false
                },
                "cluster-user" => {
                    "type" => STRING,
                    "description" => "The user used by cluster connections to communicate between the clustered nodes.",
                    "expressions-allowed" => true,
                    "nillable" => true,
                    "default" => "HORNETQ.CLUSTER.ADMIN.USER",
                    "min-length" => 1L,
                    "max-length" => 2147483647L
                },
                "run-sync-speed-test" => {
                    "type" => BOOLEAN,
                    "description" => "Whether on startup to perform a diagnostic test on how fast your disk can sync. Useful when determining performance issues.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => false
                },
                "jmx-domain" => {
                    "type" => STRING,
                    "description" => "The JMX domain used to register internal HornetQ MBeans in the MBeanServer.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => "org.hornetq",
                    "min-length" => 1L,
                    "max-length" => 2147483647L
                },
                "transaction-timeout" => {
                    "type" => LONG,
                    "description" => "How long (in ms) before a transaction can be removed from the resource manager after create time.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => 300000L,
                    "unit" => "MILLISECONDS"
                },
                "cluster-password" => {
                    "type" => STRING,
                    "description" => "The password used by cluster connections to communicate between the clustered nodes.",
                    "expressions-allowed" => true,
                    "nillable" => true,
                    "default" => "CHANGE ME!!",
                    "min-length" => 1L,
                    "max-length" => 2147483647L
                },
                "create-journal-dir" => {
                    "type" => BOOLEAN,
                    "description" => "Whether the server should create the journal directory on start up.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => true
                },
                "message-counter-sample-period" => {
                    "type" => LONG,
                    "description" => "The sample period (in ms) to use for message counters.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => 10000L,
                    "unit" => "MILLISECONDS"
                },
                "connection-ttl-override" => {
                    "type" => LONG,
                    "description" => "If set, this will override how long (in ms) to keep a connection alive without receiving a ping.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => -1L,
                    "unit" => "MILLISECONDS"
                },
                "persistence-enabled" => {
                    "type" => BOOLEAN,
                    "description" => "Whether the server will use the file based journal for persistence.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => true
                },
                "allow-failback" => {
                    "type" => BOOLEAN,
                    "description" => "Whether this server will automatically shutdown if the original live server comes back up.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => true
                },
                "transaction-timeout-scan-period" => {
                    "type" => LONG,
                    "description" => "How often (in ms) to scan for timeout transactions.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => 1000L,
                    "unit" => "MILLISECONDS"
                },
                "persist-delivery-count-before-delivery" => {
                    "type" => BOOLEAN,
                    "description" => "Whether the delivery count is persisted before delivery. False means that this only happens after a message has been cancelled.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => false
                },
                "page-max-concurrent-io" => {
                    "type" => INT,
                    "description" => "The maximum number of concurrent reads allowed on paging",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => 5
                },
                "journal-min-files" => {
                    "type" => INT,
                    "description" => "How many journal files to pre-create.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => 2
                },
                "management-notification-address" => {
                    "type" => STRING,
                    "description" => "The name of the address that consumers bind to  to receive management notifications.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => "hornetq.notifications",
                    "min-length" => 1L,
                    "max-length" => 2147483647L
                },
                "journal-buffer-timeout" => {
                    "type" => LONG,
                    "description" => "The timeout (in nanoseconds) used to flush internal buffers on the journal.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "unit" => "MILLISECONDS"
                },
                "management-address" => {
                    "type" => STRING,
                    "description" => "Address to send management messages to.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => "jms.queue.hornetq.management",
                    "min-length" => 1L,
                    "max-length" => 2147483647L
                },
                "journal-file-size" => {
                    "type" => LONG,
                    "description" => "The size (in bytes) of each journal file.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => 10485760,
                    "unit" => "BYTES"
                },
                "journal-sync-non-transactional" => {
                    "type" => BOOLEAN,
                    "description" => "Whether to wait for non transaction data to be synced to the journal before returning a response to the client.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => true
                },
                "persist-id-cache" => {
                    "type" => BOOLEAN,
                    "description" => "Whether IDs are persisted to the journal.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => true
                },
                "backup" => {
                    "type" => BOOLEAN,
                    "description" => "Whether this server is a backup server.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => false
                },
                "jmx-management-enabled" => {
                    "type" => BOOLEAN,
                    "description" => "Whether HornetQ should expose its internal management API via JMX. This is not recommended, as accessing these MBeans can lead to inconsistent configuration.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => false
                },
                "async-connection-execution-enabled" => {
                    "type" => BOOLEAN,
                    "description" => "Whether incoming packets on the server should be handed off to a thread from the thread pool for processing. False if they should be handled on the remoting thread.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => true
                },
                "perf-blast-pages" => {
                    "type" => INT,
                    "description" => "TODO",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => -1
                },
                "memory-measure-interval" => {
                    "type" => LONG,
                    "description" => "Frequency to sample JVM memory in ms (or -1 to disable memory sampling)",
                    "expressions-allowed" => true,
                    "nillable" => true,
                    "default" => -1L,
                    "unit" => "MILLISECONDS"
                },
                "server-dump-interval" => {
                    "type" => LONG,
                    "description" => "How often to dump basic runtime information to the server log. A value less than 1 disables this feature.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => -1L,
                    "unit" => "MILLISECONDS"
                },
                "message-expiry-thread-priority" => {
                    "type" => INT,
                    "description" => "The priority of the thread expiring messages.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => 3
                },
                "live-connector-ref" => {
                    "type" => STRING,
                    "description" => "The name of the connector used to connect to the live connector. If this server is not a backup that uses shared nothing HA, it's value is \"undefined\".",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "min-length" => 1L,
                    "max-length" => 2147483647L
                },
                "failback-delay" => {
                    "type" => LONG,
                    "description" => "How long to wait before failback occurs on live server restart.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => 5000L,
                    "unit" => "MILLISECONDS"
                },
                "id-cache-size" => {
                    "type" => INT,
                    "description" => "The size of the cache for pre-creating message IDs.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => 2000
                },
                "security-domain" => {
                    "type" => STRING,
                    "description" => "The security domain to use to verify user and role information",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => "other",
                    "min-length" => 1L,
                    "max-length" => 2147483647L
                },
                "message-expiry-scan-period" => {
                    "type" => LONG,
                    "description" => "How often (in ms) to scan for expired messages.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => 30000L,
                    "unit" => "MILLISECONDS"
                },
                "wild-card-routing-enabled" => {
                    "type" => BOOLEAN,
                    "description" => "Whether the server supports wild card routing.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => true
                },
                "message-counter-max-day-history" => {
                    "type" => INT,
                    "description" => "How many days to keep message counter history.",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "default" => 10,
                    "unit" => "DAYS"
                }
            },
            "operations" => undefined,
            "children" => {
                "in-vm-acceptor" => {
                    "description" => "Defines a way in which in-VM connections can be made to the HornetQ server.",
                    "model-description" => undefined
                },
                "jms-queue" => {
                    "description" => "Defines a JMS queue.",
                    "model-description" => undefined
                },
                "security-setting" => {
                    "description" => "A security setting allows sets of permissions to be defined against queues based on their address.",
                    "model-description" => undefined
                },
                "remote-connector" => {
                    "description" => "Used by a remote client to define how it connects to a server.",
                    "model-description" => undefined
                },
                "remote-acceptor" => {
                    "description" => "Defines a way in which remote connections can be made to the HornetQ server.",
                    "model-description" => undefined
                },
                "grouping-handler" => {
                    "description" => "Makes decisions about which node in a cluster should handle a message with a group id assigned.",
                    "model-description" => undefined
                },
                "address-setting" => {
                    "description" => "An address setting defines some attributes that are defined against an address wildcard rather than a specific queue.",
                    "model-description" => undefined
                },
                "acceptor" => {
                    "description" => "An acceptor defines a way in which connections can be made to the HornetQ server.",
                    "model-description" => undefined
                },
                "jms-topic" => {
                    "description" => "Defines a JMS topic.",
                    "model-description" => undefined
                },
                "cluster-connection" => {
                    "description" => "Cluster connections group servers into clusters so that messages can be load balanced between the nodes of the cluster.",
                    "model-description" => undefined
                },
                "in-vm-connector" => {
                    "description" => "Used by an in-VM client to define how it connects to a server.",
                    "model-description" => undefined
                },
                "connection-factory" => {
                    "description" => "Defines a connection factory.",
                    "model-description" => undefined
                },
                "divert" => {
                    "description" => "A messaging resource that allows you to transparently divert messages routed to one address to some other address, without making any changes to any client application logic.",
                    "model-description" => undefined
                },
                "broadcast-group" => {
                    "description" => "A broadcast group is the means by which a server broadcasts connectors over the network.",
                    "model-description" => undefined
                },
                "queue" => {
                    "description" => "A Queue.",
                    "model-description" => undefined
                },
                "path" => {
                    "description" => "A filesystem path pointing to one of the locations where HornetQ stores persistent data.",
                    "model-description" => undefined,
                    "min-occurs" => 4,
                    "max-occurs" => 4
                },
                "bridge" => {
                    "description" => "The function of a bridge is to consume messages from a source queue, and forward them to a target address, typically on a different HornetQ server.",
                    "model-description" => undefined
                },
                "discovery-group" => {
                    "description" => "Multicast group to listen to receive broadcast from other servers announcing their connectors.",
                    "model-description" => undefined
                },
                "pooled-connection-factory" => {
                    "description" => "Defines a managed connection factory.",
                    "model-description" => undefined
                },
                "connector" => {
                    "description" => "A connector can be used by a client to define how it connects to a server.",
                    "model-description" => undefined
                },
                "connector-service" => {
                    "description" => "TODO",
                    "model-description" => undefined
                }
            }
        },
        "address" => [
            ("subsystem" => "messaging"),
            ("hornetq-server" => "*")
        ],
        "children" => [
            {
                "model-description" => {
                    "description" => "Defines a way in which in-VM connections can be made to the HornetQ server.",
                    "attributes" => {
                        "server-id" => {
                            "type" => INT,
                            "description" => "The server id.",
                            "expressions-allowed" => false,
                            "nillable" => false
                        },
                        "started" => {
                            "description" => "Whether this acceptor is started.",
                            "type" => BOOLEAN,
                            "nillable" => false
                        }
                    },
                    "children" => {"param" => {
                        "description" => "A key-value pair understood by the acceptor factory-class and used to configure it.",
                        "min-occurs" => 0,
                        "model-description" => undefined
                    }}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("in-vm-acceptor" => "*")
                ],
                "children" => [{
                    "model-description" => {
                        "description" => "A parameter",
                        "attributes" => {"value" => {
                            "type" => STRING,
                            "description" => "The parameter value"
                        }}
                    },
                    "address" => [
                        ("subsystem" => "messaging"),
                        ("hornetq-server" => "*"),
                        ("in-vm-acceptor" => "*"),
                        ("param" => "*")
                    ]
                }]
            },
            {
                "model-description" => {
                    "description" => "Defines a JMS queue.",
                    "attributes" => {
                        "entries" => {
                            "type" => LIST,
                            "description" => "The jndi names the queue will be bound to.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "value-type" => STRING
                        },
                        "selector" => {
                            "type" => STRING,
                            "description" => "The queue selector.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "durable" => {
                            "type" => BOOLEAN,
                            "description" => "Whether the queue is durable or not.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => true
                        },
                        "queue-address" => {
                            "description" => "The queue address defines what address is used for routing messages.",
                            "type" => STRING,
                            "nillable" => false
                        },
                        "expiry-address" => {
                            "description" => "The address to send expired messages to.",
                            "type" => STRING,
                            "nillable" => true
                        },
                        "dead-letter-address" => {
                            "description" => "The address to send dead messages to.",
                            "type" => STRING,
                            "nillable" => true
                        },
                        "paused" => {
                            "description" => "Whether the queue is paused.",
                            "type" => BOOLEAN,
                            "nillable" => false
                        },
                        "temporary" => {
                            "description" => "Whether the queue is temporary.",
                            "type" => BOOLEAN,
                            "nillable" => false
                        },
                        "message-count" => {
                            "description" => "The number of messages currently in this queue.",
                            "type" => LONG,
                            "nillable" => false,
                            "unit" => "NONE"
                        },
                        "scheduled-count" => {
                            "description" => "The number of scheduled messages in this queue.",
                            "type" => LONG,
                            "nillable" => false,
                            "unit" => "NONE"
                        },
                        "consumer-count" => {
                            "description" => "The number of consumers consuming messages from this queue.",
                            "type" => INT,
                            "nillable" => false,
                            "unit" => "NONE"
                        },
                        "delivering-count" => {
                            "description" => "The number of messages that this queue is currently delivering to its consumers.",
                            "type" => INT,
                            "nillable" => false,
                            "unit" => "NONE"
                        },
                        "messages-added" => {
                            "description" => "The number of messages added to this queue since it was created.",
                            "type" => LONG,
                            "nillable" => false,
                            "unit" => "NONE"
                        }
                    },
                    "operations" => undefined,
                    "children" => {}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("jms-queue" => "*")
                ]
            },
            {
                "model-description" => {
                    "description" => "A security setting allows sets of permissions to be defined against queues based on their address.",
                    "children" => {"role" => {
                        "description" => "A security role.",
                        "min-occurs" => 0,
                        "model-description" => undefined
                    }}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("security-setting" => "*")
                ],
                "children" => [{
                    "model-description" => {
                        "description" => "A security role.",
                        "attributes" => {
                            "send" => {
                                "type" => BOOLEAN,
                                "description" => "This permission allows the user to send a message to matching addresses.",
                                "expressions-allowed" => false,
                                "nillable" => false,
                                "default" => false
                            },
                            "consume" => {
                                "type" => BOOLEAN,
                                "description" => "his permission allows the user to consume a message from a queue bound to matching addresses.",
                                "expressions-allowed" => false,
                                "nillable" => false,
                                "default" => false
                            },
                            "create-durable-queue" => {
                                "type" => BOOLEAN,
                                "description" => "This permission allows the user to create a durable queue.",
                                "expressions-allowed" => false,
                                "nillable" => false,
                                "default" => false
                            },
                            "delete-durable-queue" => {
                                "type" => BOOLEAN,
                                "description" => "This permission allows the user to delete a durable queue.",
                                "expressions-allowed" => false,
                                "nillable" => false,
                                "default" => false
                            },
                            "create-non-durable-queue" => {
                                "type" => BOOLEAN,
                                "description" => "This permission allows the user to create a temporary queue.",
                                "expressions-allowed" => false,
                                "nillable" => false,
                                "default" => false
                            },
                            "delete-non-durable-queue" => {
                                "type" => BOOLEAN,
                                "description" => "This permission allows the user to delete a temporary queue.",
                                "expressions-allowed" => false,
                                "nillable" => false,
                                "default" => false
                            },
                            "manage" => {
                                "type" => BOOLEAN,
                                "description" => "This permission allows the user to invoke management operations by sending management messages to the management address.",
                                "expressions-allowed" => false,
                                "nillable" => false,
                                "default" => false
                            }
                        }
                    },
                    "address" => [
                        ("subsystem" => "messaging"),
                        ("hornetq-server" => "*"),
                        ("security-setting" => "*"),
                        ("role" => "*")
                    ]
                }]
            },
            {
                "model-description" => {
                    "description" => "Used by a remote client to define how it connects to a server.",
                    "attributes" => {"socket-binding" => {
                        "type" => STRING,
                        "description" => "The socket binding reference.",
                        "expressions-allowed" => false,
                        "nillable" => false,
                        "min-length" => 1L,
                        "max-length" => 2147483647L
                    }},
                    "children" => {"param" => {
                        "description" => "A key-value pair understood by the connector factory-class and used to configure it.",
                        "min-occurs" => 0,
                        "model-description" => undefined
                    }}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("remote-connector" => "*")
                ],
                "children" => [{
                    "model-description" => {
                        "description" => "A parameter",
                        "attributes" => {"value" => {
                            "type" => STRING,
                            "description" => "The parameter value"
                        }}
                    },
                    "address" => [
                        ("subsystem" => "messaging"),
                        ("hornetq-server" => "*"),
                        ("remote-connector" => "*"),
                        ("param" => "*")
                    ]
                }]
            },
            {
                "model-description" => {
                    "description" => "Defines a way in which remote connections can be made to the HornetQ server.",
                    "attributes" => {
                        "socket-binding" => {
                            "type" => STRING,
                            "description" => "The socket binding reference.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "started" => {
                            "description" => "Whether this acceptor is started.",
                            "type" => BOOLEAN,
                            "nillable" => false
                        }
                    },
                    "children" => {"param" => {
                        "description" => "A key-value pair understood by the acceptor factory-class and used to configure it.",
                        "min-occurs" => 0,
                        "model-description" => undefined
                    }}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("remote-acceptor" => "*")
                ],
                "children" => [{
                    "model-description" => {
                        "description" => "A parameter",
                        "attributes" => {"value" => {
                            "type" => STRING,
                            "description" => "The parameter value"
                        }}
                    },
                    "address" => [
                        ("subsystem" => "messaging"),
                        ("hornetq-server" => "*"),
                        ("remote-acceptor" => "*"),
                        ("param" => "*")
                    ]
                }]
            },
            {
                "model-description" => {
                    "description" => "Makes decisions about which node in a cluster should handle a message with a group id assigned.",
                    "attributes" => {
                        "type" => {
                            "type" => STRING,
                            "description" => "Whether the handler is the single \"Local\" handler for the cluster, which makes handling decisions, or a \"Remote\" handler which converses with the local handler.",
                            "expressions-allowed" => false,
                            "nillable" => true
                        },
                        "grouping-handler-address" => {
                            "type" => STRING,
                            "description" => "A reference to a cluster connection and the address it uses.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "timeout" => {
                            "type" => INT,
                            "description" => "How long to wait for a handling decision to be made; an exception will be thrown during the send if this timeout is reached, ensuring that strict ordering is kept.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 5000,
                            "unit" => "MILLISECONDS"
                        }
                    },
                    "operations" => undefined,
                    "children" => {}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("grouping-handler" => "*")
                ]
            },
            {
                "model-description" => {
                    "description" => "An address setting defines some attributes that are defined against an address wildcard rather than a specific queue.",
                    "attributes" => {
                        "address-full-policy" => {
                            "type" => STRING,
                            "description" => "Determines what happens when an address where max-size-bytes is specified becomes full. (PAGE, DROP or BLOCK)",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => "PAGE",
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "dead-letter-address" => {
                            "type" => STRING,
                            "description" => "The dead letter address",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "last-value-queue" => {
                            "type" => BOOLEAN,
                            "description" => "Defines whether a queue only uses last values or not",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "max-delivery-attempts" => {
                            "type" => INT,
                            "description" => "Defines how many time a cancelled message can be redelivered before sending to the dead-letter-address",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 10
                        },
                        "max-size-bytes" => {
                            "type" => LONG,
                            "description" => "The max bytes size.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => -1L
                        },
                        "message-counter-history-day-limit" => {
                            "type" => INT,
                            "description" => "Day limit for the message counter history.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 0
                        },
                        "expiry-address" => {
                            "type" => STRING,
                            "description" => "Defines where to send a message that has expired.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "redelivery-delay" => {
                            "type" => LONG,
                            "description" => "Defines how long to wait before attempting redelivery of a cancelled message",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 0L
                        },
                        "redistribution-delay" => {
                            "type" => LONG,
                            "description" => "Defines how long to wait when the last consumer is closed on a queue before redistributing any messages",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => -1L
                        },
                        "page-max-cache-size" => {
                            "type" => INT,
                            "description" => "The number of page files to keep in memory to optimize IO during paging navigation.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 5
                        },
                        "page-size-bytes" => {
                            "type" => LONG,
                            "description" => "The paging size.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 10485760L
                        },
                        "send-to-dla-on-no-route" => {
                            "type" => BOOLEAN,
                            "description" => "If this parameter is set to true for that address, if the message is not routed to any queues it will instead be sent to the dead letter address (DLA) for that address, if it exists.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        }
                    }
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("address-setting" => "*")
                ]
            },
            {
                "model-description" => {
                    "description" => "An acceptor defines a way in which connections can be made to the HornetQ server.",
                    "attributes" => {
                        "factory-class" => {
                            "type" => STRING,
                            "description" => "The factory class.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "socket-binding" => {
                            "type" => STRING,
                            "description" => "The socket binding reference.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "started" => {
                            "description" => "Whether this acceptor is started.",
                            "type" => BOOLEAN,
                            "nillable" => false
                        }
                    },
                    "children" => {"param" => {
                        "description" => "A key-value pair understood by the acceptor factory-class and used to configure it.",
                        "min-occurs" => 0,
                        "model-description" => undefined
                    }}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("acceptor" => "*")
                ],
                "children" => [{
                    "model-description" => {
                        "description" => "A parameter",
                        "attributes" => {"value" => {
                            "type" => STRING,
                            "description" => "The parameter value"
                        }}
                    },
                    "address" => [
                        ("subsystem" => "messaging"),
                        ("hornetq-server" => "*"),
                        ("acceptor" => "*"),
                        ("param" => "*")
                    ]
                }]
            },
            {
                "model-description" => {
                    "description" => "Defines a JMS topic.",
                    "attributes" => {
                        "entries" => {
                            "type" => LIST,
                            "description" => "The jndi names the topic will be bound to.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "value-type" => STRING
                        },
                        "topic-address" => {
                            "description" => "The address the topic points to.",
                            "type" => STRING,
                            "nillable" => false
                        },
                        "temporary" => {
                            "description" => "Whether the topic is temporary.",
                            "type" => BOOLEAN,
                            "nillable" => false
                        },
                        "message-count" => {
                            "description" => "The number of messages currently in this queue.",
                            "type" => LONG,
                            "nillable" => false,
                            "unit" => "NONE"
                        },
                        "delivering-count" => {
                            "description" => "The number of messages that this queue is currently delivering to its consumers.",
                            "type" => INT,
                            "nillable" => false,
                            "unit" => "NONE"
                        },
                        "messages-added" => {
                            "description" => "The number of messages added to this queue since it was created.",
                            "type" => LONG,
                            "nillable" => false,
                            "unit" => "NONE"
                        },
                        "durable-message-count" => {
                            "description" => "The number of messages for all durable subscribers for this topic.",
                            "type" => INT,
                            "nillable" => false,
                            "unit" => "NONE"
                        },
                        "non-durable-message-count" => {
                            "description" => "The number of messages for all non-durable subscribers for this topic.",
                            "type" => INT,
                            "nillable" => false,
                            "unit" => "NONE"
                        },
                        "subscription-count" => {
                            "description" => "The number of (durable and non-durable) subscribers for this topic.",
                            "type" => INT,
                            "nillable" => false,
                            "unit" => "NONE"
                        },
                        "durable-subscription-count" => {
                            "description" => "The number of durable subscribers for this topic.",
                            "type" => INT,
                            "nillable" => false,
                            "unit" => "NONE"
                        },
                        "non-durable-subscription-count" => {
                            "description" => "The number of non-durable subscribers for this topic.",
                            "type" => INT,
                            "nillable" => false,
                            "unit" => "NONE"
                        }
                    },
                    "operations" => undefined,
                    "children" => {}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("jms-topic" => "*")
                ]
            },
            {
                "model-description" => {
                    "description" => "Cluster connections group servers into clusters so that messages can be load balanced between the nodes of the cluster.",
                    "attributes" => {
                        "cluster-connection-address" => {
                            "type" => STRING,
                            "description" => "Each cluster connection only applies to messages sent to an address that starts with this value.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "connector-ref" => {
                            "type" => STRING,
                            "description" => "The confirmation-window-size to use for the connection used to forward messages to a target node.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "min-large-message-size" => {
                            "type" => INT,
                            "description" => "The minimum size (in bytes) for a message before it is considered as a large message.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 102400,
                            "unit" => "BYTES"
                        },
                        "connection-ttl" => {
                            "type" => LONG,
                            "description" => "The maximum time (in milliseconds) for which the connections used by the cluster connections are considered alive (in the absence of heartbeat).",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 60000L,
                            "unit" => "MILLISECONDS"
                        },
                        "retry-interval" => {
                            "type" => LONG,
                            "description" => "The period in milliseconds between subsequent reconnection attempts, if the connection to the target server has failed.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 500L,
                            "unit" => "MILLISECONDS"
                        },
                        "retry-interval-multiplier" => {
                            "type" => BIG_DECIMAL,
                            "description" => "A multiplier to apply to the time since the last retry to compute the time to the next retry. This allows you to implement an exponential backoff between retry attempts.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 1.0
                        },
                        "max-retry-interval" => {
                            "type" => LONG,
                            "description" => "The maximum interval of time used to retry connections",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 2000L,
                            "unit" => "MILLISECONDS"
                        },
                        "reconnect-attempts" => {
                            "type" => INT,
                            "description" => "The total number of reconnect attempts the bridge will make before giving up and shutting down. A value of -1 signifies an unlimited number of attempts.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => -1
                        },
                        "use-duplicate-detection" => {
                            "type" => BOOLEAN,
                            "description" => "Whether the bridge will automatically insert a duplicate id property into each message that it forwards.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => true
                        },
                        "check-period" => {
                            "type" => LONG,
                            "description" => "The period (in milliseconds) between client failure check.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 30000L,
                            "unit" => "MILLISECONDS"
                        },
                        "call-timeout" => {
                            "type" => LONG,
                            "description" => "The timeout (in ms) for remote calls made by the cluster connection.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 30000L,
                            "unit" => "MILLISECONDS"
                        },
                        "forward-when-no-consumers" => {
                            "type" => BOOLEAN,
                            "description" => "Whether messages will be distributed round robin between other nodes of the cluster irrespective of whether there are matching or indeed any consumers on other nodes. If this is set to false (the default) then HornetQ will only forward messages to other nodes of the cluster if the address to which they are being forwarded has queues which have consumers, and if those consumers have message filters (selectors) at least one of those selectors must match the message.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "max-hops" => {
                            "type" => INT,
                            "description" => "The maximum number of times a message can be forwarded. HornetQ can be configured to also load balance messages to nodes which might be connected to it only indirectly with other HornetQ servers as intermediates in a chain.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 1
                        },
                        "confirmation-window-size" => {
                            "type" => INT,
                            "description" => "The confirmation-window-size to use for the connection used to forward messages to a target node.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 1048576,
                            "unit" => "BYTES"
                        },
                        "static-connectors" => {
                            "type" => LIST,
                            "description" => "The statically defined list of connectors to which this cluster connection will make connections. Must be undefined (null) if 'discovery-group-name' is defined.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "value-type" => STRING
                        },
                        "discovery-group-name" => {
                            "type" => STRING,
                            "description" => "The discovery group used to obtain the list of other servers in the cluster to which this cluster connection will make connections. Must be undefined (null) if 'static-connectors' is defined.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "allow-direct-connections-only" => {
                            "type" => BOOLEAN,
                            "description" => "Whether, if a node learns of the existence of a node that is more than 1 hop away, we do not create a bridge for direct cluster connection. Only relevant if 'static-connectors' is defined.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "node-id" => {
                            "description" => "The node ID used by this cluster connection.",
                            "type" => STRING,
                            "nillable" => false
                        },
                        "topology" => {
                            "description" => "The topology of the nodes that this cluster connection is aware of.",
                            "type" => STRING,
                            "nillable" => false
                        },
                        "started" => {
                            "description" => "Whether the cluster connection is started.",
                            "type" => BOOLEAN,
                            "nillable" => false
                        }
                    },
                    "operations" => undefined,
                    "children" => {}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("cluster-connection" => "*")
                ]
            },
            {
                "model-description" => {
                    "description" => "Used by an in-VM client to define how it connects to a server.",
                    "attributes" => {"server-id" => {
                        "type" => INT,
                        "description" => "The server id.",
                        "expressions-allowed" => false,
                        "nillable" => false
                    }},
                    "children" => {"param" => {
                        "description" => "A key-value pair understood by the connector factory-class and used to configure it.",
                        "min-occurs" => 0,
                        "model-description" => undefined
                    }}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("in-vm-connector" => "*")
                ],
                "children" => [{
                    "model-description" => {
                        "description" => "A parameter",
                        "attributes" => {"value" => {
                            "type" => STRING,
                            "description" => "The parameter value"
                        }}
                    },
                    "address" => [
                        ("subsystem" => "messaging"),
                        ("hornetq-server" => "*"),
                        ("in-vm-connector" => "*"),
                        ("param" => "*")
                    ]
                }]
            },
            {
                "model-description" => {
                    "description" => "Defines a connection factory.",
                    "attributes" => {
                        "connector" => {
                            "type" => OBJECT,
                            "description" => "Defines the connectors. These are stored in a map by connector name (with an undefined value).",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "value-type" => STRING
                        },
                        "entries" => {
                            "type" => LIST,
                            "description" => "The jndi names the connection factory should be bound to.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "value-type" => STRING
                        },
                        "auto-group" => {
                            "type" => BOOLEAN,
                            "description" => "Whether or not message grouping is automatically used",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "block-on-acknowledge" => {
                            "type" => BOOLEAN,
                            "description" => "True to set block on acknowledge.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "block-on-durable-send" => {
                            "type" => BOOLEAN,
                            "description" => "True to set block on durable send.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => true
                        },
                        "block-on-non-durable-send" => {
                            "type" => BOOLEAN,
                            "description" => "True to set block on non durable send.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "cache-large-message-client" => {
                            "type" => BOOLEAN,
                            "description" => "True to cache large messages.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "call-timeout" => {
                            "type" => LONG,
                            "description" => "The call time out.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 30000L,
                            "unit" => "MILLISECONDS"
                        },
                        "client-failure-check-period" => {
                            "type" => INT,
                            "description" => "The client failure check period.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 30000L,
                            "unit" => "MILLISECONDS"
                        },
                        "client-id" => {
                            "type" => STRING,
                            "description" => "The client id.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "compress-large-messages" => {
                            "type" => BOOLEAN,
                            "description" => "Whether large messages should be compressed.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "confirmation-window-size" => {
                            "type" => INT,
                            "description" => "The confirmation window size.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => -1,
                            "unit" => "BYTES"
                        },
                        "connection-ttl" => {
                            "type" => LONG,
                            "description" => "The connection ttl.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 60000L,
                            "unit" => "MILLISECONDS"
                        },
                        "consumer-max-rate" => {
                            "type" => INT,
                            "description" => "The consumer max rate.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => -1,
                            "unit" => "PER_SECOND"
                        },
                        "consumer-window-size" => {
                            "type" => INT,
                            "description" => "The consumer window size.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 1048576,
                            "unit" => "BYTES"
                        },
                        "discovery-group-name" => {
                            "type" => STRING,
                            "description" => "The discovery group name.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "discovery-initial-wait-timeout" => {
                            "type" => LONG,
                            "description" => "The discovery initial wait time out.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "unit" => "MILLISECONDS"
                        },
                        "dups-ok-batch-size" => {
                            "type" => INT,
                            "description" => "The dups ok batch size.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 1048576
                        },
                        "failover-on-initial-connection" => {
                            "type" => BOOLEAN,
                            "description" => "True to fail over on initial connection.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "failover-on-server-shutdown" => {
                            "type" => BOOLEAN,
                            "description" => "True to fail over on server shutdown.",
                            "expressions-allowed" => false,
                            "nillable" => true
                        },
                        "group-id" => {
                            "type" => STRING,
                            "description" => "The group id.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "ha" => {
                            "type" => BOOLEAN,
                            "description" => "Whether the connection factory supports High Availability.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "default" => false
                        },
                        "connection-load-balancing-policy-class-name" => {
                            "type" => STRING,
                            "description" => "Name of a class implementing a client-side load balancing policy that a client can use to load balance sessions across different nodes in a cluster.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => "org.hornetq.api.core.client.loadbalance.RoundRobinConnectionLoadBalancingPolicy",
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "max-retry-interval" => {
                            "type" => LONG,
                            "description" => "The max retry interval.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 2000L,
                            "unit" => "MILLISECONDS"
                        },
                        "min-large-message-size" => {
                            "type" => INT,
                            "description" => "The min large message size.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 102400,
                            "unit" => "BYTES"
                        },
                        "pre-acknowledge" => {
                            "type" => BOOLEAN,
                            "description" => "True to pre-acknowledge.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "producer-max-rate" => {
                            "type" => INT,
                            "description" => "The producer max rate.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => -1,
                            "unit" => "PER_SECOND"
                        },
                        "producer-window-size" => {
                            "type" => INT,
                            "description" => "The producer window size.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 65536,
                            "unit" => "BYTES"
                        },
                        "reconnect-attempts" => {
                            "type" => INT,
                            "description" => "The reconnect attempts.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 0
                        },
                        "retry-interval" => {
                            "type" => LONG,
                            "description" => "The retry interval.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 2000L,
                            "unit" => "MILLISECONDS"
                        },
                        "retry-interval-multiplier" => {
                            "type" => BIG_DECIMAL,
                            "description" => "The retry interval multiplier.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 1.0
                        },
                        "scheduled-thread-pool-max-size" => {
                            "type" => INT,
                            "description" => "The scheduled thread pool max size.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 5
                        },
                        "thread-pool-max-size" => {
                            "type" => INT,
                            "description" => "The thread pool max size.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 30
                        },
                        "transaction-batch-size" => {
                            "type" => INT,
                            "description" => "The transaction batch size.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 1048576
                        },
                        "use-global-pools" => {
                            "type" => BOOLEAN,
                            "description" => "True to use global pools.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => true
                        },
                        "factory-type" => {
                            "type" => STRING,
                            "description" => "The type of connection factory.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "allowed" => [
                                "GENERIC",
                                "QUEUE",
                                "TOPIC",
                                "XA_GENERIC",
                                "XA_QUEUE",
                                "XA_TOPIC"
                            ]
                        },
                        "initial-message-packet-size" => {
                            "description" => "The initial size of messages created through this factory.",
                            "type" => INT,
                            "nillable" => false,
                            "unit" => "BYTES"
                        }
                    },
                    "operations" => undefined,
                    "children" => {}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("connection-factory" => "*")
                ]
            },
            {
                "model-description" => {
                    "description" => "A messaging resource that allows you to transparently divert messages routed to one address to some other address, without making any changes to any client application logic.",
                    "attributes" => {
                        "routing-name" => {
                            "type" => STRING,
                            "description" => "Routing name of the divert",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "divert-address" => {
                            "type" => STRING,
                            "description" => "Address to divert from",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "forwarding-address" => {
                            "type" => STRING,
                            "description" => "Address to divert to",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "filter" => {
                            "type" => STRING,
                            "description" => "An optional filter string. If specified then only messages which match the filter expression specified will be diverted. The filter string follows the HornetQ filter expression syntax described in the HornetQ documentation.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "transformer-class-name" => {
                            "type" => STRING,
                            "description" => "The name of a class used to transform the message's body or properties before it is diverted.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "exclusive" => {
                            "type" => BOOLEAN,
                            "description" => "Whether the divert is exclusive, meaning that the message is diverted to the new address, and does not go to the old address at all.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        }
                    },
                    "operations" => undefined,
                    "children" => {}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("divert" => "*")
                ]
            },
            {
                "model-description" => {
                    "description" => "A broadcast group is the means by which a server broadcasts connectors over the network.",
                    "attributes" => {
                        "socket-binding" => {
                            "type" => STRING,
                            "description" => "The broadcast group socket binding.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "alternatives" => [
                                "group-address",
                                "group-port",
                                "local-bind-address",
                                "local-bind-port"
                            ],
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "local-bind-address" => {
                            "type" => STRING,
                            "description" => "The local bind address that the datagram socket is bound to. If you have multiple network interfaces on your server, you would specify which one you wish to use for broadcasts by setting this attribute. If this attribute is not specified then the socket will be bound to the wildcard address, an IP address chosen by the kernel.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "alternatives" => ["socket-binding"],
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "local-bind-port" => {
                            "type" => INT,
                            "description" => "The local port to which the datagram socket is bound. Normally you would just use the default value of -1 which signifies that an anonymous port should be used. This parameter is always specified in conjunction with local-bind-address.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => -1,
                            "alternatives" => ["socket-binding"]
                        },
                        "group-address" => {
                            "type" => STRING,
                            "description" => "The multicast address to which the data will be broadcast. It is a class D IP address in the range 224.0.0.0 to 239.255.255.255, inclusive. The address 224.0.0.0 is reserved and is not available for use.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "alternatives" => ["socket-binding"],
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "group-port" => {
                            "type" => INT,
                            "description" => "The UDP port number used for broadcasting.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "alternatives" => ["socket-binding"]
                        },
                        "broadcast-period" => {
                            "type" => LONG,
                            "description" => "The period in milliseconds between consecutive broadcasts.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 2000L,
                            "unit" => "MILLISECONDS"
                        },
                        "connectors" => {
                            "type" => LIST,
                            "description" => "Specifies the names of connectors that will be broadcast.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "value-type" => STRING
                        },
                        "started" => {
                            "description" => "Whether the broadcast group is started.",
                            "type" => BOOLEAN,
                            "nillable" => false
                        }
                    },
                    "operations" => undefined,
                    "children" => {}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("broadcast-group" => "*")
                ]
            },
            {
                "model-description" => {
                    "description" => "A Queue.",
                    "attributes" => {
                        "queue-address" => {
                            "type" => STRING,
                            "description" => "The queue address defines what address is used for routing messages.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "filter" => {
                            "type" => STRING,
                            "description" => "A queue message filter definition. An undefined or empty filter will match all messages.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "durable" => {
                            "type" => BOOLEAN,
                            "description" => "Defines whether the queue is durable.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => true
                        },
                        "id" => {
                            "description" => "The id of the queue.",
                            "type" => LONG,
                            "nillable" => false
                        },
                        "paused" => {
                            "description" => "Whether the queue is paused.",
                            "type" => BOOLEAN,
                            "nillable" => false
                        },
                        "temporary" => {
                            "description" => "Whether the queue is temporary.",
                            "type" => BOOLEAN,
                            "nillable" => false
                        },
                        "message-count" => {
                            "description" => "The number of messages currently in this queue.",
                            "type" => LONG,
                            "nillable" => false,
                            "unit" => "NONE"
                        },
                        "scheduled-count" => {
                            "description" => "The number of scheduled messages in this queue.",
                            "type" => LONG,
                            "nillable" => false,
                            "unit" => "NONE"
                        },
                        "consumer-count" => {
                            "description" => "The number of consumers consuming messages from this queue.",
                            "type" => INT,
                            "nillable" => false,
                            "unit" => "NONE"
                        },
                        "delivering-count" => {
                            "description" => "The number of messages that this queue is currently delivering to its consumers.",
                            "type" => INT,
                            "nillable" => false,
                            "unit" => "NONE"
                        },
                        "messages-added" => {
                            "description" => "The number of messages added to this queue since it was created.",
                            "type" => LONG,
                            "nillable" => false,
                            "unit" => "NONE"
                        }
                    },
                    "operations" => undefined,
                    "children" => {}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("queue" => "*")
                ]
            },
            {
                "model-description" => {
                    "description" => "The directory in which the message journal lives. The default is ${jboss.server.data.dir}/messaging/journal.",
                    "attributes" => {
                        "path" => {
                            "type" => STRING,
                            "description" => "The actual filesystem path. Treated as an absolute path, unless the 'relative-to' attribute is specified, in which case the value is treated as relative to that path. <p>If treated as an absolute path, the actual runtime pathname specified by the value of this attribute will be determined as follows: </p>If this value is already absolute, then the value is directly used.  Otherwise the runtime pathname is resolved in a system-dependent way.  On UNIX systems, a relative pathname is made absolute by resolving it against the current user directory. On Microsoft Windows systems, a relative pathname is made absolute by resolving it against the current directory of the drive named by the pathname, if any; if not, it is resolved against the current user directory.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "relative-to" => {
                            "type" => STRING,
                            "description" => "The name of another previously named path, or of one of the standard paths provided by the system. If 'relative-to' is provided, the value of the 'path' attribute is treated as relative to the path specified by this attribute. The standard paths provided by the system include:<ul><li>jboss.home - the root directory of the JBoss AS distribution</li><li>user.home - user's home directory</li><li>user.dir - user's current working directory</li><li>java.home - java installation directory</li><li>jboss.server.base.dir - root directory for an individual server instance</li><li>jboss.server.data.dir - directory the server will use for persistent data file storage</li><li>jboss.server.log.dir - directory the server will use for log file storage</li><li>jboss.server.tmp.dir - directory the server will use for temporary file storage</li><li>jboss.domain.servers.dir - directory under which a host controller will create the working area for individual server instances</li></ul>",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        }
                    },
                    "operations" => undefined,
                    "children" => {}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("path" => "journal-directory")
                ]
            },
            {
                "model-description" => {
                    "description" => "The function of a bridge is to consume messages from a source queue, and forward them to a target address, typically on a different HornetQ server.",
                    "attributes" => {
                        "queue-name" => {
                            "type" => STRING,
                            "description" => "The unique name of the local queue that the bridge consumes from.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "forwarding-address" => {
                            "type" => STRING,
                            "description" => "The address on the target server that the message will be forwarded to. If a forwarding address is not specified then the original destination of the message will be retained.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "ha" => {
                            "type" => BOOLEAN,
                            "description" => "Whether or not this bridge should support high availability. True means it will connect to any available server in a cluster and support failover.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "filter" => {
                            "type" => STRING,
                            "description" => "An optional filter string. If specified then only messages which match the filter expression specified will be forwarded. The filter string follows the HornetQ filter expression syntax described in the HornetQ documentation.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "transformer-class-name" => {
                            "type" => STRING,
                            "description" => "The name of a user-defined class which implements the org.hornetq.core.server.cluster.Transformer interface.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "min-large-message-size" => {
                            "type" => INT,
                            "description" => "The minimum size (in bytes) for a message before it is considered as a large message.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 102400,
                            "unit" => "BYTES"
                        },
                        "connection-ttl" => {
                            "type" => LONG,
                            "description" => "The maximum time (in milliseconds) for which the connections used by the bridges are considered alive (in the absence of heartbeat).",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 60000L,
                            "unit" => "MILLISECONDS"
                        },
                        "retry-interval" => {
                            "type" => LONG,
                            "description" => "The period in milliseconds between subsequent reconnection attempts, if the connection to the target server has failed.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 2000L,
                            "unit" => "MILLISECONDS"
                        },
                        "retry-interval-multiplier" => {
                            "type" => BIG_DECIMAL,
                            "description" => "A multiplier to apply to the time since the last retry to compute the time to the next retry. This allows you to implement an exponential backoff between retry attempts.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 1.0
                        },
                        "max-retry-interval" => {
                            "type" => LONG,
                            "description" => "The maximum interval of time used to retry connections",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 2000L,
                            "unit" => "MILLISECONDS"
                        },
                        "check-period" => {
                            "type" => LONG,
                            "description" => "The period (in milliseconds) between client failure check.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 30000L,
                            "unit" => "MILLISECONDS"
                        },
                        "reconnect-attempts" => {
                            "type" => INT,
                            "description" => "The total number of reconnect attempts the bridge will make before giving up and shutting down. A value of -1 signifies an unlimited number of attempts.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => -1
                        },
                        "failover-on-server-shutdown" => {
                            "type" => BOOLEAN,
                            "description" => "Whether the bridge will attempt to failover onto a backup server (if specified) when the target server is cleanly shutdown rather than crashed.",
                            "expressions-allowed" => false,
                            "nillable" => true
                        },
                        "use-duplicate-detection" => {
                            "type" => BOOLEAN,
                            "description" => "Whether the bridge will automatically insert a duplicate id property into each message that it forwards.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => true
                        },
                        "confirmation-window-size" => {
                            "type" => INT,
                            "description" => "The confirmation-window-size to use for the connection used to forward messages to the target node.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 1048576,
                            "unit" => "BYTES"
                        },
                        "user" => {
                            "type" => STRING,
                            "description" => "The user name to use when creating the bridge connection to the remote server. If it is not specified the default cluster user specified by the cluster-user attribute in the root messaging subsystem resource will be used.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => "HORNETQ.CLUSTER.ADMIN.USER",
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "password" => {
                            "type" => STRING,
                            "description" => "The password to use when creating the bridge connection to the remote server. If it is not specified the default cluster password specified by the cluster-password attribute in the root messaging subsystem resource will be used.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => "CHANGE ME!!",
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "static-connectors" => {
                            "type" => LIST,
                            "description" => "A list of names of statically defined connectors used by this bridge. Must be undefined (null) if 'discovery-group-name' is defined.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "value-type" => STRING
                        },
                        "discovery-group-name" => {
                            "type" => STRING,
                            "description" => "The name of the discovery group used by this bridge. Must be undefined (null) if 'static-connectors' is defined.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "started" => {
                            "description" => "Whether the bridge is started.",
                            "type" => BOOLEAN,
                            "nillable" => false
                        }
                    },
                    "operations" => undefined,
                    "children" => {}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("bridge" => "*")
                ]
            },
            {
                "model-description" => {
                    "description" => "The directory where page files are stored. The default is ${jboss.server.data.dir}/messaging/paging.",
                    "attributes" => {
                        "path" => {
                            "type" => STRING,
                            "description" => "The actual filesystem path. Treated as an absolute path, unless the 'relative-to' attribute is specified, in which case the value is treated as relative to that path. <p>If treated as an absolute path, the actual runtime pathname specified by the value of this attribute will be determined as follows: </p>If this value is already absolute, then the value is directly used.  Otherwise the runtime pathname is resolved in a system-dependent way.  On UNIX systems, a relative pathname is made absolute by resolving it against the current user directory. On Microsoft Windows systems, a relative pathname is made absolute by resolving it against the current directory of the drive named by the pathname, if any; if not, it is resolved against the current user directory.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "relative-to" => {
                            "type" => STRING,
                            "description" => "The name of another previously named path, or of one of the standard paths provided by the system. If 'relative-to' is provided, the value of the 'path' attribute is treated as relative to the path specified by this attribute. The standard paths provided by the system include:<ul><li>jboss.home - the root directory of the JBoss AS distribution</li><li>user.home - user's home directory</li><li>user.dir - user's current working directory</li><li>java.home - java installation directory</li><li>jboss.server.base.dir - root directory for an individual server instance</li><li>jboss.server.data.dir - directory the server will use for persistent data file storage</li><li>jboss.server.log.dir - directory the server will use for log file storage</li><li>jboss.server.tmp.dir - directory the server will use for temporary file storage</li><li>jboss.domain.servers.dir - directory under which a host controller will create the working area for individual server instances</li></ul>",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        }
                    },
                    "operations" => undefined,
                    "children" => {}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("path" => "paging-directory")
                ]
            },
            {
                "model-description" => {
                    "description" => "The directory in which large messages are stored. The default is ${jboss.server.data.dir}/messaging/largemessages.",
                    "attributes" => {
                        "path" => {
                            "type" => STRING,
                            "description" => "The actual filesystem path. Treated as an absolute path, unless the 'relative-to' attribute is specified, in which case the value is treated as relative to that path. <p>If treated as an absolute path, the actual runtime pathname specified by the value of this attribute will be determined as follows: </p>If this value is already absolute, then the value is directly used.  Otherwise the runtime pathname is resolved in a system-dependent way.  On UNIX systems, a relative pathname is made absolute by resolving it against the current user directory. On Microsoft Windows systems, a relative pathname is made absolute by resolving it against the current directory of the drive named by the pathname, if any; if not, it is resolved against the current user directory.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "relative-to" => {
                            "type" => STRING,
                            "description" => "The name of another previously named path, or of one of the standard paths provided by the system. If 'relative-to' is provided, the value of the 'path' attribute is treated as relative to the path specified by this attribute. The standard paths provided by the system include:<ul><li>jboss.home - the root directory of the JBoss AS distribution</li><li>user.home - user's home directory</li><li>user.dir - user's current working directory</li><li>java.home - java installation directory</li><li>jboss.server.base.dir - root directory for an individual server instance</li><li>jboss.server.data.dir - directory the server will use for persistent data file storage</li><li>jboss.server.log.dir - directory the server will use for log file storage</li><li>jboss.server.tmp.dir - directory the server will use for temporary file storage</li><li>jboss.domain.servers.dir - directory under which a host controller will create the working area for individual server instances</li></ul>",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        }
                    },
                    "operations" => undefined,
                    "children" => {}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("path" => "large-messages-directory")
                ]
            },
            {
                "model-description" => {
                    "description" => "Multicast group to listen to receive broadcast from other servers announcing their connectors.",
                    "attributes" => {
                        "socket-binding" => {
                            "type" => STRING,
                            "description" => "The discovery group socket binding.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "alternatives" => [
                                "group-address",
                                "group-port",
                                "local-bind-address",
                                "local-bind-port"
                            ],
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "local-bind-address" => {
                            "type" => STRING,
                            "description" => "The local bind address that the datagram socket is bound to.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "alternatives" => ["socket-binding"],
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "group-address" => {
                            "type" => STRING,
                            "description" => "Multicast IP address of the group to listen on.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "alternatives" => ["socket-binding"],
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "group-port" => {
                            "type" => INT,
                            "description" => "UDP port of the multicast group.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "alternatives" => ["socket-binding"]
                        },
                        "refresh-timeout" => {
                            "type" => LONG,
                            "description" => "Period the discovery group waits after receiving the last broadcast from a particular server before removing that server's connector pair entry from its list.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 10000L,
                            "unit" => "MILLISECONDS"
                        },
                        "initial-wait-timeout" => {
                            "type" => LONG,
                            "description" => "Period, in ms, to wait for an initial broadcast to give us at least one node in the cluster.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 10000L,
                            "unit" => "MILLISECONDS"
                        }
                    },
                    "operations" => undefined,
                    "children" => {}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("discovery-group" => "*")
                ]
            },
            {
                "model-description" => {
                    "description" => "Defines a managed connection factory.",
                    "attributes" => {
                        "connector" => {
                            "type" => OBJECT,
                            "description" => "Defines the connectors. These are stored in a map by connector name (with an undefined value).",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "value-type" => STRING
                        },
                        "entries" => {
                            "type" => LIST,
                            "description" => "The jndi names the connection factory should be bound to.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "value-type" => STRING
                        },
                        "auto-group" => {
                            "type" => BOOLEAN,
                            "description" => "The autogroup.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "block-on-acknowledge" => {
                            "type" => BOOLEAN,
                            "description" => "True to set block on acknowledge.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "block-on-durable-send" => {
                            "type" => BOOLEAN,
                            "description" => "True to set block on durable send.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => true
                        },
                        "block-on-non-durable-send" => {
                            "type" => BOOLEAN,
                            "description" => "True to set block on non durable send.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "cache-large-message-client" => {
                            "type" => BOOLEAN,
                            "description" => "True to cache large messages.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "call-timeout" => {
                            "type" => LONG,
                            "description" => "The call time out.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 30000L,
                            "unit" => "MILLISECONDS"
                        },
                        "client-failure-check-period" => {
                            "type" => INT,
                            "description" => "The client failure check period.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 30000L,
                            "unit" => "MILLISECONDS"
                        },
                        "client-id" => {
                            "type" => STRING,
                            "description" => "The client id.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "confirmation-window-size" => {
                            "type" => INT,
                            "description" => "The confirmation window size.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => -1,
                            "unit" => "BYTES"
                        },
                        "connection-ttl" => {
                            "type" => LONG,
                            "description" => "The connection ttl.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 60000L,
                            "unit" => "MILLISECONDS"
                        },
                        "consumer-max-rate" => {
                            "type" => INT,
                            "description" => "The consumer max rate.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => -1,
                            "unit" => "PER_SECOND"
                        },
                        "consumer-window-size" => {
                            "type" => INT,
                            "description" => "The consumer window size.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 1048576,
                            "unit" => "BYTES"
                        },
                        "discovery-group-name" => {
                            "type" => STRING,
                            "description" => "The discovery group name.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "discovery-initial-wait-timeout" => {
                            "type" => LONG,
                            "description" => "The discovery initial wait time out.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "unit" => "MILLISECONDS"
                        },
                        "dups-ok-batch-size" => {
                            "type" => INT,
                            "description" => "The dups ok batch size.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 1048576
                        },
                        "failover-on-initial-connection" => {
                            "type" => BOOLEAN,
                            "description" => "True to fail over on initial connection.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "failover-on-server-shutdown" => {
                            "type" => BOOLEAN,
                            "description" => "True to fail over on server shutdown.",
                            "expressions-allowed" => false,
                            "nillable" => true
                        },
                        "group-id" => {
                            "type" => STRING,
                            "description" => "The group id.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "ha" => {
                            "type" => BOOLEAN,
                            "description" => "Whether the connection factory supports High Availability.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "connection-load-balancing-policy-class-name" => {
                            "type" => STRING,
                            "description" => "Name of a class implementing a client-side load balancing policy that a client can use to load balance sessions across different nodes in a cluster.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => "org.hornetq.api.core.client.loadbalance.RoundRobinConnectionLoadBalancingPolicy",
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "max-retry-interval" => {
                            "type" => LONG,
                            "description" => "The max retry interval.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 2000L,
                            "unit" => "MILLISECONDS"
                        },
                        "min-large-message-size" => {
                            "type" => INT,
                            "description" => "The min large message size.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 102400,
                            "unit" => "BYTES"
                        },
                        "password" => {
                            "type" => STRING,
                            "description" => "The default password to use with this connection factory. This is only needed when pointing the connection factory to a remote host.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "pre-acknowledge" => {
                            "type" => BOOLEAN,
                            "description" => "True to pre-acknowledge.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => false
                        },
                        "producer-max-rate" => {
                            "type" => INT,
                            "description" => "The producer max rate.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => -1,
                            "unit" => "PER_SECOND"
                        },
                        "producer-window-size" => {
                            "type" => INT,
                            "description" => "The producer window size.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 65536,
                            "unit" => "BYTES"
                        },
                        "reconnect-attempts" => {
                            "type" => INT,
                            "description" => "The reconnect attempts.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 0
                        },
                        "retry-interval" => {
                            "type" => LONG,
                            "description" => "The retry interval.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 2000L,
                            "unit" => "MILLISECONDS"
                        },
                        "retry-interval-multiplier" => {
                            "type" => BIG_DECIMAL,
                            "description" => "The retry interval multiplier.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 1.0
                        },
                        "scheduled-thread-pool-max-size" => {
                            "type" => INT,
                            "description" => "The scheduled thread pool max size.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 5
                        },
                        "thread-pool-max-size" => {
                            "type" => INT,
                            "description" => "The thread pool max size.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 30
                        },
                        "transaction-batch-size" => {
                            "type" => INT,
                            "description" => "The transaction batch size.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 1048576
                        },
                        "use-global-pools" => {
                            "type" => BOOLEAN,
                            "description" => "True to use global pools.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => true
                        },
                        "use-jndi" => {
                            "type" => BOOLEAN,
                            "description" => "Use JNDI to locate the destination for incoming connections",
                            "expressions-allowed" => false,
                            "nillable" => true
                        },
                        "user" => {
                            "type" => STRING,
                            "description" => "The default username to use with this connection factory. This is only needed when pointing the connection factory to a remote host.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "jndi-params" => {
                            "type" => STRING,
                            "description" => "The JNDI params to use for locating the destination for incoming connections.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "use-local-tx" => {
                            "type" => BOOLEAN,
                            "description" => "Use a local transaction for incoming sessions",
                            "expressions-allowed" => false,
                            "nillable" => true
                        },
                        "setup-attempts" => {
                            "type" => INT,
                            "description" => "The number of times to set up an MDB endpoint",
                            "expressions-allowed" => false,
                            "nillable" => true
                        },
                        "setup-interval" => {
                            "type" => LONG,
                            "description" => "The interval between attempts at setting up an MDB endpoint.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "unit" => "MILLISECONDS"
                        },
                        "transaction" => {
                            "type" => STRING,
                            "description" => "TODO",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => "transaction",
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "min-pool-size" => {
                            "type" => INT,
                            "description" => "The minimum size for the pool",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => -1
                        },
                        "max-pool-size" => {
                            "type" => INT,
                            "description" => "The maximum size for the pool",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => -1
                        }
                    },
                    "operations" => undefined,
                    "children" => {}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("pooled-connection-factory" => "*")
                ]
            },
            {
                "model-description" => {
                    "description" => "The directory in which the bindings journal lives. The default is ${jboss.server.data.dir}/messaging/bindings.",
                    "attributes" => {
                        "path" => {
                            "type" => STRING,
                            "description" => "The actual filesystem path. Treated as an absolute path, unless the 'relative-to' attribute is specified, in which case the value is treated as relative to that path. <p>If treated as an absolute path, the actual runtime pathname specified by the value of this attribute will be determined as follows: </p>If this value is already absolute, then the value is directly used.  Otherwise the runtime pathname is resolved in a system-dependent way.  On UNIX systems, a relative pathname is made absolute by resolving it against the current user directory. On Microsoft Windows systems, a relative pathname is made absolute by resolving it against the current directory of the drive named by the pathname, if any; if not, it is resolved against the current user directory.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "relative-to" => {
                            "type" => STRING,
                            "description" => "The name of another previously named path, or of one of the standard paths provided by the system. If 'relative-to' is provided, the value of the 'path' attribute is treated as relative to the path specified by this attribute. The standard paths provided by the system include:<ul><li>jboss.home - the root directory of the JBoss AS distribution</li><li>user.home - user's home directory</li><li>user.dir - user's current working directory</li><li>java.home - java installation directory</li><li>jboss.server.base.dir - root directory for an individual server instance</li><li>jboss.server.data.dir - directory the server will use for persistent data file storage</li><li>jboss.server.log.dir - directory the server will use for log file storage</li><li>jboss.server.tmp.dir - directory the server will use for temporary file storage</li><li>jboss.domain.servers.dir - directory under which a host controller will create the working area for individual server instances</li></ul>",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        }
                    },
                    "operations" => undefined,
                    "children" => {}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("path" => "bindings-directory")
                ]
            },
            {
                "model-description" => {
                    "description" => "A connector can be used by a client to define how it connects to a server.",
                    "attributes" => {
                        "factory-class" => {
                            "type" => STRING,
                            "description" => "The factory class.",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "socket-binding" => {
                            "type" => STRING,
                            "description" => "The socket binding reference.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        }
                    },
                    "children" => {"param" => {
                        "description" => "A key-value pair understood by the connector factory-class and used to configure it.",
                        "min-occurs" => 0,
                        "model-description" => undefined
                    }}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("connector" => "*")
                ],
                "children" => [{
                    "model-description" => {
                        "description" => "A parameter",
                        "attributes" => {"value" => {
                            "type" => STRING,
                            "description" => "The parameter value"
                        }}
                    },
                    "address" => [
                        ("subsystem" => "messaging"),
                        ("hornetq-server" => "*"),
                        ("connector" => "*"),
                        ("param" => "*")
                    ]
                }]
            },
            {
                "model-description" => {
                    "description" => "TODO",
                    "attributes" => {"factory-class" => {
                        "type" => STRING,
                        "description" => "Class name of the factory class that can instantiate the connector service.",
                        "expressions-allowed" => false,
                        "nillable" => false,
                        "min-length" => 1L,
                        "max-length" => 2147483647L
                    }},
                    "operations" => undefined,
                    "children" => {"param" => {
                        "description" => "A key/value pair understood by the connector service's factory-class",
                        "min-occurs" => 0,
                        "model-description" => undefined
                    }}
                },
                "address" => [
                    ("subsystem" => "messaging"),
                    ("hornetq-server" => "*"),
                    ("connector-service" => "*")
                ],
                "children" => [{
                    "model-description" => {
                        "description" => "A key/value pair understood by the connector service's factory-class",
                        "attributes" => {"value" => {
                            "type" => STRING,
                            "description" => "Value portion of a key/value pair understood by the connector service's factory-class",
                            "expressions-allowed" => false,
                            "nillable" => false,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        }},
                        "operations" => undefined,
                        "children" => {}
                    },
                    "address" => [
                        ("subsystem" => "messaging"),
                        ("hornetq-server" => "*"),
                        ("connector-service" => "*"),
                        ("param" => "*")
                    ]
                }]
            }
        ]
    }]
}