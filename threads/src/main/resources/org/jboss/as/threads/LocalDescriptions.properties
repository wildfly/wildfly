threads=The threading subsystem, used to declare manageable thread pools and resources.
threads.add=Adds the threading subsystem.
threads.remove=Removes the threading subsystem.
threads.thread-factory=A set of thread factories.
threads.blocking-bounded-queue-thread-pool=A set of thread pools where tasks are stored in a bounded-size queue and where threads submitting tasks will block until space is available in the queue.
threads.blocking-queueless-thread-pool=A set of thread pools where are not queued and where threads submitting tasks will block until a pool thread is available to execute the task.
threads.bounded-queue-thread-pool=A set of thread pools where tasks are stored in a bounded-size queue and where if no space is available in the queue tasks will either be discarded or passed off to another 'handoff-executor' for execution.
threads.queueless-thread-pool=A set of thread pools where are not queued and where if no pool thread is available to handle a task the tasks will either be discarded or passed off to another 'handoff-executor' for execution.
threads.unbounded-queue-thread-pool=A set of thread pools where tasks are stored in a queue with no maximum size.
threads.scheduled-thread-pool=A set of scheduled thread pools.

thread-factory=A thread factory (implementing java.util.concurrent.ThreadFactory).
thread-factory.add=Adds a thread factory
thread-factory.name=The name of the created thread factory.
thread-factory.group-name=Specifies the name of a  thread group to create for this thread factory.
thread-factory.thread-name-pattern=The template used to create names for threads.  The following patterns may be used:\n\t%% - emit a percent sign\n\t%t - emit the per-factory thread sequence number\n\t%g - emit the global thread sequence number\n\t%f - emit the factory sequence number\n\t%i - emit the thread ID.
thread-factory.priority=May be used to specify the thread priority of created threads.
thread-factory.remove=Removes a thread factory

threadpool.common.name=The name of the thread pool.
threadpool.common.thread-factory=Specifies the name of a specific thread factory to use to create worker threads. If not defined an appropriate default thread factory will be used.
threadpool.common.max-threads=The maximum thread pool size.
threadpool.common.core-threads=The core thread pool size which is smaller than the maximum pool size. If undefined, the core thread pool size is the same as the maximum thread pool size.
threadpool.common.keepalive-time=Used to specify the amount of time that pool threads should be kept running when idle; if not specified, threads will run until the executor is shut down.
threadpool.common.keepalive-time.time=The time
threadpool.common.keepalive-time.unit=The time unit
threadpool.common.allow-core-timeout=Whether core threads may time out.
threadpool.common.handoff-executor=An executor to delegate tasks to in the event that a task cannot be accepted. If not specified, tasks that cannot be accepted will be silently discarded.
threadpool.common.queue-length=The queue length.
threadpool.common.active-count=The approximate number of threads that are actively executing tasks.
threadpool.common.completed-task-count=The approximate total number of tasks that have completed execution.
threadpool.common.current-thread-count=The current number of threads in the pool.
threadpool.common.largest-thread-count=The largest number of threads that have ever simultaneously been in the pool.
threadpool.common.task-count=The approximate total number of tasks that have ever been scheduled for execution.

blocking-bounded-queue-thread-pool=A thread pool executor with a bounded queue where threads submittings tasks may block. Such a thread pool has a core and maximum size and a specified queue length.  When a task is submitted, if the number of running threads is less than the core size, a new thread is created.  Otherwise, if there is room in the queue, the task is enqueued. Otherwise, if the number of running threads is less than the maximum size, a new thread is created. Otherwise, the caller blocks until room becomes available in the queue.
blocking-bounded-queue-thread-pool.add=Adds a blocking bounded queue thread pool.
blocking-bounded-queue-thread-pool.remove=Removes a blocking bounded queue thread pool.
blocking-bounded-queue-thread-pool.rejected-count=The number of tasks that have been passed to the handoff-executor (if one is specified) or discarded.

bounded-queue-thread-pool=A thread pool executor with a bounded queue where threads submittings tasks will not block. Such a thread pool has a core and maximum size and a specified queue length.  When a task is submitted, if the number of running threads is less than the core size, a new thread is created.  Otherwise, if there is room in the queue, the task is enqueued. Otherwise, if the number of running threads is less than the maximum size, a new thread is created. Otherwise, the task is handed off to the designated handoff executor, if one is specified.  Otherwise, the task is discarded.
bounded-queue-thread-pool.add=Adds a bounded queue thread pool.
bounded-queue-thread-pool.remove=Removes a bounded queue thread pool.
bounded-queue-thread-pool.rejected-count=The number of tasks that have been passed to the handoff-executor (if one is specified) or discarded.

blocking-queueless-thread-pool=A thread pool executor with no queue where threads submittings tasks may block.  When a task is submitted, if the number of running threads is less than the maximum size, a new thread is created.  Otherwise, the caller blocks until another thread completes its task and accepts the new one.
blocking-queueless-thread-pool.add=Adds a blocking queueless thread pool.
blocking-queueless-thread-pool.remove=Removes a blocking queueless thread pool.
blocking-queueless-thread-pool.rejected-count=The number of tasks that have been passed to the handoff-executor (if one is specified) or discarded.

queueless-thread-pool=A thread pool executor with no queue where threads submittings tasks will not block.  When a task is submitted, if the number of running threads is less than the maximum size, a new thread is created.  Otherwise, the task is handed off to the designated handoff executor, if one is specified.  Otherwise, the task is discarded.
queueless-thread-pool.add=Adds a queueless thread pool.
queueless-thread-pool.remove=Removes a queueless thread pool.
queueless-thread-pool.rejected-count=The number of tasks that have been passed to the handoff-executor (if one is specified) or discarded.

scheduled-thread-pool=A scheduled thread pool executor.
scheduled-thread-pool.add=Adds a queueless thread pool.
scheduled-thread-pool.remove=Removes a queueless thread pool.

unbounded-queue-thread-pool=A thread pool executor with an unbounded queue.  Such a thread pool has a core size and a queue with no upper bound.  When a task is submitted, if the number of running threads is less than the core size, a new thread is created.  Otherwise, the task is placed in queue.  If too many tasks are allowed to be submitted to this type of executor, an out of memory condition may occur.
unbounded-queue-thread-pool.add=Adds an unbounded thread pool.
unbounded-queue-thread-pool.remove=Removes an unbounded thread pool.
unbounded-queue-thread-pool.rejected-count=The number of tasks that have been rejected.

