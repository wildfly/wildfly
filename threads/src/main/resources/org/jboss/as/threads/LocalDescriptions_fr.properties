threads=Sous-syst\u00E8me threading, utilis\u00E9 pour d\u00E9clarer les pools threads g\u00E9rables et les ressources.
threads.add=Ajoute le sous-syst\u00E8me threading.
threads.remove=Supprime le sous-syst\u00E8me threading.
threads.thread-factory=Un ensemble d'usines de threads.
threads.blocking-bounded-queue-thread-pool=Ensemble de pools de threads o\u00F9 les t\u00E2ches sont stock\u00E9es dans une file \u00E0 taille limit\u00E9e et o\u00F9 les threads soumettant des t\u00E2ches seront bloqu\u00E9s jusqu'\u00E0 ce que de l'espace soit disponible dans la file.
threads.blocking-queueless-thread-pool=Ensemble de pools de threads o\u00F9 les t\u00E2ches ne sont pas en file d'attente et o\u00F9 les threads soumettant des t\u00E2ches seront bloqu\u00E9s jusqu'\u00E0 ce qu'un thread de pool soit disponible pour ex\u00E9cuter la t\u00E2che.
threads.bounded-queue-thread-pool=Ensemble de pools de threads o\u00F9 les t\u00E2ches sont stock\u00E9es dans une file \u00E0 taille limit\u00E9e et o\u00F9 s'il n'y a pas d'espace disponible dans la file, les t\u00E2ches seront soit abandonn\u00E9es, soit pass\u00E9es \u00E0 un autre \u00AB\u00A0executor-handoff\u00A0\u00BB pour \u00EAtre ex\u00E9cut\u00E9es.
threads.queueless-thread-pool=Ensemble de pools de threads o\u00F9 les t\u00E2ches ne sont pas en file d'attente et o\u00F9 si aucun thread de pool n'est disponible pour g\u00E9rer une t\u00E2che, les t\u00E2ches seront soit abandonn\u00E9es, soit pass\u00E9es \u00E0 un autre \u00AB executor-handoff \u00BB pour \u00EAtre ex\u00E9cut\u00E9es.
threads.unbounded-queue-thread-pool=Ensemble de pools de threads o\u00F9 les t\u00E2ches sont stock\u00E9es dans une file d'attente ne comportant pas de taille maximale.
threads.scheduled-thread-pool=Ensemble de pools de threads programm\u00E9s.
thread-factory=Fabrique de threads (impl\u00E9mentant java.util.concurrent.ThreadFactory).
thread-factory.add=Ajoute une fabrique de threads (Thread factory)
thread-factory.name=Nom de la fabrique de threads cr\u00E9\u00E9e.
thread-factory.group-name=Sp\u00E9cifie le nom d'un groupe de threads \u00E0 cr\u00E9er pour cette fabrique de threads.
thread-factory.thread-name-pattern=Mod\u00E8le utilis\u00E9 pour cr\u00E9er des noms pour les threads. Les sch\u00E9mas suivants peuvent \u00EAtre utilis\u00E9s\u00A0\:\u00B6\n\t%% - \u00E9met le signe de pourcentage\u00B6\n\t%t - \u00E9met le num\u00E9ro de s\u00E9quence de thread par fabrique\u00B6\n\t%g - \u00E9met le num\u00E9ro de s\u00E9quence de thread global\u00B6\n\t%f - \u00E9met le num\u00E9ro de s\u00E9quence de la fabrique\u00B6\n\t%i - \u00E9met l'ID du thread.
thread-factory.priority=Peut \u00EAtre utilis\u00E9 pour sp\u00E9cifier la priorit\u00E9 thread des threads cr\u00E9\u00E9s.
thread-factory.remove=Supprime une fabrique de threads
threadpool.common.name=Nom du pool de thread.
threadpool.common.thread-factory=Sp\u00E9cifie le nom d'une fabrique de threads sp\u00E9cifique utilis\u00E9e pour cr\u00E9er des threads travailleurs (worker threads). Si non d\u00E9fini, une fabrique de threads correcte sera utilis\u00E9e par d\u00E9faut.
threadpool.common.max-threads=Taille maximale de pool de threads.
threadpool.common.core-threads=La taille du pool de threads principal, qui est plus petit que la taille de pool maximale. Si non-d\u00E9fini, la taille du pool de threads principal sera la m\u00EAme que celle de la taille de pool de threads maximale.
threadpool.common.keepalive-time=Utilis\u00E9 pour sp\u00E9cifier pendant combien de temps les threads de pools doivent continuer de fonctionner lorsqu'ils sont inactifs\u00A0; si non sp\u00E9cifi\u00E9, les threads seront ex\u00E9cut\u00E9s jusqu'\u00E0 ce que l'\u00AB\u00A0executor\u00A0\u00BB soit \u00E9teint.
threadpool.common.keepalive-time.time=Temps
threadpool.common.keepalive-time.unit=Unit\u00E9 de temps
threadpool.common.allow-core-timeout=Si les threads principaux peuvent expirer.
threadpool.common.handoff-executor=Ex\u00E9cuteur (executor) pour d\u00E9l\u00E9guer les t\u00E2ches au cas o\u00F9 une t\u00E2che n'est pas accept\u00E9e. Si non sp\u00E9cifi\u00E9, les t\u00E2ches qui ne peuvent pas \u00EAtre accept\u00E9es seront silencieusement abandonn\u00E9es.
threadpool.common.queue-length=Longueur de la file d'attente.
threadpool.common.active-count=Nombre approximatif de threads ex\u00E9cutant activement des t\u00E2ches.
threadpool.common.completed-task-count=Nombre total approximatif de t\u00E2ches ayant termin\u00E9 l'ex\u00E9cution.
threadpool.common.current-thread-count=Nombre actuel de threads dans le pool.
threadpool.common.largest-thread-count=Nombre le plus important de threads s'\u00E9tant trouv\u00E9 simultan\u00E9ment dans le pool.
threadpool.common.task-count=Nombre total approximatif des t\u00E2ches programm\u00E9es pour ex\u00E9cution.
blocking-bounded-queue-thread-pool=Executor de pools de threads avec une file d'attente limit\u00E9e o\u00F9 les threads soumettant des t\u00E2ches peuvent \u00EAtre bloqu\u00E9s. Un tel pool de threads poss\u00E8de un c\u0153ur et une taille maximale ainsi qu'une longueur de file d'attente sp\u00E9cifi\u00E9e. Lorsqu'une t\u00E2che est soumise, si le nombre de threads en cours d'ex\u00E9cution est moindre que la taille de c\u0153ur, un nouveau thread est alors cr\u00E9\u00E9. S'il reste de l'espace dans la file, la t\u00E2che est mise en file d'attente. Sinon, si le nombre de threads en cours d'ex\u00E9cution est moindre que la taille maximale, un nouveau thread est alors cr\u00E9\u00E9. Autrement, l'appelant sera bloqu\u00E9 jusqu'\u00E0 ce qu'il y ait de l'espace dans la file.
blocking-bounded-queue-thread-pool.add=Ajoute un pool de thread de file limit\u00E9e bloqu\u00E9.
blocking-bounded-queue-thread-pool.remove=Supprime un pool de thread de file limit\u00E9e bloqu\u00E9.
blocking-bounded-queue-thread-pool.rejected-count=Nombre de t\u00E2ches ayant \u00E9t\u00E9 pass\u00E9es \u00E0 l'executor-handoff (s'il a \u00E9t\u00E9 sp\u00E9cifi\u00E9) ou ayant \u00E9t\u00E9 abandonn\u00E9es.
bounded-queue-thread-pool=Executor de pools de threads avec une file d'attente limit\u00E9e o\u00F9 les threads soumettant des t\u00E2ches peuvent \u00EAtre bloqu\u00E9s. Un tel pool de threads poss\u00E8de un c\u0153ur et une taille maximale ainsi qu'une longueur de file d'attente sp\u00E9cifi\u00E9e. Lorsqu'une t\u00E2che est soumise, si le nombre de threads en cours d'ex\u00E9cution est moindre que la taille de c\u0153ur, un nouveau thread est alors cr\u00E9\u00E9. S'il reste de l'espace dans la file, la t\u00E2che est mise en file d'attente. Sinon, si le nombre de threads en cours d'ex\u00E9cution est moindre que la taille maximale, un nouveau thread est alors cr\u00E9\u00E9. Autrement, la t\u00E2che est pass\u00E9e \u00E0 l'executor-handoff design\u00E9, s'il a \u00E9t\u00E9 sp\u00E9cifi\u00E9. Sinon, la t\u00E2che est abandonn\u00E9e.
bounded-queue-thread-pool.add=Ajoute un pool de thread de file d'attente limit\u00E9e.
bounded-queue-thread-pool.remove=Supprime un pool de thread de file d'attente limit\u00E9e.
bounded-queue-thread-pool.rejected-count=Nombre de t\u00E2ches ayant \u00E9t\u00E9 pass\u00E9es \u00E0 l'executor-handoff (s'il a \u00E9t\u00E9 sp\u00E9cifi\u00E9) ou ayant \u00E9t\u00E9 abandonn\u00E9es.
blocking-queueless-thread-pool=Un executor de pools de threads sans file d'attente o\u00F9 les threads soumettant des t\u00E2ches peuvent \u00EAtre bloqu\u00E9s. Lorsqu'une t\u00E2che est soumise, si le nombre de threads en cours d'ex\u00E9cution est moindre que la taille maximum, un nouveau thread est alors cr\u00E9\u00E9. Sinon, l'appelant sera bloqu\u00E9 jusqu'\u00E0 ce qu'un autre thread termine sa t\u00E2che et accepte la nouvelle.
blocking-queueless-thread-pool.add=Ajoute un pool de threads bloquants sans file d'attente.
blocking-queueless-thread-pool.remove=Supprime un pool de threads bloquants sans file d'attente.
blocking-queueless-thread-pool.rejected-count=Nombre de t\u00E2ches ayant \u00E9t\u00E9 pass\u00E9es \u00E0 l'executor-handoff (s'il a \u00E9t\u00E9 sp\u00E9cifi\u00E9) ou ayant \u00E9t\u00E9 abandonn\u00E9es.
queueless-thread-pool=Executor de pools de threads sans file d'attente o\u00F9 les threads soumettant des t\u00E2ches ne se bloqueront pas. Lorsqu'une t\u00E2che est soumise, si le nombre de threads en cours d'ex\u00E9cution est moindre que la taille maximum, un nouveau thread est cr\u00E9\u00E9. Sinon, la t\u00E2che est pass\u00E9e \u00E0 l'executor handoff d\u00E9sign\u00E9, s'il y en a un sp\u00E9cifi\u00E9. Autrement, la t\u00E2che est abandonn\u00E9e.
queueless-thread-pool.add=Ajoute un pool de threads sans file d'attente.
queueless-thread-pool.remove=Supprime un pool de threads sans file d'attente.
queueless-thread-pool.rejected-count=Nombre de t\u00E2ches ayant \u00E9t\u00E9 pass\u00E9es \u00E0 l'executor-handoff (s'il a \u00E9t\u00E9 sp\u00E9cifi\u00E9) ou ayant \u00E9t\u00E9 abandonn\u00E9es.
scheduled-thread-pool=Executor de pools de threads programm\u00E9.
scheduled-thread-pool.add=Ajoute un pool de threads sans file d'attente.
scheduled-thread-pool.remove=Supprime un pool de threads sans file d'attente.
unbounded-queue-thread-pool=Executor de pools de threads avec une file d'attente illimit\u00E9e. Un tel pool de threads poss\u00E8de une taille de c\u0153ur et une file sans limite sup\u00E9rieure. Lorsqu'une t\u00E2che est soumise, si le nombre de threads en cours d'ex\u00E9cution est moindre que la taille de c\u0153ur, un nouveau thread est cr\u00E9\u00E9. Sinon, la t\u00E2che est plac\u00E9e dans la file d'attente. Si trop de t\u00E2ches sont autoris\u00E9es \u00E0 \u00EAtre soumises \u00E0 ce type d'executor, une condition \u00AB\u00A0m\u00E9moire insuffisante\u00A0\u00BB pourrait se produire.
unbounded-queue-thread-pool.add=Ajoute un pool de threads \u00E0 file d'attente illimit\u00E9e.
unbounded-queue-thread-pool.remove=Supprime un pool de threads \u00E0 file d'attente illimit\u00E9e.
unbounded-queue-thread-pool.rejected-count=Nombre de t\u00E2ches rejet\u00E9es.
