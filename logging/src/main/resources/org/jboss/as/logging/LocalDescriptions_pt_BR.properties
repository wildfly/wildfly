logging=A configura\u00E7\u00E3o do sub-sistema de registro em log.
logging.add=Adiciona o sub-sistema de registro em log.
logging.remove=Remove o sub-sistema de registro em log.
root.logger=Define o registrador em log para esse contexto de log.
root.logger.set=Determina o registrador de log na raiz.
root.logger.remove=Remove o registrador em log da raiz.
root.logger.change-level=Altera o n\u00EDvel do registrador em log da raiz.
root.logger.assign-handler=Determina o Manuseador para o registrador em log da raiz.
root.logger.unassign-handler=Cancela a determina\u00E7\u00E3o do Manuseador a partir do registrador em log da raiz.
logger=Define a categoria do registrador em log.
logger.add=Adiciona a nova categoria do registrador em log.
logger.remove=Remove uma categoria do registrador em log existente.
logger.level=O n\u00EDvel do log especificando quais n\u00EDveis de mensagens ser\u00E3o registradas em log por esse registrador de log. Os n\u00EDveis de mensagem mais baixos que este ser\u00E3o descartados.
logger.handler=O manuseador de registro de log.
logger.handlers=Os Manuseadores associados com esse Registrador de Log.
logger.use-parent-handlers=Especifica se \u00E9 que ou n\u00E3o esse registrador de log deve enviar sua resposta ao pr\u00F3prio Registrador de Log pai.
logger.category=Especifica a categoria para o registrador de log.
logger.change-level=Altera o n\u00EDvel do registro de log para a categoria de registrador de log.
logger.assign-handler=Determina o Manuseador a um Registrador de Log.
logger.unassign-handler=Cancela a determina\u00E7\u00E3o de um Manuseador a partir do Registrador do Log.
handler=O manuseador do registro de log.
handler.add=Adiciona o novo manuseador do registrador de log.
handler.remove=Remove um manuseador de registro de log existente.
handler.autoflush=Esvazia automaticamente ap\u00F3s cada grava\u00E7\u00E3o.
handler.level=A especifica\u00E7\u00E3o do n\u00EDvel de log que os n\u00EDveis de mensagem ser\u00E3o registrados em log para isto. Os n\u00EDveis de mensagem inferiores que esse valor ser\u00E3o descartados.
handler.encoding=A codifica\u00E7\u00E3o do caractere usado por esse Manuseador.
handler.filter=Define um tipo simples de filtro.
handler.filter.all=O filtro consistente de diversos filtros numa corrente. Caso qualquer outro filtro encontrar a mensagem de log a ser cancelado o log, a mensagem n\u00E3o ser\u00E1 registrada em log e os filtros subsequentes n\u00E3o ser\u00E3o checados.
handler.filter.any=Um filtro consistindo de diversos filtros na corrente. Caso qualquer filtro encontrar a mensagem a ser registrada em log, a mensagem ser\u00E1 registrada em log e os filtros subsequentes n\u00E3o ser\u00E3o checados.
handler.filter.accept=Aceita todas as mensagens de log.
handler.filter.change-level=O filtro que modifica a grava\u00E7\u00E3o em log com o novo n\u00EDvel, caso o filtro aninhado avalie como verdadeiro para aquela grava\u00E7\u00E3o.
handler.filter.deny=Nega todas as mensagens de log.
handler.filter.level=O filtro que exclui a mensagem com o n\u00EDvel especificado.
handler.filter.level-range=O filtro que efetua o log apenas nas mensagens que encontram-se com um n\u00EDvel de intervalo.
handler.filter.level-range.min-level=O n\u00EDvel (menos severo), inclu\u00EDdo.
handler.filter.level-range.min-inclusive=Verdadeiro, caso o valor m\u00EDnimo seja inclu\u00EDdo e falso, caso ele seja exclusivo.
handler.filter.level-range.max-level=O valor m\u00E1ximo (mais severo), inclu\u00EDdo.
handler.filter.level-range.max-inclusive=Verdadeiro, caso o valor m\u00E1ximo seja inclu\u00EDdo e falso, caso ele seja exclusivo.
handler.filter.match=O filtro baseado na express\u00E3o regular. Usado para excluir as grava\u00E7\u00F5es do log que combinam ou n\u00E3o combinam com a express\u00E3o. A express\u00E3o regular \u00E9 checada antes em rela\u00E7\u00E3o \u00E0 mensagem bruta (n\u00E3o formatada).
handler.filter.not=O filtro que inverte o filtro que est\u00E1 aninhado.
handler.filter.replace=O filtro que aplica a substitui\u00E7\u00E3o de texto na mensagem, caso o filtro aninhado coincidir com o mesmo.
handler.filter.replace.pattern=O padr\u00E3o para combina\u00E7\u00E3o
handler.filter.replace.replacement=A substitui\u00E7\u00E3o da sequ\u00EAncia
handler.filter.replace.replace-all=Verdadeiro, caso todas as ocorr\u00EAncias sejam substitu\u00EDdas. Falso, caso apenas a primeira ocorr\u00EAncia seja substitu\u00EDda.
handler.formatter=Define a formata\u00E7\u00E3o.
handler.name=O nome do manuseador.
handler.type=O tipo do manuseador.
handler.enable=Ativa o manuseador do registro de log.
handler.disable=Desativa o manuseador do registro de log.
handler.change-level=Altere o n\u00EDvel do registro de log para o manuseador.
handler.change-formatter=Altera o formatador para um manuseador.
handler.change-file=Altera o arquivo para um manuseador.
handler.properties=Define as propriedades usadas para o manuseador do registro de log. Todas as propriedades devem ser acess\u00EDveis atrav\u00E9s do m\u00E9todo setter.
handler.properties.name=Define o nome da propriedade a ser configurada.
handler.properties.value=Define o valor da propriedade.
async.handler=Define o manuseador pelo qual grava aos sub-manuseadores num thread ass\u00EDncrono. Usado por manuseadores que introduzem uma quantia consider\u00E1vel de atraso.
async.queue-length=O comprimento da fila a ser usada antes da grava\u00E7\u00E3o de esvaziamento
async.overflow-action=Especifica qual a\u00E7\u00E3o a ser tomada quando estiver cheio, As op\u00E7\u00F5es v\u00E1lidas s\u00E3o 'bloquear' e 'descartar'
async.handler.add=Adiciona um novo manuseador ASYNC.
async.handler.update=Atualiza as propriedades de um manuseador ASYNC existente.
async.handler.subhandlers=Os Manuseadores associados com esse manuseador ass\u00EDncrono.
async.handler.handler=O sub-manuseador associado com esse manuseador ass\u00EDncrono.
async.handler.assign-subhandler=Determina um sub-manuseador para o manuseador ASYNC.
async.handler.unassign-subhandler=Cancela a determina\u00E7\u00E3o de um sub-manuseador a partir do manuseador ASYNC.
console.handler=Define um manuseador que grava ao console.
console.handler.target=Define a destina\u00E7\u00E3o do manuseador do console. O valor pode ser tanto SYSTEM_OUT ou SYSTEM_ERR.
console.handler.add=Adiciona um novo manuseador do console.
console.handler.update=Atualiza as propriedades de um manuseador do console existente.
file.handler=Define um manuseador que grava a um arquivo.
file.handler.file=A descri\u00E7\u00E3o do arquivo consistindo do caminho e relativo opcional ao caminho.
file.handler.path=O caminho do filesystem.
file.handler.relative-to=O nome de outro caminho nomeado anteriormente, ou um dos caminhos padr\u00F5es fornecidos pelo sistema. Caso 'relative-to' seja fornecido, o valor do atributo 'caminho' \u00E9 tratado como relativo ao caminho especificado por esse atributo. Os caminhos padr\u00F5es fornecidos por esse sistema incluem\: <ul><li>jboss.home - the root directory of the JBoss AS distribution</li><li>user.home - user's home directory</li><li>user.dir - user's current working directory</li><li>java.home - java installation directory</li><li>jboss.server.base.dir - root directory for an individual server instance</li><li>jboss.server.data.dir - directory the server will use for persistent data file storage</li><li>jboss.server.log.dir - directory the server will use for log file storage</li><li>jboss.server.tmp.dir - directory the server will use for temporary file storage</li><li>jboss.domain.servers.dir - directory under which a host controller will create the working area for individual server instances</li></ul>
file.handler.append=Especifica se \u00E9 que anexar o arquivo de destina\u00E7\u00E3o.
file.handler.add=Adiciona um novo manuseador de arquivo.
file.handler.update=Atualiza as propriedades de um manuseador de arquivo existente.
periodic.handler=Define o manuseador que grava a um arquivo, roteando o log ap\u00F3s um determinado per\u00EDodo derivado a partir da sequ\u00EAncia de sufixo gerada, que deve estar num formato entendido pelo java.text.SimpleDateFormat.
periodic.handler.suffix=Determina a sequ\u00EAncia do sufixo. A sequ\u00EAncia est\u00E1 num formato que pode ser entendida pelo java.text.SimpleDateFormat. O per\u00EDodo de rota\u00E7\u00E3o \u00E9 automaticamente calculado baseado no sufixo.
periodic.handler.add=Adiciona um novo manuseador de arquivo de rota\u00E7\u00E3o peri\u00F3dica.
periodic.handler.update=Atualiza as propriedades de um manuseador de arquivo de rota\u00E7\u00E3o peri\u00F3dica.
size.periodic.handler=Define um manuseador que grava a um arquivo, roteando o log ap\u00F3s o tamanho de um arquivo crescer at\u00E9 um determinado ponto e continuar um n\u00FAmero fixo de back-ups.
size.periodic.handler.max-backup-index=O n\u00FAmero m\u00E1ximo de back-ups a ser mantido.
size.periodic.handler.rotate-size=O tamanho pelo qual rotear o arquivo de log.
size.periodic.handler.add=Adiciona o novo tamanho de manuseador de arquivo de rotea\u00E7\u00E3o.
size.periodic.handler.update=Atualiza as propriedades de tamanho existente de um manuseador de arquivo de rotea\u00E7\u00E3o.
custom.handler=Define o manuseador de registro de log personalizado. O manuseador personalizado estende o java.util.logging.Handler.
custom.handler.class=A classe do manuseador de registro de log a ser usada. 
custom.handler.module=O m\u00F3dulo que o manuseador de registro de log baseia-se.
custom.handler.update=Atualiza as propriedades de um manuseador de registro de log personalizado existente.
