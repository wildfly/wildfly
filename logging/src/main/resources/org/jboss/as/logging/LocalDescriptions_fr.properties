logging=La configuration du sous-syst\u00E8me de connexion.
logging.add=Ajouter le sous-syst\u00E8me de connexion.
logging.remove=Supprimer le sous-syst\u00E8me de connexion.
root.logger=D\u00E9finit l'enregistreur root pour ce contexte de log.
root.logger.set=D\u00E9finir le l'enregistreur root.
root.logger.remove=Supprimer l'enregistreur root.
root.logger.change-level=Modifier le niveau d'enregistreur root.
root.logger.assign-handler=Assigner un Handler \u00E0 l'enregistreur root.
root.logger.unassign-handler=Retirer l'assignation d'un Handler de l'enregistreur root.
logger=D\u00E9finit une cat\u00E9gorie d'enregistreur.
logger.add=Ajouter une nouvelles cat\u00E9gorie d'enregistreur.
logger.remove=Supprimer une cat\u00E9gorie d'enregistreur existante.
logger.level=Le niveau de journalisation indique quels niveaux de messages seront accessibles par cet enregistreur. Les niveaux de messages inf\u00E9rieurs \u00E0 cette valeur seront ignor\u00E9s.
logger.handler=Gestionnaire de connexion.
logger.handlers=Les Handlers associ\u00E9s \u00E0 cet Enregistreur.
logger.use-parent-handlers=Indique si oui ou non cet enregistreur doit envoyer ses sorties \u00E0 son enregistreur-parent.
logger.category=Indique la cat\u00E9gorie pour l'enregistreur.
logger.change-level=Changer le niveau d'enregistrement pour un cat\u00E9gorie d'enregistreur.
logger.assign-handler=Assigner un Handler \u00E0 un Enregistreur.
logger.unassign-handler=Retirer l'assignation d'un Handler d'un Enregistreur.
handler=Le gestionnaire de connexion.
handler.add=Ajouter un nouveau gestionnaire de connexion.
handler.remove=Supprimer un gestionnaire de connexion existant.
handler.autoflush=Se vide automatiquement apr\u00E8s chaque \u00E9criture.
handler.level=Le niveau sup\u00E9rieur indique si les niveaux de message seront enregistr\u00E9s par ceci. Les niveaux de message inf\u00E9rieurs \u00E0 cette valeur seront ignor\u00E9s.
handler.encoding=Le code de caract\u00E8res utilis\u00E9 pour ce Handler.
handler.filter=D\u00E9finit un type simple de filtre.
handler.filter.all=Une filtre consiste en plusieurs filtres dans une cha\u00EEne. Si un filtre trouve un message de journalisation impossible \u00E0 journaliser, le message ne sera pas journalis\u00E9 et les filtres suivants ne seront pas v\u00E9rifi\u00E9s.
handler.filter.any=Une filtre consiste en plusieurs filtres dans une cha\u00EEne. Si un filtre trouve un message de journalisation \u00E0 journaliser, le message sera journalis\u00E9 et les filtres suivants ne seront pas v\u00E9rifi\u00E9s.
handler.filter.accept=Accepte tous les messages de journalisation.
handler.filter.change-level=Un filtre qui modifie l'enregistrement de journalisation \u00E0 un nouveau niveau si le filtre imbriqu\u00E9 \u00E9value true pour cet enregistrement.
handler.filter.deny=Refuse tous les messages de journalisation.
handler.filter.level=Un filtre qui exclut un message d'un niveau particulier indiqu\u00E9.
handler.filter.level-range=Un filtre qui journalise uniquement les messages qui se trouve contenus dans une certaine plage/intervalle.
handler.filter.level-range.min-level=Le niveau minimum (le moins s\u00E9v\u00E8re), inclus.
handler.filter.level-range.min-inclusive=True si la valeur de niveau-min est inclusive, false si elle est exclusive.
handler.filter.level-range.max-level=Le niveau maximum (le plus s\u00E9v\u00E8re), inclus.
handler.filter.level-range.max-inclusive=True si la valeur de niveau-max est inclusive, false si elle est exclusive.
handler.filter.match=Un filtre bas\u00E9-expressions-r\u00E9guli\u00E8res. Utilis\u00E9 pour exclure les enregistrements de journalisation qui correspondent ou non \u00E0 l'expression. L'expression r\u00E9guli\u00E8re est v\u00E9rifi\u00E9e par rapport au message brut (non format\u00E9).
handler.filter.not=Un filtre qui inverse le filtre imbriqu\u00E9.
handler.filter.replace=Un filtre qui applique une substitution de texte sur un message si le filtre imbriqu\u00E9 correspond.
handler.filter.replace.pattern=Le mod\u00E8le \u00E0 faire correspondre
handler.filter.replace.replacement=Le remplacement de string
handler.filter.replace.replace-all=True si toutes les occurrences doivent \u00EAtre remplac\u00E9es; false si c'est uniquement la premi\u00E8re occurence
handler.formatter=D\u00E9finit un formateur de contenu.
handler.name=Le nom du handler.
handler.type=Le type de handler.
handler.enable=Active un handler de connexion.
handler.disable=D\u00E9sactive un handler de connexion.
handler.change-level=Change le niveau de connexion d'un handler.
handler.change-formatter=Change le formateur de contenu d'un handler.
handler.change-file=Change le fichier pour un handler \:
handler.properties=D\u00E9finit les propri\u00E9t\u00E9s qui sont utilis\u00E9es pour le handler de connexion. Toutes les propri\u00E9t\u00E9s doivent \u00EAtre accessibles via une m\u00E9thode setter.
handler.properties.name=D\u00E9finit le nom de la propri\u00E9t\u00E9 \u00E0 d\u00E9finir.
handler.properties.value=D\u00E9finit la valeur de la propri\u00E9t\u00E9.
async.handler=D\u00E9finit un handler qui \u00E9crit dans les sous-handlers dans un thread asynchrone. Utilis\u00E9 pour les handlers qui introduisent un d\u00E9lai important.
async.queue-length=La longueur de la file d'attente \u00E0 utiliser avant de vider les \u00E9critures
async.overflow-action=Indique l'action \u00E0 prendre en cas de d\u00E9bordement. Les options valides sont \u00AB bloquer \u00BB (block) et \u00AB annuler \u00BB (discard)
async.handler.add=Ajouter un nouvel Handler ASYNC
async.handler.update=Mettre \u00E0 jour les propri\u00E9t\u00E9s d'un handler ASYNC d\u00E9j\u00E0 existant.
async.handler.subhandlers=Les Handlers associ\u00E9s \u00E0 ce handler async.
async.handler.handler=Le sous-handler associ\u00E9 \u00E0 ce handler async.
async.handler.assign-subhandler=Assigne un sous-handler au handler ASYNC.
async.handler.unassign-subhandler=Retirer l'assignation du handle ASYNC.
console.handler=D\u00E9finit un handler avec permission d'\u00E9criture sur la console.
console.handler.target=D\u00E9finit la cible du handler de la console. La valeur peut soit correspondre \u00E0 SYSTEM_OUT ou \u00E0 SYSTEM_ERR.
console.handler.add=Ajouter un nouveau handler de console.
console.handler.update=Mettre \u00E0 jour les propri\u00E9t\u00E9s d'un handler de console existant.
file.handler=D\u00E9finit un handler qui \u00E9crit sur un fichier.
file.handler.file=La description de fichier consiste en un chemin et une relation XXXX optionnelle au chemin.
file.handler.path=Le chemin d'acc\u00E8s du syst\u00E8me de fichiers.
file.handler.relative-to=Le nom d'un autre nom de chemin d'acc\u00E8s d\u00E9j\u00E0 nomm\u00E9, ou de l'un des chemins d'acc\u00E8s standards fournis par le syst\u00E8me. Si 'relative-to' est fourni, la valeur de l'attribut \u00AB chemin \u00BB est consid\u00E9r\u00E9e comme relative au chemin sp\u00E9cifi\u00E9 par cet attribut. Les chemins d'acc\u00E8s standards fournis par le syst\u00E8me \:<ul><li>jboss.home - r\u00E9pertoire root de la distribution the JBoss AS distribution</li><li>user.home - r\u00E9pertoire d'accueil de l'utilisateur</li><li>user.dir - r\u00E9pertoire en cours d'utilisation de l'utilisateur</li><li>java.home - java installation directory</li><li>jboss.server.base.dir - r\u00E9pertoire root d'une instance de serveur individuel</li><li>jboss.server.data.dir - r\u00E9pertoire que le serveur va utiliser pour le stockage des fichiers de donn\u00E9es persistantes</li><li>jboss.server.log.dir - r\u00E9pertoire que le serveur va utiliser pour le stockage des fichiers de donn\u00E9es de journalisation</li><li>jboss.server.tmp.dir - r\u00E9pertoire que le serveur va utiliser pour les donn\u00E9es de fichiers temporaires</li><li>jboss.domain.servers.dir - r\u00E9pertoire sous lequel un contr\u00F4leur h\u00F4te va cr\u00E9er la zone de travail pour les instances de serveur individuel</li></ul>
file.handler.append=Indique si on doit ou non l'ajouter \u00E0 un fichier cible.
file.handler.add=Ajouter un nouvel handler de fichier \:
file.handler.update=Mettre \u00E0 jour les propri\u00E9t\u00E9s d'un handler de fichier d\u00E9j\u00E0 existant.
periodic.handler=D\u00E9finit un handler avec permission d'\u00E9criture dans un fichier, pour changer de log apr\u00E8s un certain temps en fonction d'un string de suffixe donn\u00E9, qui doit \u00EAtre sous un format compr\u00E9hensible par java.text.SimpleDateFormat.
periodic.handler.suffix=D\u00E9finir un string de suffixe. Le string doit \u00EAtre dans un format compr\u00E9hensible pour java.text.SimpleDateFormat. La dur\u00E9e de rotation sera automatiquement calcul\u00E9e sur la base du suffixe.
periodic.handler.add=Ajouter un nouveau handler de fichiers de rotations p\u00E9riodiques.
periodic.handler.update=Mettre \u00E0 jour les propri\u00E9t\u00E9s d'un handler de fichiers de rotations p\u00E9riodiques.
size.periodic.handler=D\u00E9finit un gestionnaire qui \u00E9crit dans un fichier, en changeant de journal quand la taille du fichier aura atteint un certaine niveau, tout en gardant un certain nombre d'archives.
size.periodic.handler.max-backup-index=Le nombre maximum d'archives \u00E0 sauvegarder.
size.periodic.handler.rotate-size=La taille \u00E0 partir de laquelle on change de fichier de journalisation.
size.periodic.handler.add=Ajouter une nouvelle taille de handler de fichier de rotation.
size.periodic.handler.update=Mettre \u00E0 jour les propri\u00E9t\u00E9s d'un handler de fichiers de rotation en fonction de la taille, qui est d\u00E9j\u00E0 existant
custom.handler=D\u00E9finit un handler de connexion personnalis\u00E9. Le handler personnallis\u00E9 doit \u00E9tendre java.util.logging.Handler.
custom.handler.class=La classe de handler de connexion \u00E0 utiliser.
custom.handler.module=La module dont le handler de connexion d\u00E9pend.
custom.handler.update=Mettre \u00E0 jour les propri\u00E9t\u00E9s d'un gestionnaire de connexion personnalis\u00E9 d\u00E9j\u00E0 existant.
