#
# Copyright The WildFly Authors
# SPDX-License-Identifier: Apache-2.0
#

opentelemetry=OpenTelemetry subsystem
opentelemetry.add=Operation Adds subsystem
opentelemetry.batch-delay=The interval, in milliseconds, between two consecutive exports. Default is 5000.
opentelemetry.compression=The compression type to use on OTLP trace, metric, and log requests.
opentelemetry.endpoint=The URL for the exporter endpoint.
opentelemetry.exemplar-filter=The filter for exemplar sampling. Can be ALWAYS_OFF, ALWAYS_ON or TRACE_BASED.
opentelemetry.traces-export-interval=The interval, in milliseconds, between the start of two export attempts.
opentelemetry.metrics-export-interval=The interval, in milliseconds, between the start of two export attempts.
opentelemetry.logs-enabled=Is logging enabled?
opentelemetry.metrics-enabled=Are metrics enabled?
opentelemetry.traces-enabled=Are traces enabled?
opentelemetry.logs-export-interval=The interval, in milliseconds, between the start of two export attempts.
opentelemetry.export-timeout=The maximum allowed time, in milliseconds, to export data.
opentelemetry.exporter-type=The name of the exporter to use
opentelemetry.histogram-aggregation=The preferred default histogram aggregation. Options include BASE2_EXPONENTIAL_BUCKET_HISTOGRAM and EXPLICIT_BUCKET_HISTOGRAM.
opentelemetry.max-export-batch-size=The maximum number of traces to be exported in a given batch.
opentelemetry.max-queue-size=The maximum number of traces in the queue before they are exported.
opentelemetry.ratio=The ratio amount to use for the ratio sampler
opentelemetry.remove=Operation Removes subsystem
opentelemetry.sampler-type=The sampling strategy to use
opentelemetry.service-name=Service name reported to the trace collector
opentelemetry.span-processor-type=The type of processor to use. Valid values are 'simple' and 'batch'.
opentelemetry.temporality=The preferred output aggregation temporality. Options include DELTA, LOWMEMORY, and CUMULATIVE.
opentelemetry.tls-enabled=Is TLS enabled
opentelemetry.ssl-context=The name of the Elytron SSL context to use when communicating with the OpenTelemetry Collector
