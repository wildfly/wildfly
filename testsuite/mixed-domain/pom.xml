<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright The WildFly Authors
  ~ SPDX-License-Identifier: Apache-2.0
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-testsuite</artifactId>
        <!--
        Maintain separation between the artifact id and the version to help prevent
        merge conflicts between commits changing the GA and those changing the V.
        -->
        <version>36.0.2.Final-SNAPSHOT</version>
    </parent>

    <artifactId>wildfly-testsuite-integration-mixed-domain</artifactId>
    <name>WildFly Test Suite: Mixed Domain Mode Integration Tests</name>

    <properties>

        <!-- used to provide an absolute location for the distribution under test -->
        <!-- this value is overridden in modules with the correct relative pathname -->
        <jboss.dist>${project.basedir}/../../${wildfly.build.output.dir}</jboss.dist>
        <jboss.home>${jboss.dist}</jboss.home>

        <!-- Don't set the modular.jdk.args args so the secondarys can use a different JVM -->
        <modular.jdk.args/>
        <modular.jdk.testsuite.args/>

        <!-- Used to provide an absolute location for the XSLT scripts. -->
        <!-- This value is overridden in submodules with the correct relative path. -->
        <xslt.scripts.dir>${basedir}/../integration/src/test/xslt</xslt.scripts.dir>

        <ts.skipTests>${skipTests}</ts.skipTests>

        <!-- Server provision and tests are disabled by default. -->
        <!-- They are enabled via mixed-domain-server-provision profile below. -->
        <provision.phase>none</provision.phase>
        <surefire.default-test.phase>none</surefire.default-test.phase>
    </properties>

    <!--
    Compile-time dependencies upon anything  in the AS7 runtime
    are allowed in this section
    -->

    <dependencies>
        <dependency>
            <groupId>org.apache.sshd</groupId>
            <artifactId>sshd-common</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-model-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-network</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-testsuite-shared</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-testsuite-shared</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.launcher</groupId>
            <artifactId>wildfly-launcher</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-process-controller</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.security</groupId>
            <artifactId>wildfly-elytron-provider-util</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.security</groupId>
            <artifactId>wildfly-elytron-auth</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.security</groupId>
            <artifactId>wildfly-elytron-base</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.security</groupId>
            <artifactId>wildfly-elytron-credential</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.security</groupId>
            <artifactId>wildfly-elytron-asn1</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.security</groupId>
            <artifactId>wildfly-elytron-auth-util</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.security</groupId>
            <artifactId>wildfly-elytron-client</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.security</groupId>
            <artifactId>wildfly-elytron-http</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.security</groupId>
            <artifactId>wildfly-elytron-mechanism</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.security</groupId>
            <artifactId>wildfly-elytron-sasl</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.security</groupId>
            <artifactId>wildfly-elytron-sasl-anonymous</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.security</groupId>
            <artifactId>wildfly-elytron-sasl-localuser</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.security</groupId>
            <artifactId>wildfly-elytron-security-manager-action</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.security</groupId>
            <artifactId>wildfly-elytron-ssl</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-patching</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <failIfNoTests>false</failIfNoTests>

                        <!-- System properties to forked surefire JVM which runs clients. -->
                        <argLine>${jvm.args.ip.client} ${jvm.args.timeouts} ${surefire.jacoco.args}</argLine>
                        <skipTests>${ts.skipTests}</skipTests>
                        <systemPropertyVariables combine.children="append">
                            <mcast>${mcast}</mcast>
                            <mcast1>${mcast1}</mcast1>
                            <mcast2>${mcast2}</mcast2>
                            <mcast.ttl>${mcast.ttl}</mcast.ttl>
                            <jboss.options>${surefire.system.args}</jboss.options>
                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            <jboss.home>${jboss.home}</jboss.home>
                            <module.path>${jboss.home}/modules</module.path>
                            <jboss.test.host.primary.address>${node0}</jboss.test.host.primary.address>
                            <jboss.test.host.secondary.address>${node1}</jboss.test.host.secondary.address>
                            <jboss.default.multicast.address>${mcast}</jboss.default.multicast.address>
                            <jboss.modcluster.multicast.address>${mcast1}</jboss.modcluster.multicast.address>
                            <server.jvm.args>${surefire.system.args} ${jvm.args.ip.server} ${jvm.args.other}
                                ${jvm.args.timeouts} -Dnode0=${node0} -Dnode1=${node1}
                                -Djboss.default.multicast.address=${mcast}
                                -Djboss.messaging.cluster.password=ILoveWildfly ${extra.server.jvm.args}
                            </server.jvm.args>
                        </systemPropertyVariables>
                        <includes>
                            <include>**/*TestSuite.java</include>
                        </includes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>ts.copy-wildfly</id>
                            <phase>none</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.wildfly.plugins</groupId>
                    <artifactId>wildfly-maven-plugin</artifactId>
                    <version>${version.org.wildfly.plugin}</version>
                    <executions>
                        <execution>
                            <id>server-provisioning</id>
                            <goals>
                                <goal>provision</goal>
                            </goals>
                            <phase>${provision.phase}</phase>
                            <configuration>
                                <skip>${ts.skipTests}</skip>
                                <provisioning-dir>${project.build.directory}/wildfly</provisioning-dir>
                                <record-provisioning-state>true</record-provisioning-state>
                                <log-provisioning-time>${galleon.log.time}</log-provisioning-time>
                                <offline-provisioning>${galleon.offline}</offline-provisioning>
                                <overwrite-provisioned-server>true</overwrite-provisioned-server>
                                <feature-packs>
                                    <feature-pack>
                                        <transitive>true</transitive>
                                        <groupId>${ee.maven.groupId}</groupId>
                                        <artifactId>wildfly-ee-galleon-pack</artifactId>
                                        <version>${ee.maven.version}</version>
                                        <included-packages>
                                            <name>docs.examples.configs</name>
                                        </included-packages>
                                    </feature-pack>
                                    <feature-pack>
                                        <groupId>${full.maven.groupId}</groupId>
                                        <artifactId>wildfly-galleon-pack</artifactId>
                                        <version>${full.maven.version}</version>
                                        <included-packages>
                                            <name>docs.examples.configs</name>
                                        </included-packages>
                                    </feature-pack>
                                </feature-packs>
                                <galleon-options>
                                    <!--
                                        Server used as the DC for the Mixed Domain tests. It is built under default
                                        stability level and can be reloaded to a lower stability level
                                    -->
                                    <config-stability-level>default</config-stability-level>
                                    <package-stability-level>experimental</package-stability-level>
                                    <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                </galleon-options>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>server-provisioning</id>
                        <goals>
                            <goal>provision</goal>
                        </goals>
                        <phase>${provision.phase}</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>use-alt-feature-pack</id>
            <activation>
                <property>
                    <name>testsuite.default.build.project.prefix</name>
                    <value>ee-</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>server-provisioning</id>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                                <phase>${provision.phase}</phase>
                                <configuration combine.self="override">
                                    <skip>${ts.skipTests}</skip>
                                    <provisioning-dir>${project.build.directory}/wildfly</provisioning-dir>
                                    <record-provisioning-state>true</record-provisioning-state>
                                    <log-provisioning-time>${galleon.log.time}</log-provisioning-time>
                                    <offline-provisioning>${galleon.offline}</offline-provisioning>
                                    <overwrite-provisioned-server>true</overwrite-provisioned-server>
                                    <feature-packs>
                                        <feature-pack>
                                            <groupId>${ee.maven.groupId}</groupId>
                                            <artifactId>wildfly-ee-galleon-pack</artifactId>
                                            <version>${ee.maven.version}</version>
                                            <included-packages>
                                                <name>docs.examples.configs</name>
                                            </included-packages>
                                        </feature-pack>
                                    </feature-packs>
                                    <galleon-options>
                                        <!--
                                            Server used as the DC for the Mixed Domain tests. It is built under default
                                            stability level and can be reloaded to a lower stability level
                                        -->
                                        <config-stability-level>default</config-stability-level>
                                        <package-stability-level>experimental</package-stability-level>
                                        <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                    </galleon-options>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>mixed-domain-server-provision</id>
            <activation>
                <property>
                    <name>jboss.test.mixed.domain.dir</name>
                </property>
            </activation>
            <properties>
                <provision.phase>generate-resources</provision.phase>
                <surefire.default-test.phase>test</surefire.default-test.phase>
            </properties>
        </profile>
        <profile>
            <id>legacy-secondary-java-home</id>
            <activation>
                <jdk>[9,)</jdk>
                <property>
                    <name>java8.home</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <testRelease>8</testRelease>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <jboss.test.legacy.host.java8.home>${java8.home}</jboss.test.legacy.host.java8.home>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>legacy-secondary-java11-home</id>
            <activation>
                <jdk>[12,)</jdk>
                <property>
                    <name>java11.home</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <jboss.test.legacy.host.java11.home>${java11.home}</jboss.test.legacy.host.java11.home>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
