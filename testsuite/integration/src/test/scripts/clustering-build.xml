<?xml version="1.0"?>
<project name="clustering-build scripts">

    <!-- Import shared ant targets -->
    <import file="common-targets.xml" as="common"/>
    <import file="clustering-common-targets.xml" as="clustering-common"/>

    <!-- Shared clustering config target -->
    <target name="abstract-build-clustering" description="Builds two server configuration for given JGroups stack and cache mode">

        <echo>clustering-${cacheMode}-${stack}-0 node0: ${node0}</echo>
        <echo>clustering-${cacheMode}-${stack}-0 node1: ${node1}</echo>
        <echo>clustering-${cacheMode}-${stack}-0 mcast: ${mcast}</echo>

        <echo message="  =========  Building config clustering-${cacheMode}-${stack}-0  =========  "/>
        <copy todir="target/wildfly-${cacheMode}-${stack}-0" overwrite="true">
            <fileset dir="${basedir}/target/jbossas"/>
        </copy>
        <ts.config-as.ip-with-multicast name="wildfly-${cacheMode}-${stack}-0"
                                        node="${node0}"
                                        mcast="${mcast}"
                />
        <ts.config-as.add-port-offset name="wildfly-${cacheMode}-${stack}-0"/>
        <ts.config-as.change-transport-stack name="wildfly-${cacheMode}-${stack}-0"
                                             stack="${stack}"/>
        <ts.config-as.change-cache-mode name="wildfly-${cacheMode}-${stack}-0"
                                        cacheMode="${cacheMode}"
                />
        <ts.config-as.configure-multicast-ttl name="wildfly-${cacheMode}-${stack}-0" mcast.ttl="${mcast.ttl}"/>
        <ts.config-as.add-interface name="wildfly-${cacheMode}-${stack}-0"
                                    interface="multicast"
                                    inet-address="${node0}"/>
        <ts.config-as.change-jgroups-multicast-interface name="wildfly-${cacheMode}-${stack}-0"
                                                         interface="multicast"/>

        <echo message="  =========  Building config clustering-${cacheMode}-${stack}-1  =========  "/>
        <copy todir="target/wildfly-${cacheMode}-${stack}-1" overwrite="true">
            <fileset dir="${basedir}/target/jbossas"/>
        </copy>
        <ts.config-as.ip-with-multicast name="wildfly-${cacheMode}-${stack}-1"
                                        node="${node1}"
                                        mcast="${mcast}"
                />
        <ts.config-as.add-port-offset name="wildfly-${cacheMode}-${stack}-1" offset="100" nativePort="9999" httpPort="9990"/>
        <ts.config-as.change-transport-stack name="wildfly-${cacheMode}-${stack}-1"
                                             stack="${stack}"/>
        <ts.config-as.change-cache-mode name="wildfly-${cacheMode}-${stack}-1"
                                        cacheMode="${cacheMode}"
                />
        <ts.config-as.configure-multicast-ttl name="wildfly-${cacheMode}-${stack}-1" mcast.ttl="${mcast.ttl}"/>
        <ts.config-as.add-interface name="wildfly-${cacheMode}-${stack}-1"
                                    interface="multicast"
                                    inet-address="${node0}"/>
        <ts.config-as.change-jgroups-multicast-interface name="wildfly-${cacheMode}-${stack}-1"
                                                         interface="multicast"/>

        <!-- Messaging profiles -->
        <copy todir="target/wildfly-clustered-messaging-0" overwrite="true">
            <fileset dir="${basedir}/target/jbossas"/>
        </copy>
        <ts.config-as.change-transport-stack name="wildfly-clustered-messaging-0"
                                             stack="${stack}"/>
        <copy todir="target/wildfly-clustered-messaging-1" overwrite="true">
            <fileset dir="${basedir}/target/jbossas"/>
        </copy>
        <ts.config-as.change-transport-stack name="wildfly-clustered-messaging-1"
                                             stack="${stack}"/>
    </target>

    <!-- Build SYNC-tcp stack configs -->
    <target name="build-clustering" description="Builds server configuration for SYNC-tcp tests">
        <antcall target="abstract-build-clustering">
            <param name="cacheMode" value="SYNC"/>
            <param name="stack" value="tcp"/>
        </antcall>
    </target>

    <!-- Build remaining configs for extended tests -->
    <target name="build-clustering-extended" description="Builds server configurations for extended tests">
        <antcall target="abstract-build-clustering">
            <param name="cacheMode" value="ASYNC"/>
            <param name="stack" value="tcp"/>
        </antcall>
        <antcall target="abstract-build-clustering">
            <param name="cacheMode" value="SYNC"/>
            <param name="stack" value="udp"/>
        </antcall>
        <antcall target="abstract-build-clustering">
            <param name="cacheMode" value="ASYNC"/>
            <param name="stack" value="udp"/>
        </antcall>
        <antcall target="build-clustering-tunnel"/>
    </target>

    <!-- Single node tests -->
    <target name="build-clustering-udp-jdbc-store" description="Builds server configuration for UDP tests with jdbc-store enabled">

        <echo message="Building config clustering-udp-jdbc-store"/>
        <echo>clustering-udp-jdbc-store node0: ${node0}</echo>
        <copy todir="target/wildfly-udp-jdbc-store" overwrite="true">
            <fileset dir="${basedir}/target/jbossas"/>
        </copy>
        <ts.config-as.add-cache-container name="wildfly-udp-jdbc-store" cacheLoader="${cacheLoader}" cacheType="${cacheType}" mode="${mode}" />
        <ts.config-as.ip-with-multicast name="wildfly-udp-jdbc-store"
                                        node="${node0}"
                                        mcast="${mcast}"
                />
        <ts.config-as.add-port-offset name="wildfly-udp-jdbc-store"/>
        <ts.config-as.configure-multicast-ttl name="wildfly-udp-jdbc-store" mcast.ttl="${mcast.ttl}"/>

    </target>

    <target name="add-cache">
        <ts.config-as.add-cache-container name="wildfly-${cacheMode}-${stack}-0" cacheLoader="${cacheLoader}" cacheType="${cacheType}" mode="${mode}" />
        <ts.config-as.add-cache-container name="wildfly-${cacheMode}-${stack}-1" cacheLoader="${cacheLoader}" cacheType="${cacheType}" mode="${mode}" />
    </target>

    <!-- x-site test deployment:
         4 nodes: ${node0}, ${node1}, ${node2}, ${node3}
         3 sites: LON (node0, node1), NYC (node2), SFO (node3)

         NOTE: the channel "bridge" (using "tcp-bridge" stack) between sites makes use of MPING and so a common mcast address needs to be used,
               and the default "ee" channel (using tcp) uses the differentiated jgroups-udp socket binding
     -->
    <target name="build-clustering-xsite" description="Builds server configurations for x-site testing on three sites">

        <echo>Building x-site configs with sites LON, NYC, SFO</echo>

        <!--
           Configuration for testing backups using standard backup naming conventions
        -->

        <!-- site LON, node 0, mcast 0 -->
        <echo message="Building config clustering-xsite-LON-0"/>
        <copy todir="target/wildfly-xsite-LON-0" overwrite="true">
            <fileset dir="${basedir}/target/jbossas"/>
        </copy>
        <ts.config-as.ip-with-multicast-longform name="wildfly-xsite-LON-0"
                                                 managementIPAddress="${node0}" publicIPAddress="${node0}"
                                                 udpMcastAddress="${mcast-lon}" diagnosticsMcastAddress="${mcast-lon}" mpingMcastAddress="${mcast-mping}" modclusterMcastAddress="${mcast-lon}"/>
        <ts.config-as.add-port-offset name="wildfly-xsite-LON-0"/>
        <ts.config-as.change-transport-stack name="wildfly-xsite-LON-0"
                                             stack="tcp"/>
        <ts.config-as.copy-stack name="wildfly-xsite-LON-0"
                                 stack.base="tcp"
                                 stack.name="tcp-bridge"/>
        <ts.config-as.change-protocol-socket-binding name="wildfly-xsite-LON-0"
                                                     stack="tcp"
                                                     protocol="MPING"
                                                     socket-binding="jgroups-udp"/>
        <!-- define relay at JGroups level on udp stack -->
        <ts.config-as.add-xsite-relay name="wildfly-xsite-LON-0" stack="tcp" relay.site="LON"
                                      remote-site.site="NYC" remote-site.stack="tcp-bridge" remote-site.cluster="bridge"/>
        <ts.config-as.add-xsite-remote-site name="wildfly-xsite-LON-0" stack="tcp"
                                      remote-site.site="SFO" remote-site.stack="tcp-bridge" remote-site.cluster="bridge"/>
        <!-- define cache to be backed up at Infinispan level -->
        <ts.config-as.add-xsite-backups name="wildfly-xsite-LON-0" container="web"
                                       cache-type="distributed-cache" cache="dist" backup.site="NYC"/>
        <ts.config-as.add-xsite-backup name="wildfly-xsite-LON-0" container="web"
                                       cache-type="distributed-cache" cache="dist" backup.site="SFO"/>
        <ts.config-as.configure-multicast-ttl name="wildfly-xsite-LON-0" mcast.ttl="${mcast.ttl}"/>

        <!-- site LON, node 1, mcast 0 -->
        <echo message="Building config clustering-xsite-LON-1"/>
        <copy todir="target/wildfly-xsite-LON-1" overwrite="true">
            <fileset dir="${basedir}/target/jbossas"/>
        </copy>
        <ts.config-as.ip-with-multicast-longform name="wildfly-xsite-LON-1"
                                                 managementIPAddress="${node1}" publicIPAddress="${node1}"
                                                 udpMcastAddress="${mcast-lon}" diagnosticsMcastAddress="${mcast-lon}" mpingMcastAddress="${mcast-mping}" modclusterMcastAddress="${mcast-lon}"/>
        <ts.config-as.add-port-offset name="wildfly-xsite-LON-1" offset="100" nativePort="9999" httpPort="9990"/>
        <ts.config-as.change-transport-stack name="wildfly-xsite-LON-1"
                                             stack="tcp"/>
        <ts.config-as.copy-stack name="wildfly-xsite-LON-1"
                                 stack.base="tcp"
                                 stack.name="tcp-bridge"/>
        <ts.config-as.change-protocol-socket-binding name="wildfly-xsite-LON-1"
                                                     stack="tcp"
                                                     protocol="MPING"
                                                     socket-binding="jgroups-udp"/>
        <!-- define relay at JGroups level -->
        <ts.config-as.add-xsite-relay name="wildfly-xsite-LON-1" stack="tcp" relay.site="LON"
                                      remote-site.site="NYC" remote-site.stack="tcp-bridge" remote-site.cluster="bridge"/>
        <ts.config-as.add-xsite-remote-site name="wildfly-xsite-LON-1" stack="tcp"
                                      remote-site.site="SFO" remote-site.stack="tcp-bridge" remote-site.cluster="bridge"/>
        <!-- define cache to be backed up at Infinispan level -->
        <ts.config-as.add-xsite-backups name="wildfly-xsite-LON-1" container="web"
                                       cache-type="distributed-cache" cache="dist" backup.site="NYC"/>
        <ts.config-as.add-xsite-backup name="wildfly-xsite-LON-1" container="web"
                                       cache-type="distributed-cache" cache="dist" backup.site="SFO"/>
        <ts.config-as.configure-multicast-ttl name="wildfly-xsite-LON-1" mcast.ttl="${mcast.ttl}"/>

        <!-- site NYC, node 2, mcast 1 -->
        <echo message="Building config clustering-xsite-NYC-0"/>
        <copy todir="target/wildfly-xsite-NYC-0" overwrite="true">
            <fileset dir="${basedir}/target/jbossas"/>
        </copy>
        <ts.config-as.ip-with-multicast-longform name="wildfly-xsite-NYC-0"
                                                 managementIPAddress="${node2}" publicIPAddress="${node2}"
                                                 udpMcastAddress="${mcast-nyc}" diagnosticsMcastAddress="${mcast-nyc}" mpingMcastAddress="${mcast-mping}" modclusterMcastAddress="${mcast-nyc}"/>
        <ts.config-as.add-port-offset name="wildfly-xsite-NYC-0" offset="200" nativePort="9999" httpPort="9990"/>
        <ts.config-as.change-transport-stack name="wildfly-xsite-NYC-0"
                                             stack="tcp"/>
        <ts.config-as.copy-stack name="wildfly-xsite-NYC-0"
                                 stack.base="tcp"
                                 stack.name="tcp-bridge"/>
        <ts.config-as.change-protocol-socket-binding name="wildfly-xsite-NYC-0"
                                                     stack="tcp"
                                                     protocol="MPING"
                                                     socket-binding="jgroups-udp"/>
        <!-- define relay at JGroups level -->
        <ts.config-as.add-xsite-relay name="wildfly-xsite-NYC-0" stack="tcp" relay.site="NYC"
                                      remote-site.site="LON" remote-site.stack="tcp-bridge" remote-site.cluster="bridge"/>
        <ts.config-as.add-xsite-remote-site name="wildfly-xsite-NYC-0" stack="tcp"
                                      remote-site.site="SFO" remote-site.stack="tcp-bridge" remote-site.cluster="bridge"/>
        <ts.config-as.configure-multicast-ttl name="wildfly-xsite-NYC-0" mcast.ttl="${mcast.ttl}"/>

        <!-- site SFO, node 3, mcast 2 -->
        <echo message="Building config clustering-xsite-SFO-0"/>
        <copy todir="target/wildfly-xsite-SFO-0" overwrite="true">
            <fileset dir="${basedir}/target/jbossas"/>
        </copy>
        <ts.config-as.ip-with-multicast-longform name="wildfly-xsite-SFO-0"
                                                 managementIPAddress="${node3}" publicIPAddress="${node3}"
                                                 udpMcastAddress="${mcast-sfo}" diagnosticsMcastAddress="${mcast-sfo}" mpingMcastAddress="${mcast-mping}" modclusterMcastAddress="${mcast-sfo}"/>
        <ts.config-as.add-port-offset name="wildfly-xsite-SFO-0" offset="300" nativePort="9999" httpPort="9990"/>
        <ts.config-as.change-transport-stack name="wildfly-xsite-SFO-0"
                                             stack="tcp"/>
        <ts.config-as.copy-stack name="wildfly-xsite-SFO-0"
                                 stack.base="tcp"
                                 stack.name="tcp-bridge"/>
        <ts.config-as.change-protocol-socket-binding name="wildfly-xsite-SFO-0"
                                                     stack="tcp"
                                                     protocol="MPING"
                                                     socket-binding="jgroups-udp"/>
        <!-- define relay at JGroups level -->
        <ts.config-as.add-xsite-relay name="wildfly-xsite-SFO-0" stack="tcp" relay.site="SFO"
                                      remote-site.site="LON" remote-site.stack="tcp-bridge" remote-site.cluster="bridge"/>
        <ts.config-as.add-xsite-remote-site name="wildfly-xsite-SFO-0" stack="tcp"
                                      remote-site.site="NYC" remote-site.stack="tcp-bridge" remote-site.cluster="bridge"/>
        <ts.config-as.configure-multicast-ttl name="wildfly-xsite-SFO-0" mcast.ttl="${mcast.ttl}"/>

        <!-- site SFO, node 3, mcast 2 + backupFor -->
        <echo message="Building config clustering-xsite-SFO-0-backupFor"/>
        <copy todir="target/wildfly-xsite-SFO-0-backupFor" overwrite="true">
            <fileset dir="${basedir}/target/jbossas"/>
        </copy>
        <ts.config-as.ip-with-multicast-longform name="wildfly-xsite-SFO-0-backupFor"
                                                 managementIPAddress="${node3}" publicIPAddress="${node3}"
                                                 udpMcastAddress="${mcast-sfo}" diagnosticsMcastAddress="${mcast-sfo}" mpingMcastAddress="${mcast-mping}" modclusterMcastAddress="${mcast-sfo}"/>
        <ts.config-as.add-port-offset name="wildfly-xsite-SFO-0-backupFor" offset="300" nativePort="9999" httpPort="9990"/>
        <ts.config-as.change-transport-stack name="wildfly-xsite-SFO-0-backupFor"
                                             stack="tcp"/>
        <ts.config-as.copy-stack name="wildfly-xsite-SFO-0-backupFor"
                                 stack.base="tcp"
                                 stack.name="tcp-bridge"/>
        <ts.config-as.change-protocol-socket-binding name="wildfly-xsite-SFO-0-backupFor"
                                                     stack="tcp"
                                                     protocol="MPING"
                                                     socket-binding="jgroups-udp"/>
        <!-- define relay at JGroups level -->
        <ts.config-as.add-xsite-relay name="wildfly-xsite-SFO-0-backupFor" stack="tcp" relay.site="SFO"
                                      remote-site.site="LON" remote-site.stack="tcp-bridge" remote-site.cluster="bridge"/>
        <ts.config-as.add-xsite-remote-site name="wildfly-xsite-SFO-0-backupFor" stack="tcp"
                                      remote-site.site="NYC" remote-site.stack="tcp-bridge" remote-site.cluster="bridge"/>

        <!-- create a named backup cache based on repl for LON:web:dist and mark as backup-for -->
        <ts.config-as.copy-cache name="wildfly-xsite-SFO-0-backupFor" container.name="web"
                                       cache-type="distributed-cache" cache.base="dist" cache.name="LON"/>
        <ts.config-as.add-xsite-backup-for name="wildfly-xsite-SFO-0-backupFor" container="web"
                                       cache-type="distributed-cache" cache="LON" remote-site="LON" remote-cache="dist"/>
        <ts.config-as.configure-multicast-ttl name="wildfly-xsite-SFO-0-backupFor" mcast.ttl="${mcast.ttl}"/>

    </target>

    <target name="build-clustering-tunnel" description="Builds server configuration with JGroups tunnel transport">
        <antcall target="abstract-build-clustering">
            <param name="cacheMode" value="ASYNC"/>
            <param name="stack" value="tunnel"/>
        </antcall>
        <ts.config-as.add-tunnel-transport-stack name="wildfly-ASYNC-tunnel-0"
                                                 stack="tunnel"
                                                 router-inet-address="${node0}"/>
        <ts.config-as.add-tunnel-transport-stack name="wildfly-ASYNC-tunnel-1"
                                                 stack="tunnel"
                                                 router-inet-address="${node0}"/>
    </target>

    <!-- two cluster test deployment:
         4 nodes: ${node0}, ${node1}, ${node2}, ${node3}
         clusters: clusterA (node0, node1), clusterB (node2, node3)
     -->
    <target name="build-clustering-two-clusters" description="Builds server configurations for EJBClient testing on two clusters">

        <echo>Building two cluster configs with clusters clusterA, clusterB</echo>

        <!-- clusterA, node 0, mcast 0 -->
        <echo message="Building config clustering-two-clusters clusterA-node0"/>
        <copy todir="target/wildfly-clusterA-node0" overwrite="true">
            <fileset dir="${basedir}/target/jbossas"/>
        </copy>
        <ts.config-as.ip-with-multicast-longform name="wildfly-clusterA-node0"
                                                 managementIPAddress="${node0}" publicIPAddress="${node0}"
                                                 udpMcastAddress="${mcast-clusterA}" diagnosticsMcastAddress="${mcast-clusterA}" mpingMcastAddress="${mcast-mping}" modclusterMcastAddress="${mcast-clusterA}"/>
        <ts.config-as.add-port-offset name="wildfly-clusterA-node0"/>
        <ts.config-as.configure-multicast-ttl name="wildfly-clusterA-node0" mcast.ttl="${mcast.ttl}"/>
        <!--ts.config-as.add-remote-outbound-connection name="wildfly-clusterA-node0" node="${node2}" remotePort="8280" protocol="http-remoting"/-->
        <ts.config-as.add-remote-outbound-connection name="wildfly-clusterA-node0" node="${node2}" remotePort="8280" protocol="http-remoting" securityRealm="PasswordRealm" userName="remoteejbuser"/>
        <ts.config-as.add-identity-realm name="wildfly-clusterA-node0" realmName="PasswordRealm" secret="cmVtQHRlZWpicGFzc3dkMQ=="/>

        <ts.config-as.change-cache-container-name name="wildfly-clusterA-node0" container="ejb" newName="ejb-forwarder"/>
        <ts.config-as.change-passivation-store-cache-container-name name="wildfly-clusterA-node0" storeName="infinispan" newContainerName="ejb-forwarder"/>
        <ts.config-as.change-ejb-remote-connector-cluster-name name="wildfly-clusterA-node0" cluster="ejb-forwarder"/>

        <!-- clusterA, node 1, mcast 0 -->
        <echo message="Building config clustering-two-clusters clusterA-node1"/>
        <copy todir="target/wildfly-clusterA-node1" overwrite="true">
            <fileset dir="${basedir}/target/jbossas"/>
        </copy>
        <ts.config-as.ip-with-multicast-longform name="wildfly-clusterA-node1"
                                                 managementIPAddress="${node1}" publicIPAddress="${node1}"
                                                 udpMcastAddress="${mcast-clusterA}" diagnosticsMcastAddress="${mcast-clusterA}" mpingMcastAddress="${mcast-mping}" modclusterMcastAddress="${mcast-clusterA}"/>
        <ts.config-as.add-port-offset name="wildfly-clusterA-node1" offset="100" nativePort="9999" httpPort="9990"/>
        <ts.config-as.configure-multicast-ttl name="wildfly-clusterA-node1" mcast.ttl="${mcast.ttl}"/>
        <ts.config-as.add-remote-outbound-connection name="wildfly-clusterA-node1" node="${node2}" remotePort="8280" protocol="http-remoting" securityRealm="PasswordRealm" userName="remoteejbuser" />
        <ts.config-as.add-identity-realm name="wildfly-clusterA-node1" realmName="PasswordRealm" secret="cmVtQHRlZWpicGFzc3dkMQ=="/>

        <ts.config-as.change-cache-container-name name="wildfly-clusterA-node1" container="ejb" newName="ejb-forwarder"/>
        <ts.config-as.change-passivation-store-cache-container-name name="wildfly-clusterA-node1" storeName="infinispan" newContainerName="ejb-forwarder"/>
        <ts.config-as.change-ejb-remote-connector-cluster-name name="wildfly-clusterA-node1" cluster="ejb-forwarder"/>


        <!-- clusterB, node 2, mcast 1 -->
        <echo message="Building config clustering-two-clusters clusterB-node0"/>
        <copy todir="target/wildfly-clusterB-node0" overwrite="true">
            <fileset dir="${basedir}/target/jbossas"/>
        </copy>
        <ts.config-as.ip-with-multicast-longform name="wildfly-clusterB-node0"
                                                 managementIPAddress="${node2}" publicIPAddress="${node2}"
                                                 udpMcastAddress="${mcast-clusterB}" diagnosticsMcastAddress="${mcast-clusterB}" mpingMcastAddress="${mcast-mping}" modclusterMcastAddress="${mcast-clusterB}"/>
        <ts.config-as.add-port-offset name="wildfly-clusterB-node0" offset="200" nativePort="9999" httpPort="9990"/>
        <ts.config-as.configure-multicast-ttl name="wildfly-clusterB-node0" mcast.ttl="${mcast.ttl}"/>

        <!-- clusterB, node 3, mcast 1 -->
        <echo message="Building config clustering-two-clusters-clusterB-node1"/>
        <copy todir="target/wildfly-clusterB-node1" overwrite="true">
            <fileset dir="${basedir}/target/jbossas"/>
        </copy>
        <ts.config-as.ip-with-multicast-longform name="wildfly-clusterB-node1"
                                                 managementIPAddress="${node3}" publicIPAddress="${node3}"
                                                 udpMcastAddress="${mcast-clusterB}" diagnosticsMcastAddress="${mcast-clusterB}" mpingMcastAddress="${mcast-mping}" modclusterMcastAddress="${mcast-clusterB}"/>
        <ts.config-as.add-port-offset name="wildfly-clusterB-node1" offset="300" nativePort="9999" httpPort="9990"/>
        <ts.config-as.configure-multicast-ttl name="wildfly-clusterB-node1" mcast.ttl="${mcast.ttl}"/>

    </target>

</project>
