<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2011, Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags. See the copyright.txt file in the
  ~ distribution for a full listing of individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<project>

    <propertyset id="ds.properties">
        <propertyref prefix="ds"/>
    </propertyset>




    <!--
          Change AS database configuration.
    -->
    <condition property="changeDB">
        <not><equals arg1="${ds.db}" arg2=""/></not>
    </condition>
    
    <target name="changeDefaultDatabase" description="Changes the default database" if="changeDB">

        <echo message="Changing database for ${server-config} with parameters:"/>
        <echo message="ds.db = ${ds.db}"/>
        <echo message="ds.jdbc.driver.jar = ${ds.jdbc.driver.jar}"/>
        <echo message="ds.jdbc.url = ${ds.jdbc.url}"/>
        <echo message="ds.jdbc.user = ${ds.jdbc.user}"/>
        <echo message="ds.jdbc.pass = ${ds.jdbc.pass}"/>

        <property name="server.dir" value="${project.build.directory}/jbossas-${server-config}"/> <!-- Ant will copy actual instances from this "template" (when imlpemented). -->
        <property name="config.dir" value="${server.dir}/standalone/configuration"/>

        <!-- Copy jar into standalone/deployments. This installs the driver under a new driver name. -->
        <copy file="${jbossas.ts.integ.dir}/target/jdbcDrivers/${ds.jdbc.driver.jar}" todir="${server.dir}/standalone/deployments"/>

        <!-- Change standalone/configuration/standalone.xml file. I.e. update datasource subsystem config. -->
        <xslt destdir="${config.dir}" extension=".xml.mod" useImplicitFileset="false"
              style="${jbossas.ts.integ.dir}/src/test/xslt/changeDatabase.xsl">
            <fileset dir="${config.dir}">
                <include name="standalone.xml"/>
                <include name="standalone-xts.xml"/>
                <include name="standalone-ha.xml"/>
                <include name="standalone-full.xml"/>
            </fileset>
            <param name="ds.jdbc.driver.jar" expression="${ds.jdbc.driver.jar}"/>
            <param name="ds.jdbc.url" expression="${ds.jdbc.url}"/>
            <param name="ds.jdbc.user" expression="${ds.jdbc.user}"/>
            <param name="ds.jdbc.pass" expression="${ds.jdbc.pass}"/>
        </xslt>

        <!-- Move processed files back. -->
        <move todir="${config.dir}">
           <fileset dir="${config.dir}">
               <include name="**/standalone.xml.mod"/>
               <include name="**/standalone-ha.xml.mod"/>
               <include name="**/standalone-full.xml.mod"/>
               <include name="**/standalone-xts.xml.mod"/>
           </fileset>
           <mapper type="glob" from="*.mod" to="*"/>
         </move>
    </target>

    <!--
        Build server configutation:
           * Copy from distribution directory (TODO: Copy from ${basedir}target/jbossas to pick up changes by Maven!
           * Overwrite some config files, replace tokens.
     -->
    <macrodef name="build-server-config" description="Builds a server configuration">

        <attribute name="name" default="jbossas"/>
        <attribute name="output.dir" default="${project.build.directory}"/>
        <attribute name="jboss.dist" default="${jboss.dist}"/>
        <attribute name="test.configs.dir" default="${jbossas.ts.integ.dir}/src/test/resources/test-configs"/>
        <element name="filter-elements" optional="yes" description="additional filter elements"/>

        <sequential>

            <echo message="Building AS instance &quot;@{name}&quot; from @{jboss.dist} to @{output.dir}"/>

            <!-- copy the base distribution -->
            <!-- we exclude modules and bundles as they are read-only and we locate the via sys props-->
            <copy todir="@{output.dir}/jbossas-@{name}">
                <fileset dir="@{jboss.dist}">
                    <exclude name="**/modules/**"/>
                    <exclude name="**/bundles/**"/>
                </fileset>
            </copy>

            <!-- overwrite with configs from test-configs and apply property filtering -->
            <copy todir="@{output.dir}/jbossas-@{name}" overwrite="true" failonerror="false">
                <fileset dir="@{test.configs.dir}/@{name}"/>
                <filterset begintoken="${" endtoken="}">
                    <filter token="node0" value="${node0}"/>
                    <filter token="node1" value="${node1}"/>
                    <filter token="udpGroup" value="${udpGroup}"/>
                    <filter-elements/>
                </filterset>
            </copy>
        </sequential>
    </macrodef>



    <!--
        Change IP adresses config.
     -->
    <macrodef name="change-ip-addresses" description="Changes the IP addresses of a single node configuration">

        <attribute name="name" default="jbossas"/>
        <attribute name="output.dir" default="${project.build.directory}"/>
        <attribute name="config.dir.name" default="standalone/configuration"/>
        <attribute name="node" default="${node0}"/>

        <sequential>

            <echo message="Changing IP addresses for config @{name}"/>

            <!-- Process *.xml to *.xml.mod. -->
            <xslt destdir="@{output.dir}/jbossas-@{name}/@{config.dir.name}"
                  style="${jbossas.ts.integ.dir}/src/test/xslt/changeIPAddresses.xsl"
                  extension=".xml.mod"
                  useImplicitFileset="false">
                <fileset dir="@{output.dir}/jbossas-@{name}/@{config.dir.name}">
                    <include name="**/standalone.xml"/>
                    <include name="**/standalone-full.xml"/>
                    <include name="**/standalone-ha.xml"/>
                </fileset>
                <param name="managementIPAddress" expression="@{node}"/>
                <param name="publicIPAddress" expression="@{node}"/>
            </xslt>

            <!-- Move processed files back. -->
            <move todir="@{output.dir}/jbossas-@{name}/@{config.dir.name}">
               <fileset dir="@{output.dir}/jbossas-@{name}/@{config.dir.name}">
                   <include name="**/standalone-full.xml.mod"/>
                   <include name="**/standalone.xml.mod"/>
                   <include name="**/standalone-ha.xml.mod"/>
               </fileset>
               <mapper type="glob" from="*.mod" to="*"/>
            </move>
        </sequential>
    </macrodef>


    <!--
        Change IP adresses, including multicast.
        This macro makes use of saxon via  ${net.sf.saxon:saxon:jar}.
    -->
    <macrodef name="change-ip-multicast-addresses" description="Changes the IP *and* multicast addresses of a node configuration">

        <attribute name="name" default="jbossas"/>
        <attribute name="output.dir" default="${project.build.directory}"/>
        <attribute name="config.dir.name" default="standalone/configuration"/>
        <attribute name="node" default="${node0}"/>
        <attribute name="mcastaddr" default="${udpGroup}"/>

        <sequential>
            <echo message="Changing IP addresses for config @{name}"/>

            <!-- Process *.xml to *.xml.mod. -->
            <xslt destdir="@{output.dir}/jbossas-@{name}/@{config.dir.name}"
                  style="${jbossas.ts.integ.dir}/src/test/xslt/changeIPAddresses.xsl"
                  extension=".xml.mod"
                  useImplicitFileset="false">
                <!-- Can't get this to work. -->
                <!-- classpath path="${net.sf.saxon:saxon:jar}"/ -->
                <fileset dir="@{output.dir}/jbossas-@{name}/@{config.dir.name}">
                    <include name="**/standalone-full.xml"/>
                    <include name="**/standalone-ha.xml"/>
                    <include name="**/standalone.xml"/>
                </fileset>
                <param name="managementIPAddress" expression="@{node}"/>
                <param name="publicIPAddress" expression="@{node}"/>
                <param name="udpMcastAddress" expression="@{mcastaddr}"/>
            </xslt>

            <!-- Move processed files back. -->
            <move todir="@{output.dir}/jbossas-@{name}/@{config.dir.name}">
               <fileset dir="@{output.dir}/jbossas-@{name}/@{config.dir.name}">
                   <include name="**/standalone-ha.xml.mod"/>
                   <include name="**/standalone.xml.mod"/>
                   <include name="**/standalone-full.xml.mod"/>
               </fileset>
               <mapper type="glob" from="*.mod" to="*"/>
             </move>
        </sequential>
    </macrodef>


    
    <!--
        Configure port offset.
        This macro makes use of saxon via  ${net.sf.saxon:saxon:jar}.
    -->
    <macrodef name="add-port-offset" description="Add a port offeset a node configuration">

        <attribute name="name" default="jbossas"/>
        <attribute name="output.dir" default="${project.build.directory}"/>
        <attribute name="config.dir.name" default="standalone/configuration"/>
        <attribute name="offset" default="0"/>
        <attribute name="nativePort" default="9999"/>
        <attribute name="httpPort" default="9990"/>

        <sequential>
            <echo message="Adding port offset for config @{name}"/>

            <!-- Process *.xml to *.xml.mod. -->
            <xslt destdir="@{output.dir}/jbossas-@{name}/@{config.dir.name}"
                  style="${jbossas.ts.integ.dir}/src/test/xslt/addPortOffset.xsl"
                  extension=".xml.mod"
                  useImplicitFileset="false">
                <!-- can't get this to work -->
                <!-- classpath path="${net.sf.saxon:saxon:jar}"/ -->
                <fileset dir="@{output.dir}/jbossas-@{name}/@{config.dir.name}">
                    <include name="**/standalone-ha.xml"/>
                    <include name="**/standalone.xml"/>
                    <include name="**/standalone-full.xml"/>
                </fileset>
                <param name="portOffset" expression="@{offset}"/>
                <param name="nativeInterfaceManagementPort" expression="@{nativePort}"/>
                <param name="httpInterfaceManagementPort" expression="@{httpPort}"/>
            </xslt>

            <!-- Move processed files back. -->
            <move todir="@{output.dir}/jbossas-@{name}/@{config.dir.name}">
               <fileset dir="@{output.dir}/jbossas-@{name}/@{config.dir.name}">
                   <include name="**/standalone-ha.xml.mod"/>
                   <include name="**/standalone.xml.mod"/>
                   <include name="**/standalone-full.xml.mod"/>
               </fileset>
               <mapper type="glob" from="*.mod" to="*"/>
             </move>
        </sequential>
    </macrodef>


    
    <!--
        Enable JTS.
        This macro makes use of saxon via  ${net.sf.saxon:saxon:jar}.
    -->
    <macrodef name="add-jts" description="Enable JTS">

        <attribute name="name" default="jbossas"/>
        <attribute name="output.dir" default="${project.build.directory}"/>
        <attribute name="config.dir.name" default="standalone/configuration"/>

        <sequential>
            <echo message="Enabling JTS for config @{name}"/>

            <!-- Process *.xml to *.xml.mod. -->
            <xslt destdir="@{output.dir}/jbossas-@{name}/@{config.dir.name}"
                  style="${jbossas.ts.integ.dir}/src/test/xslt/enableJTS.xsl"
                  extension=".xml.mod"
                  useImplicitFileset="false">
                <fileset dir="@{output.dir}/jbossas-@{name}/@{config.dir.name}">
                    <include name="**/standalone-ha.xml"/>
                    <include name="**/standalone.xml"/>
                    <include name="**/standalone-full.xml"/>
                </fileset>
            </xslt>

            <!-- Move processed files back. -->
            <move todir="@{output.dir}/jbossas-@{name}/@{config.dir.name}">
               <fileset dir="@{output.dir}/jbossas-@{name}/@{config.dir.name}">
                   <include name="**/standalone-ha.xml.mod"/>
                   <include name="**/standalone.xml.mod"/>
                   <include name="**/standalone-full.xml.mod"/>
               </fileset>
               <mapper type="glob" from="*.mod" to="*"/>
             </move>
        </sequential>
    </macrodef>

</project>
