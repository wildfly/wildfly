<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jboss.as</groupId>
        <artifactId>jboss-as-testsuite</artifactId>
        <version>7.2.0.Alpha1-SNAPSHOT</version>
    </parent>

    <groupId>org.jboss.as</groupId>
    <artifactId>jboss-as-ts-integ</artifactId>
    <packaging>pom</packaging>
    <version>7.2.0.Alpha1-SNAPSHOT</version>

    <name>JBoss Application Server Test Suite: Integration</name>

    <properties>
        <!-- Current module's directory. Will automatically pick up sub-module's basedir. -->
        <jbossas.ts.submodule.dir>${basedir}</jbossas.ts.submodule.dir>
        <!-- Integration module's directory. To be overriden in sub-modules. -->
        <jbossas.ts.integ.dir>${basedir}</jbossas.ts.integ.dir>
        <!-- This project's testsuite dir. To be changed for every submodule (until we figure out how to do it automatically). -->
        <jbossas.ts.dir>${jbossas.ts.integ.dir}/..</jbossas.ts.dir>
        <!-- This project's root dir. -->
        <jbossas.project.dir>${jbossas.ts.dir}/..</jbossas.project.dir>
        <jvm.args.dirs>
            -Djbossas.ts.submodule.dir=${jbossas.ts.submodule.dir}
            -Djbossas.ts.integ.dir=${jbossas.ts.integ.dir}
            -Djbossas.ts.dir=${jbossas.ts.dir}
            -Djbossas.project.dir=${jbossas.project.dir}
            -Djboss.dist=${jboss.dist}
        </jvm.args.dirs>

        <!-- Used to provide an absolute location for the distribution under test. -->
        <jboss.dist>${jbossas.project.dir}/build/target/jboss-as-${jboss.as.release.version}</jboss.dist>
        <jboss.home>${jboss.dist}</jboss.home>

        <!-- Used to provide an absolute location for the XSLT scripts. -->
        <xslt.scripts.dir>${jbossas.ts.integ.dir}/src/test/xslt</xslt.scripts.dir>

        <ts.skipTests>${skipTests}</ts.skipTests>
    </properties>

    <profiles>

        <!-- Run all tests on -DallTests. -->
        <profile>
            <id>ts.integ.allGroups</id>
            <activation><property><name>allTests</name></property></activation>
            <modules>
                <module>smoke</module>
                <module>basic</module>
                <module>clust</module>
                <module>iiop</module>
                <!-- module>xts</module -->
                <module>multinode</module>
                <module>manualmode</module>
            </modules>
        </profile>
        <!-- Define ts.integration uber-group. -->
        <profile>
            <id>ts.integ.allGroups2</id>
            <activation><property><name>ts.integration</name></property></activation>
            <modules>
                <module>smoke</module>
                <module>basic</module>
                <module>clust</module>
                <module>iiop</module>
                <!-- module>xts</module -->
                <module>multinode</module>
                <module>manualmode</module>
            </modules>
        </profile>

        <!-- -Dts.smoke -->
        <profile>
            <id>ts.integ.group.smoke</id>
            <activation><property><name>!ts.noSmoke</name></property></activation>
            <modules>
                <module>smoke</module>
            </modules>
        </profile>

        <!-- -Dts.basic -->
        <profile>
            <id>ts.integ.group.basic</id>
            <activation><property><name>ts.basic</name></property></activation>
            <modules>
                <module>basic</module>
            </modules>
        </profile>

        <!-- -Dts.clust -->
        <profile>
            <id>ts.integ.group.clust</id>
            <activation><property><name>ts.clust</name></property></activation>
            <modules>
                <module>clust</module>
            </modules>
        </profile>

        <!-- -Dts.iiop -->
        <profile>
            <id>ts.integ.group.iiop</id>
            <activation><property><name>ts.iiop</name></property></activation>
            <modules>
                <module>iiop</module>
            </modules>
        </profile>

        <!-- -Dts.xts -->
        <!-- profile>
            <id>ts.integ.group.xts</id>
            <activation><property><name>ts.xts</name></property></activation>
            <modules>
                <module>xts</module>
            </modules>
        </profile -->

        <!-- -Dts.multinode -->
        <profile>
            <id>ts.integ.group.multinode</id>
            <activation><property><name>ts.multinode</name></property></activation>
            <modules>
                <module>multinode</module>
            </modules>
        </profile>

        <!-- -Dts.manualmode -->
        <profile>
            <id>ts.integ.group.manualmode</id>
            <activation><property><name>ts.manualmode</name></property></activation>
            <modules>
                <module>manualmode</module>
            </modules>
        </profile>

    </profiles>


    <build>
        <plugins>
            <!-- General plugin configuration for all integration tests -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <version>2.1.1</version>
                <inherited>true</inherited>
                <executions>
                    <execution><id>help.active-profiles</id>
                        <phase>initialize</phase>
                        <goals><goal>active-profiles</goal></goals>
                        <configuration><output>target/help.active-profiles.txt</output></configuration>
                    </execution>
                    <execution><id>help.effective-pom</id>
                        <phase>initialize</phase>
                        <goals><goal>effective-pom</goal></goals>
                        <configuration><output>target/help.effective-pom.txt</output></configuration>
                    </execution>
                    <execution><id>help.effective-settings</id>
                        <phase>initialize</phase>
                        <goals><goal>effective-settings</goal></goals>
                        <configuration><output>target/help.effective-settings.txt</output></configuration>
                    </execution>
                   <execution><id>help.system</id>
                        <phase>initialize</phase>
                        <goals><goal>system</goal></goals>
                        <configuration><output>target/help.system.txt</output></configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- Resources plugin. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions combine.children="append">
                    <!-- Copy users and roles config from shared resources. -->
                    <execution>
                        <id>ts.config-as.copy-mgmt-users</id>
                        <phase>generate-test-resources</phase>
                        <goals><goal>copy-resources</goal></goals>
                        <inherited>true</inherited>
                        <configuration>
                            <outputDirectory>${basedir}/target/jbossas/standalone/configuration</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>../../shared/src/main/resources</directory>
                                    <includes><include>*.properties</include></includes>
                                </resource>
                                <resource>
                                    <!-- Add the XTS config to the standalone/config directory, so it will be processed as well -->
                                    <directory>${basedir}/target/jbossas/docs/examples/configs</directory>
                                    <includes><include>standalone-xts.xml</include></includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- General surefire configuration. Applies to submodules too. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>${ts.skipTests}</skipTests>
                    <!-- Prevent test and server output appearing in console. -->
                    <redirectTestOutputToFile>${testLogToFile}</redirectTestOutputToFile>
                    <enableAssertions>true</enableAssertions>
                    <!--<basedir>${jbossas.ts.integ.dir}</basedir>  <!- - "The base directory of the project being tested." Sets ${basedir}. -->
                    <workingDirectory>${basedir}/target/workdir</workingDirectory> <!-- Work in submodule's own dir. -->

                    <!-- Forked process timeout -->
                    <forkedProcessTimeoutInSeconds>${surefire.forked.process.timeout}</forkedProcessTimeoutInSeconds>
                    <!-- System properties to forked surefire JVM which runs clients. -->
                    <argLine>${jvm.args.ip.client} ${jvm.args.timeouts}</argLine>

                    <!-- System properties passed to test cases -->
                    <systemPropertyVariables combine.children="append">
                        <node0>${node0}</node0>
                        <node1>${node1}</node1>
                        <mcast>${mcast}</mcast>

                        <jbossas.ts.submodule.dir>${basedir}</jbossas.ts.submodule.dir>
                        <jbossas.ts.integ.dir>${jbossas.ts.integ.dir}</jbossas.ts.integ.dir>
                        <jbossas.ts.dir>${jbossas.ts.dir}</jbossas.ts.dir>
                        <jbossas.project.dir>${jbossas.project.dir}</jbossas.project.dir>
                        <jboss.dist>${jboss.dist}</jboss.dist>

                        <!--
                            Used in arquillian.xml - arguments for all JBoss AS instances.
                            System properties are duplicated here until ARQ-647 is implemented.
                        -->
                        <server.jvm.args>${surefire.system.args} ${jvm.args.ip.server} ${jvm.args.jacoco} ${jvm.args.security} ${jvm.args.timeouts} -Dnode0=${node0} -Dnode1=${node1} -Dmcast=${mcast} ${jvm.args.dirs}</server.jvm.args>
                    </systemPropertyVariables>

                </configuration>
            </plugin>
            
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>maven-replacer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                    <!--<execution> <id>ts.config-client.replace-localhost-properties</id> <phase>verify</phase> <goals><goal>replace</goal></goals> </execution>-->
                    <execution> <id>ts.fix-logs.ARQ-775</id> <phase>verify</phase> <goals><goal>replace</goal></goals> </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>target/surefire-reports/**/*-output.txt</include>
                        <include>target/surefire-reports/**/*.txt</include>
                    </includes>
                    <replacements>
                        <!-- Fix one-letter-per-line. -->
                        <replacement> <token>^(.)\n(?!..+\n)</token> <value>$1</value> </replacement>
                        <!-- Fix double newlines. -->
                        <replacement> <token>\n(?=\n)</token> <value></value> </replacement>
                    </replacements>
                   
                    <regexFlags>
                        <regexFlag>MULTILINE</regexFlag>
                    </regexFlags>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <dependencies>
        <!-- Dependencies specific to the integration tests. -->
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-webservices-tests-integration</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-subsystem-test</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>
