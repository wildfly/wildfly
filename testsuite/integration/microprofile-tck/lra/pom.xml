<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright The WildFly Authors
  ~ SPDX-License-Identifier: Apache-2.0
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-ts-integ-mp</artifactId>
        <!--
        Maintain separation between the artifact id and the version to help prevent
        merge conflicts between commits changing the GA and those changing the V.
        -->
        <version>32.0.0.Beta1-SNAPSHOT</version>
    </parent>

    <artifactId>wildfly-ts-integ-mp-lra</artifactId>
    <name>WildFly Test Suite: Integration - MicroProfile TCK - LRA</name>

    <properties>
        <jbossas.ts.integ.dir>${basedir}/../..</jbossas.ts.integ.dir>
        <jbossas.ts.dir>${jbossas.ts.integ.dir}/..</jbossas.ts.dir>
        <jbossas.project.dir>${jbossas.ts.dir}/..</jbossas.project.dir>
        <ts.microprofile-tck-tests-dependency>org.eclipse.microprofile.lra:microprofile-lra-tck</ts.microprofile-tck-tests-dependency>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jbossas.ts.integ.dir>${basedir}/../..</jbossas.ts.integ.dir>
        <jbossas.ts.dir>${jbossas.ts.integ.dir}/..</jbossas.ts.dir>
        <jbossas.project.dir>${jbossas.ts.dir}/..</jbossas.project.dir>
        <wildfly.build.output.dir>build/target/${server.output.dir.prefix}-${server.output.dir.version}</wildfly.build.output.dir>
        <ts.copy-wildfly.phase>none</ts.copy-wildfly.phase>
        <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
        <ts.microprofile-tck-provisioning.phase>test-compile</ts.microprofile-tck-provisioning.phase>
        <lra.coordinator.url>http://localhost:8080/lra-coordinator/lra-coordinator</lra.coordinator.url>
        <lra.tck.base.url>http://localhost:8080</lra.tck.base.url>
        <lra.http.recovery.host>localhost</lra.http.recovery.host>
        <lra.http.recovery.port>8080</lra.http.recovery.port>
        <lra.http.recovery.path>/lra-coordinator/lra-coordinator/recovery</lra.http.recovery.path>
        <lra.tck.timeout.factor>1.5</lra.tck.timeout.factor>
        <management.address>localhost</management.address>
        <management.port>9990</management.port>
        <connect.to.server>true</connect.to.server>
        <wait.for.ports>9990</wait.for.ports>
        <port.waiting.timeout>10</port.waiting.timeout>
        <ts.microprofile-tck-glow.expected-discovery>[cdi, ee-integration, jaxrs, microprofile-config, microprofile-lra-coordinator, microprofile-lra-participant, transactions]==>ee-core-profile-server,microprofile-lra-coordinator,microprofile-lra-participant</ts.microprofile-tck-glow.expected-discovery>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.eclipse.microprofile.lra</groupId>
            <artifactId>microprofile-lra-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.lra</groupId>
            <artifactId>microprofile-lra-tck</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.narayana.rts</groupId>
            <artifactId>lra-test-arquillian-extension</artifactId>
            <version>${version.org.jboss.narayana}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.narayana.rts</groupId>
            <artifactId>lra-service-base</artifactId>
            <version>${version.org.jboss.narayana}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.smallrye.config</groupId>
            <artifactId>smallrye-config</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>microprofile-lra-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.wildfly.glow</groupId>
                <artifactId>wildfly-glow-arquillian-plugin</artifactId>
                <configuration>
                    <add-ons>
                        <add-on>lra-coordinator</add-on>
                    </add-ons>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <dependenciesToScan>
                        <dependency>${ts.microprofile-tck-tests-dependency}</dependency>
                    </dependenciesToScan>
                    <systemPropertyVariables>
                        <microprofile.jvm.args>${microprofile.jvm.args}
                            -Dlra.coordinator.url=${lra.coordinator.url}
                            -Dlra.tck.base.url=${lra.tck.base.url}
                            -Dlra.http.recovery.host=${lra.http.recovery.host}
                            -Dlra.http.recovery.port=${lra.http.recovery.port}
                            -Dlra.http.recovery.path=${lra.http.recovery.path}
                            -Dlra.tck.timeout.factor=${lra.tck.timeout.factor}
                            -DRecoveryEnvironmentBean.periodicRecoveryPeriod=1
                        </microprofile.jvm.args>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>

        <profile>
            <id>layers.profile</id>
            <activation>
                <property>
                    <name>ts.layers</name>
                </property>
            </activation>
            <properties>
                <!-- Enable galleon provisioning -->
                <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
                <ts.microprofile-tck-provisioning.phase>test-compile</ts.microprofile-tck-provisioning.phase>
            </properties>
        </profile>

        <profile>
            <id>bootablejar.profile</id>
            <activation>
                <property>
                    <name>ts.bootable</name>
                </property>
            </activation>
            <properties>
                <!-- Enable bootable jar packaging -->
                <ts.microprofile-tck-provisioning.phase>none</ts.microprofile-tck-provisioning.phase>
                <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
                <ts.bootable-jar-microprofile-tck-packaging.phase>test-compile</ts.bootable-jar-microprofile-tck-packaging.phase>
                <ts.microprofile-tck-glow.config.name>standalone.xml</ts.microprofile-tck-glow.config.name>
            </properties>
        </profile>

         <profile>
            <id>bootablejar.preview.profile</id>
            <activation>
                <property>
                    <name>ts.bootable.preview</name>
                </property>
            </activation>
            <properties>
                <!-- Enable bootable jar packaging -->
                <ts.microprofile-tck-provisioning.phase>none</ts.microprofile-tck-provisioning.phase>
                <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
                <ts.bootable-jar-microprofile-tck-packaging.phase>test-compile</ts.bootable-jar-microprofile-tck-packaging.phase>
                <ts.microprofile-tck-glow.config.name>standalone.xml</ts.microprofile-tck-glow.config.name>
            </properties>
        </profile>

        <profile>
            <id>preview.test.profile</id>
            <activation>
                <property>
                    <name>ts.preview</name>
                </property>
            </activation>
            <properties>
                <!-- Enable galleon provisioning -->
                <ts.microprofile-tck-provisioning.phase>test-compile</ts.microprofile-tck-provisioning.phase>
                <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
            </properties>
        </profile>

        <!-- Profile to turn off execution of this module's tests if the testsuite is being run
against an external dist (i.e. by using the jboss.dist property to point to one)
and that dist does not include the full set of MP functionality. -->
        <profile>
            <id>disable.microprofile.profile</id>
            <activation>
                <property>
                    <name>disable.microprofile.tests</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!-- Disable the surefire tests -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-test</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
