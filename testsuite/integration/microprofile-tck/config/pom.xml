<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2018, Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags. See the copyright.txt file in the
  ~ distribution for a full listing of individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~  but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-ts-integ-mp</artifactId>
        <!--
        Maintain separation between the artifact id and the version to help prevent
        merge conflicts between commits changing the GA and those changing the V.
        -->
        <version>30.0.0.Beta1-SNAPSHOT</version>
    </parent>

    <artifactId>wildfly-ts-integ-mp-config</artifactId>
    <name>WildFly Test Suite: Integration - MicroProfile TCK - Config</name>

    <properties>
        <jbossas.ts.integ.dir>${basedir}/../..</jbossas.ts.integ.dir>
        <jbossas.ts.dir>${jbossas.ts.integ.dir}/..</jbossas.ts.dir>
        <jbossas.project.dir>${jbossas.ts.dir}/..</jbossas.project.dir>
        <!-- These properties control what layers are provisioned if galleon provision occurs -->
        <ts.microprofile-tck-provisioning.base.layer>datasources-web-server</ts.microprofile-tck-provisioning.base.layer>
        <ts.microprofile-tck-provisioning.decorator.layer>microprofile-config</ts.microprofile-tck-provisioning.decorator.layer>
        <config.configure-weld-subsystem.phase>process-test-resources</config.configure-weld-subsystem.phase>
        <!--
            Arquillian does not propagate the system properties the TCK needs when starting the server. Create a
            convenience property we can use for the microprofile.jvm.args later. (the values come from the surefire
            plugin configuration below)
        -->
        <mp.tck.properties>-Dmp.tck.prop.dummy=dummy -Dcustomer.hobby=Tennis -Dconfig_ordinal=120</mp.tck.properties>


    </properties>

    <dependencies>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-tck</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <suiteXmlFiles>
                        <suiteXmlFile>tck-suite.xml</suiteXmlFile>
                    </suiteXmlFiles>
                    <!-- These env variables are required for org.eclipse.microprofile.config.tck.CDIPropertyNameMatchingTest -->
                    <environmentVariables>
                        <MP_TCK_ENV_DUMMY>dummy</MP_TCK_ENV_DUMMY>
                        <my_int_property>45</my_int_property>
                        <MY_BOOLEAN_PROPERTY>true</MY_BOOLEAN_PROPERTY>
                        <my_string_property>haha</my_string_property>
                        <MY_STRING_PROPERTY>woohoo</MY_STRING_PROPERTY>
                        <config_ordinal>45</config_ordinal>
                        <customer_name>Bob</customer_name>
                    </environmentVariables>
                    <systemPropertyVariables>
                        <!-- We have put these values into mp.tck.properties above -->
                        <mp.tck.prop.dummy>dummy</mp.tck.prop.dummy>
                        <customer.hobby>Tennis</customer.hobby>
                        <config_ordinal>120</config_ordinal>
                        <!-- Pass the my_string_property and MY_STRING_PROPERTY as sysprop to exclude them from the
                             ConfigProviderTest#testEnvironmentConfigSource that does not deal with case-sensitive environment variables on Windows
                        -->
                        <microprofile.jvm.args>${microprofile.jvm.args} ${mp.tck.properties} -Dmy_string_property=haha -DMY_STRING_PROPERTY=woohoo</microprofile.jvm.args>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <!-- Enable legacy empty beans.xml treatment otherwise the TCKs will fail -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${version.org.wildfly.plugin}</version>
                <executions>
                    <execution>
                        <id>configure-weld-subsystem</id>
                        <phase>${config.configure-weld-subsystem.phase}</phase>
                        <goals>
                            <goal>execute-commands</goal>
                        </goals>
                        <configuration>
                            <commands>
                                <command>embed-server --server-config=standalone-microprofile.xml</command>
                                <command>/subsystem=weld:write-attribute(name=legacy-empty-beans-xml-treatment,value=true)</command>
                                <command>stop-embedded-server</command>
                            </commands>
                            <system-properties combine.children="append">
                                <module.path>${jboss.dist}/modules${path.separator}${basedir}/target/modules</module.path>
                            </system-properties>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <offline>true</offline>
                    <jboss-home>${basedir}/target/wildfly</jboss-home>
                    <stdout>${project.build.directory}/wildfly/standalone/log/weld-configuration.log</stdout>
                    <java-opts>${modular.jdk.args}</java-opts>
                    <system-properties>
                        <maven.repo.local>${maven.repo.local}</maven.repo.local>
                        <module.path>${project.build.directory}/wildfly/modules</module.path>
                    </system-properties>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>

        <profile>
            <id>layers.profile</id>
            <activation>
                <property>
                    <name>ts.layers</name>
                </property>
            </activation>
            <properties>
                <!-- Enable galleon provisioning -->
                <ts.microprofile-tck-provisioning.phase>compile</ts.microprofile-tck-provisioning.phase>
            </properties>
        </profile>

        <profile>
            <id>bootablejar.profile</id>
            <activation>
                <property>
                    <name>ts.bootable</name>
                </property>
            </activation>
            <properties>
                <!-- Enable bootable jar packaging -->
                <ts.bootable-jar-microprofile-tck-packaging.phase>process-test-resources</ts.bootable-jar-microprofile-tck-packaging.phase>
                <!-- Disable 'configure-weld-subsystem' since that is for a standalone server -->
                <config.configure-weld-subsystem.phase>none</config.configure-weld-subsystem.phase>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-jar-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>bootable-jar-microprofile-tck-packaging</id>
                                <configuration>
                                    <cli-sessions>
                                        <cli-session>
                                            <script-files>
                                                <script>${basedir}/src/test/resources/configure-weld-subsystem.cli</script>
                                            </script-files>
                                        </cli-session>
                                    </cli-sessions>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>bootablejar.ee9.profile</id>
            <activation>
                <property>
                    <name>ts.bootable.ee9</name>
                </property>
            </activation>
            <properties>
                <!-- Enable bootable jar packaging -->
                <ts.bootable-jar-microprofile-tck-packaging.phase>process-test-resources</ts.bootable-jar-microprofile-tck-packaging.phase>
                <!-- Disable 'configure-weld-subsystem' since that is for a standalone server -->
                <config.configure-weld-subsystem.phase>none</config.configure-weld-subsystem.phase>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-jar-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>bootable-jar-microprofile-tck-packaging</id>
                                <configuration>
                                    <cli-sessions>
                                        <cli-session>
                                            <script-files>
                                                <script>${basedir}/src/test/resources/configure-weld-subsystem.cli</script>
                                            </script-files>
                                        </cli-session>
                                    </cli-sessions>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>ee9.test.profile</id>
            <activation>
                <property>
                    <name>ts.ee9</name>
                </property>
            </activation>
            <properties>
                <!-- Enable galleon provisioning -->
                <ts.microprofile-tck-provisioning.phase>compile</ts.microprofile-tck-provisioning.phase>
            </properties>
        </profile>

        <!-- Profile to turn off execution of this module's tests if the testsuite is being run
             against an external dist (i.e. by using the jboss.dist property to point to one)
             and that dist does not include the full set of MP functionality. -->
        <profile>
            <id>disable.microprofile.profile</id>
            <activation>
                <property>
                    <name>disable.microprofile.tests</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!-- Disable the surefire tests -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-test</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
