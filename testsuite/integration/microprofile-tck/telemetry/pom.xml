<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright The WildFly Authors
  ~ SPDX-License-Identifier: Apache-2.0
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-ts-integ-mp</artifactId>
        <!--
        Maintain separation between the artifact id and the version to help prevent
        merge conflicts between commits changing the GA and those changing the V.
        -->
        <version>34.0.0.Final-SNAPSHOT</version>
    </parent>

    <artifactId>wildfly-ts-integ-mp-telemetry</artifactId>
    <name>WildFly Test Suite: Integration - MicroProfile TCK - Telemetry</name>

    <properties>
        <jbossas.ts.integ.dir>${basedir}/../..</jbossas.ts.integ.dir>
        <ts.microprofile-tck-tests-dependency>org.eclipse.microprofile.telemetry.tracing:microprofile-telemetry-tracing-tck</ts.microprofile-tck-tests-dependency>
        <ts.microprofile-tck-glow.expected-discovery>[cdi, ee-concurrency, ee-integration, jaxrs, microprofile-config, microprofile-rest-client, microprofile-telemetry, opentelemetry]==>ee-core-profile-server,jaxrs,microprofile-rest-client,microprofile-telemetry</ts.microprofile-tck-glow.expected-discovery>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-context</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk-extension-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk-extension-autoconfigure-spi</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk-trace</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.microprofile.telemetry.tracing</groupId>
            <artifactId>microprofile-telemetry-tracing-tck</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-core-spi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-json-binding-provider</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.reactivestreams</groupId>
            <artifactId>reactive-streams</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Required for the TestConfigSource -->
        <dependency>
            <groupId>io.smallrye.config</groupId>
            <artifactId>smallrye-config</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.smallrye.config</groupId>
            <artifactId>smallrye-config-common</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- These are required for the client testing. The resteasy-json-binding-provider requires them, but they are
             not transitive by default. -->
        <dependency>
            <groupId>jakarta.json.bind</groupId>
            <artifactId>jakarta.json.bind-api</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.eclipse</groupId>
            <artifactId>yasson</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>microprofile-telemetry-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.wildfly.glow</groupId>
                <artifactId>wildfly-glow-arquillian-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-testng</artifactId>
                        <version>${version.surefire.plugin}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <dependenciesToScan>
                        <dependency>
                            ${ts.microprofile-tck-tests-dependency}
                        </dependency>
                    </dependenciesToScan>
                    <suiteXmlFiles>
                        <suiteXmlFile>src/test/resources/tck-suite-tracing.xml</suiteXmlFile>
                    </suiteXmlFiles>
                    <systemPropertyVariables>
                        <microprofile.jvm.args>${microprofile.jvm.args}</microprofile.jvm.args>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>layers.profile</id>
            <activation>
                <property>
                    <name>ts.layers</name>
                </property>
            </activation>
            <properties>
                <!-- Enable galleon provisioning -->
                <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
                <ts.microprofile-tck-provisioning.phase>test-compile</ts.microprofile-tck-provisioning.phase>
            </properties>
        </profile>

        <profile>
            <id>bootablejar.profile</id>
            <activation>
                <property>
                    <name>ts.bootable</name>
                </property>
            </activation>
            <properties>
                <!-- Enable bootable jar packaging -->
                <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
                <ts.bootable-jar-packaging.phase>test-compile</ts.bootable-jar-packaging.phase>
                <ts.microprofile-tck-glow.config.name>standalone.xml</ts.microprofile-tck-glow.config.name>
            </properties>
        </profile>

        <profile>
            <id>bootablejar.preview.profile</id>
            <activation>
                <property>
                    <name>ts.bootable.preview</name>
                </property>
            </activation>
            <properties>
                <!-- Enable bootable jar packaging -->
                <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
                <ts.bootable-jar-packaging.phase>test-compile</ts.bootable-jar-packaging.phase>
                <ts.microprofile-tck-glow.config.name>standalone.xml</ts.microprofile-tck-glow.config.name>
                <server.log.path>${jboss.home}/standalone/log/server.log</server.log.path>
                <ts.microprofile-tck-tests-dependency>org.eclipse.microprofile.telemetry:microprofile-telemetry-tracing-tck</ts.microprofile-tck-tests-dependency>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>io.opentelemetry</groupId>
                    <artifactId>opentelemetry-sdk-logs</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.opentelemetry</groupId>
                    <artifactId>opentelemetry-sdk-metrics</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.opentelemetry</groupId>
                    <artifactId>opentelemetry-sdk-trace</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.opentelemetry.semconv</groupId>
                    <artifactId>opentelemetry-semconv</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.microprofile.telemetry</groupId>
                    <artifactId>microprofile-telemetry-logs-tck</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.microprofile.telemetry</groupId>
                    <artifactId>microprofile-telemetry-metrics-tck</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.microprofile.telemetry</groupId>
                    <artifactId>microprofile-telemetry-tracing-tck</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy.microprofile</groupId>
                    <artifactId>microprofile-rest-client</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <classpathDependencyExcludes>
                                <classpathDependencyExclude>org.wildfly.arquillian:wildfly-arquillian-container-managed</classpathDependencyExclude>
                                <classpathDependencyExclude>org.eclipse.microprofile.telemetry.tracing:microprofile-telemetry-tracing-tck</classpathDependencyExclude>
                                <classpathDependencyExclude>io.opentelemetry:opentelemetry-semconv</classpathDependencyExclude>
                            </classpathDependencyExcludes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default-test</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>logs-bootable</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <reportsDirectory>${project.build.directory}/surefire-reports-logs-bootable</reportsDirectory>
                                    <dependenciesToScan>
                                        <dependency>org.eclipse.microprofile.telemetry:microprofile-telemetry-logs-tck</dependency>
                                    </dependenciesToScan>
                                    <suiteXmlFiles>
                                        <suiteXmlFile>src/test/resources/tck-suite-logs.xml</suiteXmlFile>
                                    </suiteXmlFiles>
                                    <systemPropertyVariables>
                                        <microprofile.jvm.args>
                                            ${microprofile.jvm.args} -Dotel.sdk.disabled=false -Dmptelemetry.tck.log.file.path=${server.log.path}
                                        </microprofile.jvm.args>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>metrics-application-bootable</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <reportsDirectory>${project.build.directory}/surefire-reports-metrics-application-bootable</reportsDirectory>
                                    <dependenciesToScan>
                                        <dependency>org.eclipse.microprofile.telemetry:microprofile-telemetry-metrics-tck</dependency>
                                    </dependenciesToScan>
                                    <suiteXmlFiles>
                                        <suiteXmlFile>src/test/resources/tck-suite-metrics-application.xml</suiteXmlFile>
                                    </suiteXmlFiles>
                                    <systemPropertyVariables>
                                        <microprofile.jvm.args>
                                            ${microprofile.jvm.args} -Dotel.sdk.disabled=false -Dmptelemetry.tck.log.file.path=${server.log.path}
                                        </microprofile.jvm.args>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>metrics-jvm-bootable</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <reportsDirectory>${project.build.directory}/surefire-reports-metrics-jvm-bootable</reportsDirectory>
                                    <dependenciesToScan>
                                        <dependency>org.eclipse.microprofile.telemetry:microprofile-telemetry-metrics-tck</dependency>
                                    </dependenciesToScan>
                                    <suiteXmlFiles>
                                        <suiteXmlFile>src/test/resources/tck-suite-metrics-jvm.xml</suiteXmlFile>
                                    </suiteXmlFiles>
                                    <systemPropertyVariables>
                                        <microprofile.jvm.args>
                                            ${microprofile.jvm.args} -Dotel.sdk.disabled=false -Dotel.metrics.exporter=logging -Dotel.metric.export.interval=1000 -Dmptelemetry.tck.log.file.path=${server.log.path}
                                        </microprofile.jvm.args>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>tracing-bootable</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <reportsDirectory>${project.build.directory}/surefire-reports-tracing-bootable</reportsDirectory>
                                    <classpathDependencyExcludes>
                                        <classpathDependencyExclude>org.wildfly.arquillian:wildfly-arquillian-container-managed</classpathDependencyExclude>
                                        <classpathDependencyExclude>org.eclipse.microprofile.telemetry.tracing:microprofile-telemetry-tracing-tck</classpathDependencyExclude>
                                        <classpathDependencyExclude>io.opentelemetry:opentelemetry-semconv</classpathDependencyExclude>
                                    </classpathDependencyExcludes>
                                    <dependenciesToScan>
                                        <dependency>org.eclipse.microprofile.telemetry:microprofile-telemetry-tracing-tck</dependency>
                                    </dependenciesToScan>
                                    <suiteXmlFiles>
                                        <suiteXmlFile>src/test/resources/tck-suite-tracing.xml</suiteXmlFile>
                                    </suiteXmlFiles>
                                    <excludesFile>src/test/resources/exclusions.txt</excludesFile>
                                    <systemPropertyVariables>
                                        <microprofile.jvm.args>
                                            ${microprofile.jvm.args} -Dmptelemetry.tck.log.file.path=${server.log.path}
                                        </microprofile.jvm.args>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>io.smallrye.opentelemetry</groupId>
                                <artifactId>smallrye-opentelemetry-exporters</artifactId>
                                <version>${version.io.smallrye.smallrye-opentelemetry}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>preview.test.profile</id>
            <activation>
                <property>
                    <name>ts.preview</name>
                </property>
            </activation>
            <properties>
                <!-- Enable galleon provisioning -->
                <ts.microprofile-tck-provisioning.phase>test-compile</ts.microprofile-tck-provisioning.phase>
                <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
                <server.log.path>${jboss.home}/standalone/log/server.log</server.log.path>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>io.opentelemetry</groupId>
                    <artifactId>opentelemetry-sdk-logs</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.opentelemetry</groupId>
                    <artifactId>opentelemetry-sdk-metrics</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.opentelemetry</groupId>
                    <artifactId>opentelemetry-sdk-trace</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>io.opentelemetry.semconv</groupId>
                    <artifactId>opentelemetry-semconv</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.microprofile.telemetry</groupId>
                    <artifactId>microprofile-telemetry-logs-tck</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.microprofile.telemetry</groupId>
                    <artifactId>microprofile-telemetry-metrics-tck</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy.microprofile</groupId>
                    <artifactId>microprofile-rest-client</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.eclipse.microprofile.telemetry</groupId>
                    <artifactId>microprofile-telemetry-tracing-tck</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <classpathDependencyExcludes>
                                <classpathDependencyExclude>org.eclipse.microprofile.telemetry.tracing:microprofile-telemetry-tracing-tck</classpathDependencyExclude>
                                <classpathDependencyExclude>io.opentelemetry:opentelemetry-semconv</classpathDependencyExclude>
                            </classpathDependencyExcludes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default-test</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>logs</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <reportsDirectory>${project.build.directory}/surefire-reports-logs</reportsDirectory>
                                    <dependenciesToScan>
                                        <dependency>org.eclipse.microprofile.telemetry:microprofile-telemetry-logs-tck</dependency>
                                    </dependenciesToScan>
                                    <suiteXmlFiles>
                                        <suiteXmlFile>src/test/resources/tck-suite-logs.xml</suiteXmlFile>
                                    </suiteXmlFiles>
                                    <systemPropertyVariables>
                                        <microprofile.jvm.args>
                                            ${microprofile.jvm.args} -Dotel.sdk.disabled=false -Dmptelemetry.tck.log.file.path=${server.log.path}
                                        </microprofile.jvm.args>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>metrics-application</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <reportsDirectory>${project.build.directory}/surefire-reports-metrics-application</reportsDirectory>
                                    <dependenciesToScan>
                                        <dependency>org.eclipse.microprofile.telemetry:microprofile-telemetry-metrics-tck</dependency>
                                    </dependenciesToScan>
                                    <suiteXmlFiles>
                                        <suiteXmlFile>src/test/resources/tck-suite-metrics-application.xml</suiteXmlFile>
                                    </suiteXmlFiles>
                                    <systemPropertyVariables>
                                        <microprofile.jvm.args>
                                            ${microprofile.jvm.args} -Dotel.sdk.disabled=false -Dmptelemetry.tck.log.file.path=${server.log.path}
                                        </microprofile.jvm.args>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>metrics-jvm</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <reportsDirectory>${project.build.directory}/surefire-reports-metrics-jvm</reportsDirectory>
                                    <dependenciesToScan>
                                        <dependency>org.eclipse.microprofile.telemetry:microprofile-telemetry-metrics-tck</dependency>
                                    </dependenciesToScan>
                                    <suiteXmlFiles>
                                        <suiteXmlFile>src/test/resources/tck-suite-metrics-jvm.xml</suiteXmlFile>
                                    </suiteXmlFiles>
                                    <systemPropertyVariables>
                                        <microprofile.jvm.args>
                                            ${microprofile.jvm.args} -Dotel.sdk.disabled=false -Dotel.metrics.exporter=logging -Dotel.metric.export.interval=1000 -Dmptelemetry.tck.log.file.path=${server.log.path}
                                        </microprofile.jvm.args>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>tracing</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <reportsDirectory>${project.build.directory}/surefire-reports-tracing</reportsDirectory>
                                    <dependenciesToScan>
                                        <dependency>org.eclipse.microprofile.telemetry:microprofile-telemetry-tracing-tck</dependency>
                                    </dependenciesToScan>
                                    <includes>
                                        <include>**/tracing/tck/**/*Test.java</include>
                                    </includes>
                                    <excludesFile>src/test/resources/exclusions.txt</excludesFile>
                                    <systemPropertyVariables>
                                        <microprofile.jvm.args>
                                            ${microprofile.jvm.args} -Dmptelemetry.tck.log.file.path=${server.log.path}
                                        </microprofile.jvm.args>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
