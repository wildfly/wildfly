<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2018, Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags. See the copyright.txt file in the
  ~ distribution for a full listing of individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~  but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-ts-integ</artifactId>
        <version>30.0.0.Beta1-SNAPSHOT</version>
    </parent>

    <artifactId>wildfly-ts-integ-mp</artifactId>
    <name>WildFly Test Suite: Integration - MicroProfile TCK</name>

    <packaging>pom</packaging>

    <properties>
        <jbossas.ts.integ.dir>${basedir}/..</jbossas.ts.integ.dir>
        <jbossas.ts.dir>${jbossas.ts.integ.dir}/..</jbossas.ts.dir>
        <jbossas.project.dir>${jbossas.ts.dir}/..</jbossas.project.dir>
        <wildfly.build.output.dir>build/target/${server.output.dir.prefix}-${server.output.dir.version}</wildfly.build.output.dir>
        <maven.repo.local>${settings.localRepository}</maven.repo.local>
        <microprofile.jvm.args>-server -Xms64m -Xmx512m ${modular.jdk.args} -Dmaven.repo.local=${maven.repo.local}</microprofile.jvm.args>
        <!-- Properties that set the phase used for different plugin executions.
             Profiles can override the values here to enable/disable executions.
             A value of 'none' disables the execution; to enable set the value to the
             normal phase for the goal.
             This setup allows the bulk of the execution configuration to be in the
             default build config (and thus shared in different profiles) while
             still being easily disabled in profiles where it is not wanted. -->
        <ts.copy-wildfly.phase>generate-test-resources</ts.copy-wildfly.phase>
        <ts.microprofile-tck-provisioning.phase>none</ts.microprofile-tck-provisioning.phase>
        <ts.bootable-jar-microprofile-tck-packaging.phase>none</ts.bootable-jar-microprofile-tck-packaging.phase>
        <!-- Child modules override these properties to control what layers are provisioned if galleon provisioning occurs -->
        <ts.microprofile-tck-provisioning.base.layer>FIXME-must-override</ts.microprofile-tck-provisioning.base.layer>
        <ts.microprofile-tck-provisioning.decorator.layer>FIXME-must-override</ts.microprofile-tck-provisioning.decorator.layer>

        <!-- Use the complete WF dependencyManagement set, not just the default EE set -->
        <dependency.management.import.artifact>wildfly-standard-expansion-bom</dependency.management.import.artifact>

        <!-- Properties used in certification script -->
        <version.config>${version.org.eclipse.microprofile.config.api}</version.config>
        <version.fault-tolerance>${version.org.eclipse.microprofile.fault-tolerance.api}</version.fault-tolerance>
        <version.health>${version.org.eclipse.microprofile.health.api}</version.health>
        <version.jwt>${version.org.eclipse.microprofile.jwt.api}</version.jwt>
        <version.openapi>${version.org.eclipse.microprofile.openapi}</version.openapi>
        <version.rest-client>${version.org.eclipse.microprofile.rest.client.api}</version.rest-client>
        <version.telemetry>${version.org.eclipse.microprofile.telemetry}</version.telemetry>
    </properties>

    <dependencies>
        <!-- TODO confirm if this is needed -->
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-naming-client</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <modules>
        <module>config</module>
        <module>fault-tolerance</module>
        <module>health</module>
        <module>jwt</module>
        <module>lra</module>
        <module>openapi</module>
        <module>rest-client</module>
        <module>reactive-messaging</module>
        <module>reactive-streams-operators</module>
        <module>telemetry</module>
        <module>certification</module>
    </modules>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>ts.copy-wildfly</id>
                        <!-- Use a property to drive whether this execution is enabled.
                             Default is 'generate-test-resources', i.e. enabled. -->
                        <phase>${ts.copy-wildfly.phase}</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jboss.galleon</groupId>
                <artifactId>galleon-maven-plugin</artifactId>
                <executions>
                    <!-- Provision a server slimmed to only what we want for a particular TCK. -->
                    <execution>
                        <id>microprofile-tck-provisioning</id>
                        <goals>
                            <goal>provision</goal>
                        </goals>
                        <!-- Use a property to drive whether this execution is enabled.
                             Default is 'none', i.e. disabled. -->
                        <phase>${ts.microprofile-tck-provisioning.phase}</phase>
                        <configuration>
                            <install-dir>${project.build.directory}/wildfly</install-dir>
                            <record-state>false</record-state>
                            <log-time>${galleon.log.time}</log-time>
                            <offline>${galleon.offline}</offline>
                            <plugin-options>
                                <jboss-maven-dist/>
                                <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                <optional-packages>passive+</optional-packages>
                            </plugin-options>
                            <feature-packs>
                                <feature-pack>
                                    <groupId>${testsuite.full.galleon.pack.groupId}</groupId>
                                    <artifactId>${testsuite.full.galleon.pack.artifactId}</artifactId>
                                    <version>${testsuite.full.galleon.pack.version}</version>
                                    <inherit-configs>false</inherit-configs>
                                    <inherit-packages>false</inherit-packages>
                                </feature-pack>
                            </feature-packs>
                            <configurations>
                                <config>
                                    <model>standalone</model>
                                    <!-- Call the file standalone-microprofile.xml as that is what
                                         arquillian.xml says to use for testing in the default maven profile-->
                                    <name>standalone-microprofile.xml</name>
                                    <layers>
                                        <!-- Child modules would set properties to drive the desired layers -->
                                        <layer>${ts.microprofile-tck-provisioning.base.layer}</layer>
                                        <layer>${ts.microprofile-tck-provisioning.decorator.layer}</layer>
                                    </layers>
                                </config>
                            </configurations>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-jar-maven-plugin</artifactId>
                <version>${version.org.wildfly.jar.plugin}</version>
                <executions>
                    <execution>
                        <id>bootable-jar-microprofile-tck-packaging</id>
                        <goals>
                            <goal>package</goal>
                        </goals>
                        <phase>${ts.bootable-jar-microprofile-tck-packaging.phase}</phase>
                        <configuration>
                            <output-file-name>test-wildfly-microprofile-tck.jar</output-file-name>
                            <hollowJar>true</hollowJar>
                            <record-state>false</record-state>
                            <log-time>${galleon.log.time}</log-time>
                            <offline>true</offline>
                            <plugin-options>
                                <jboss-maven-dist/>
                                <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                            </plugin-options>
                            <feature-packs>
                                <feature-pack>
                                    <groupId>${testsuite.full.galleon.pack.groupId}</groupId>
                                    <artifactId>${testsuite.full.galleon.pack.artifactId}</artifactId>
                                    <version>${testsuite.full.galleon.pack.version}</version>
                                </feature-pack>
                            </feature-packs>
                            <layers>
                                <!-- Child modules would set properties to drive the desired layers -->
                                <layer>${ts.microprofile-tck-provisioning.base.layer}</layer>
                                <layer>${ts.microprofile-tck-provisioning.decorator.layer}</layer>
                            </layers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>layers.profile</id>
            <activation>
                <property>
                    <name>ts.layers</name>
                </property>
            </activation>
            <properties>
                <jboss.dist>${project.build.directory}/wildfly</jboss.dist>
                <!-- Disable the standard copy-based provisioning -->
                <ts.copy-wildfly.phase>none</ts.copy-wildfly.phase>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <!-- Override the standard module path that points at the shared module set from the dist -->
                                <module.path>${project.build.directory}/wildfly/modules</module.path>
                            </systemPropertyVariables>
                        </configuration>
                        <executions>
                            <execution>
                                <!-- Re-enable the default surefire execution -->
                                <id>default-test</id>
                                <phase>test</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>standalone.microprofile.profile</id>
            <activation>
                <property>
                    <name>ts.standalone.microprofile</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <!--Re-enable the default surefire execution. -->
                            <execution>
                                <id>default-test</id>
                                <phase>test</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Test against the ee 9 feature pack -->
        <profile>
            <id>ee9.test.profile</id>
            <activation>
                <property>
                    <name>ts.ee9</name>
                </property>
            </activation>
            <properties>
                <jboss.dist>${project.build.directory}/wildfly</jboss.dist>
                <maven.repo.local>${settings.localRepository}</maven.repo.local>
                <!-- Disable the standard copy-based provisioning -->
                <ts.copy-wildfly.phase>none</ts.copy-wildfly.phase>
                <!-- Use the WFP dependencyManagement set.
                     This is set in this profile in a parent module, but the explicit global override
                     in this module takes precedence. -->
                <dependency.management.import.artifact>wildfly-preview-expansion-bom</dependency.management.import.artifact>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <!-- Override the standard module path that points at the shared module set from the dist -->
                                <module.path>${project.build.directory}/wildfly/modules</module.path>
                            </systemPropertyVariables>
                        </configuration>
                        <executions>
                            <!--Re-enable the default surefire execution. -->
                            <execution>
                                <id>default-test</id>
                                <phase>test</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile to turn off execution of various plugins if the testsuite is being run
             against an external dist (i.e. by using the jboss.dist property to point to one)
             and that dist does not include the full set of MP functionality. -->
        <profile>
            <id>disable.microprofile.profile</id>
            <activation>
                <property>
                    <name>disable.microprofile.tests</name>
                </property>
            </activation>
            <properties>
                <!-- Disable the standard copy-based provisioning -->
                <ts.copy-wildfly.phase>none</ts.copy-wildfly.phase>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-test</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.jboss.galleon</groupId>
                        <artifactId>galleon-maven-plugin</artifactId>
                        <executions>
                            <!-- Provision a server slimmed to only what we want for a particular TCK. -->
                            <execution>
                                <id>microprofile-tck-provisioning</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-jar-maven-plugin</artifactId>
                        <version>${version.org.wildfly.jar.plugin}</version>
                        <executions>
                            <execution>
                                <id>bootable-jar-microprofile-tck-packaging</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Test against bootable jar -->
        <profile>
            <id>bootablejar.profile</id>
            <activation>
                <property>
                    <name>ts.bootable</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-bootable</artifactId>
                </dependency>
            </dependencies>
            <properties>
                <!-- Disable the standard copy-based provisioning -->
                <ts.copy-wildfly.phase>none</ts.copy-wildfly.phase>
                <maven.repo.local>${settings.localRepository}</maven.repo.local>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <!-- Tests against the microprofile-tck bootable JAR  -->
                        <configuration>
                            <systemPropertyVariables>
                                <install.dir>${project.build.directory}/wildfly</install.dir>
                                <bootable.jar>${project.build.directory}/test-wildfly-microprofile-tck.jar</bootable.jar>
                                <arquillian.xml>arquillian-bootable.xml</arquillian.xml>
                            </systemPropertyVariables>
                            <classpathDependencyExcludes>
                                <classpathDependencyExclude>
                                    org.wildfly.arquillian:wildfly-arquillian-container-managed
                                </classpathDependencyExclude>
                            </classpathDependencyExcludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- Test against bootable jar ee9 -->
        <profile>
            <id>bootablejar.ee9.profile</id>
            <activation>
                <property>
                    <name>ts.bootable.ee9</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-bootable</artifactId>
                </dependency>
            </dependencies>
            <properties>
                <!-- Disable the standard copy-based provisioning -->
                <ts.copy-wildfly.phase>none</ts.copy-wildfly.phase>
                <!-- Use the WFP dependencyManagement set.
                     This is set in this profile in a parent module, but the explicit global override
                     in this module takes precedence. -->
                <dependency.management.import.artifact>wildfly-preview-expansion-bom</dependency.management.import.artifact>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <!-- Tests against the microprofile-tck bootable JAR  -->
                        <configuration>
                            <systemPropertyVariables>
                                <install.dir>${project.build.directory}/wildfly</install.dir>
                                <bootable.jar>${project.build.directory}/test-wildfly-microprofile-tck.jar</bootable.jar>
                                <arquillian.xml>arquillian-bootable.xml</arquillian.xml>
                            </systemPropertyVariables>
                            <classpathDependencyExcludes>
                                <classpathDependencyExclude>
                                    org.wildfly.arquillian:wildfly-arquillian-container-managed
                                </classpathDependencyExclude>
                            </classpathDependencyExcludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
</project>
