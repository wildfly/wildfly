<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2018, Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags. See the copyright.txt file in the
  ~ distribution for a full listing of individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~  but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-ts-integ-mp</artifactId>
        <!--
        Maintain separation between the artifact id and the version to help prevent
        merge conflicts between commits changing the GA and those changing the V.
        -->
        <version>22.0.0.Beta1-SNAPSHOT</version>
    </parent>

    <artifactId>wildfly-ts-integ-mp-opentracing</artifactId>
    <name>WildFly Test Suite: Integration - MicroProfile TCK - OpenTracing</name>

    <properties>
        <jbossas.ts.integ.dir>${basedir}/../..</jbossas.ts.integ.dir>
        <jbossas.ts.dir>${jbossas.ts.integ.dir}/..</jbossas.ts.dir>
        <jbossas.project.dir>${jbossas.ts.dir}/..</jbossas.project.dir>
        <ts.elytron.cli>${jbossas.ts.dir}/shared/enable-elytron.cli</ts.elytron.cli>
        <version.org.jboss.shrinkwrap.resolver>3.1.4</version.org.jboss.shrinkwrap.resolver>
    </properties>

    <!--
        This is used as a workaround for https://issues.redhat.com/browse/WFLY-12984. Once a real resolution is found
        this can be reverted.
     -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.shrinkwrap.resolver</groupId>
                <artifactId>shrinkwrap-resolver-bom</artifactId>
                <version>${version.org.jboss.shrinkwrap.resolver}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.eclipse.microprofile.opentracing</groupId>
            <artifactId>microprofile-opentracing-tck</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.opentracing</groupId>
            <artifactId>microprofile-opentracing-tck-rest-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.opentracing</groupId>
            <artifactId>opentracing-mock</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.opentracing</groupId>
            <artifactId>microprofile-opentracing-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.rest.client</groupId>
            <artifactId>microprofile-rest-client-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.opentracing.contrib</groupId>
            <artifactId>opentracing-tracerresolver</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.smallrye</groupId>
            <artifactId>smallrye-opentracing</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson2-provider</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>microprofile-opentracing-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-testng</artifactId>
                        <version>${version.surefire.plugin}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <suiteXmlFiles>
                        <suiteXmlFile>src/test/resources/tck-suite.xml</suiteXmlFile>
                    </suiteXmlFiles>
                    <dependenciesToScan>
                        <dependency>org.eclipse.microprofile.opentracing:microprofile-opentracing-tck</dependency>
                        <dependency>org.eclipse.microprofile.opentracing:microprofile-opentracing-tck-rest-client</dependency>
                    </dependenciesToScan>
                    <systemPropertyVariables>
                        <microprofile.jvm.args>${microprofile.jvm.args}</microprofile.jvm.args>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Test against slimmed servers provisioned by Galleon -->
        <profile>
            <id>layers.profile</id>
            <activation>
                <property>
                    <name>ts.layers</name>
                </property>
            </activation>
            <properties>
                <jboss.dist>${project.build.directory}/wildfly</jboss.dist>
            </properties>
            <build>
                <plugins>
                    <!-- Disable the standard copy-based provisioning -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>ts.copy-wildfly</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.jboss.galleon</groupId>
                        <artifactId>galleon-maven-plugin</artifactId>
                        <executions>
                            <!-- Provision a jaxrs-server with observability decorator layer added -->
                            <execution>
                                <id>observability-provisioning</id>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <install-dir>${project.build.directory}/wildfly</install-dir>
                                    <record-state>false</record-state>
                                    <log-time>${galleon.log.time}</log-time>
                                    <offline>${galleon.offline}</offline>
                                    <plugin-options>
                                        <jboss-maven-dist/>
                                        <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                        <optional-packages>passive+</optional-packages>
                                    </plugin-options>
                                    <feature-packs>
                                        <feature-pack>
                                            <groupId>${testsuite.ee.galleon.pack.groupId}</groupId>
                                            <artifactId>${testsuite.ee.galleon.pack.artifactId}</artifactId>
                                            <version>${testsuite.ee.galleon.pack.version}</version>
                                            <inherit-configs>false</inherit-configs>
                                            <inherit-packages>false</inherit-packages>
                                        </feature-pack>
                                    </feature-packs>
                                    <configurations>
                                        <config>
                                            <model>standalone</model>
                                            <!-- Call the file standalone-microprofile.xml as that is what
                                                 arquillian.xml says to use for testing in the default maven profile-->
                                            <name>standalone-microprofile.xml</name>
                                            <layers>
                                                <layer>jaxrs-server</layer>
                                                <layer>observability</layer>
                                            </layers>
                                        </config>
                                    </configurations>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <!-- Override the standard module path that points at the shared module set from servlet-dist -->
                                <module.path>${project.build.directory}/wildfly/modules</module.path>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Test against bootable jar -->
        <profile>
            <id>bootablejar.profile</id>
            <activation>
                <property>
                    <name>ts.bootable</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-bootable</artifactId>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <!-- Disable the standard copy-based provisioning -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>ts.copy-wildfly</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-jar-maven-plugin</artifactId>
                        <version>${version.org.wildfly.jar.plugin}</version>
                        <executions>
                            <!-- Package a jaxrs-server with observability decorator added -->
                            <execution>
                                <id>bootable-jar-observability-packaging</id>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                                <phase>process-test-resources</phase>
                                <configuration>
                                    <output-file-name>test-wildfly-observability.jar</output-file-name>
                                    <hollowJar>true</hollowJar>
                                    <record-state>false</record-state>
                                    <log-time>${galleon.log.time}</log-time>
                                    <offline>true</offline>
                                    <plugin-options>
                                        <jboss-maven-dist/>
                                        <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                    </plugin-options>
                                    <feature-packs>
                                        <feature-pack>
                                            <groupId>${testsuite.ee.galleon.pack.groupId}</groupId>
                                            <artifactId>${testsuite.ee.galleon.pack.artifactId}</artifactId>
                                            <version>${testsuite.ee.galleon.pack.version}</version>
                                        </feature-pack>
                                    </feature-packs>
                                    <layers>
                                        <layer>jaxrs-server</layer>
                                        <layer>observability</layer>
                                    </layers>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <!-- Tests against the observability bootable JAR  -->
                        <configuration>
                            <systemPropertyVariables>
                                <install.dir>${project.build.directory}/wildfly</install.dir>
                                <bootable.jar>${project.build.directory}/test-wildfly-observability.jar</bootable.jar>
                                <arquillian.xml>arquillian-bootable.xml</arquillian.xml>
                            </systemPropertyVariables>
                            <redirectTestOutputToFile>${testLogToFile}</redirectTestOutputToFile>
                            <classpathDependencyExcludes>
                                <classpathDependencyExclude>
                                    org.wildfly.arquillian:wildfly-arquillian-container-managed
                                </classpathDependencyExclude>
                            </classpathDependencyExcludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Test against the ee 9 feature pack -->
        <!-- TODO convert this to a bootable jar setup once a release
             of the wildfly jar plugin with transformation support is available -->
        <profile>
            <id>ee9.test.profile</id>
            <activation>
                <property>
                    <name>ts.ee9</name>
                </property>
            </activation>
            <properties>
                <jboss.dist>${project.build.directory}/wildfly</jboss.dist>
            </properties>
            <build>
                <plugins>
                    <!-- Disable the standard copy-based provisioning -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>ts.copy-wildfly</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.jboss.galleon</groupId>
                        <artifactId>galleon-maven-plugin</artifactId>
                        <executions>
                            <!-- Provision a jaxrs-server with observability decorator layer added -->
                            <execution>
                                <id>observability-provisioning</id>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <install-dir>${project.build.directory}/wildfly</install-dir>
                                    <record-state>false</record-state>
                                    <log-time>${galleon.log.time}</log-time>
                                    <offline>${galleon.offline}</offline>
                                    <plugin-options>
                                        <jboss-maven-dist/>
                                        <jboss-jakarta-transform-artifacts>false</jboss-jakarta-transform-artifacts>
                                        <jboss-maven-provisioning-repo>${wildfly.transformed.repo.dir}</jboss-maven-provisioning-repo>
                                        <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                        <optional-packages>passive+</optional-packages>
                                    </plugin-options>
                                    <feature-packs>
                                        <feature-pack>
                                            <groupId>${testsuite.ee.galleon.pack.groupId}</groupId>
                                            <artifactId>${testsuite.ee.galleon.pack.artifactId}</artifactId>
                                            <version>${testsuite.ee.galleon.pack.version}</version>
                                            <inherit-configs>false</inherit-configs>
                                            <inherit-packages>false</inherit-packages>
                                        </feature-pack>
                                    </feature-packs>
                                    <configurations>
                                        <config>
                                            <model>standalone</model>
                                            <!-- Call the file standalone-microprofile.xml as that is what
                                                 arquillian.xml says to use for testing in the default maven profile-->
                                            <name>standalone-microprofile.xml</name>
                                            <layers>
                                                <layer>jaxrs-server</layer>
                                                <layer>observability</layer>
                                            </layers>
                                        </config>
                                    </configurations>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <!-- Override the standard module path that points at the shared module set from servlet-dist -->
                                <module.path>${project.build.directory}/wildfly/modules</module.path>
                            </systemPropertyVariables>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default-test</id>
                                <phase>test</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
