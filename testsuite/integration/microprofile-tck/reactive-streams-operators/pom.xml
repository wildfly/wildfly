<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright The WildFly Authors
  ~ SPDX-License-Identifier: Apache-2.0
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-ts-integ-mp</artifactId>
        <!--
        Maintain separation between the artifact id and the version to help prevent
        merge conflicts between commits changing the GA and those changing the V.
        -->
        <version>32.0.0.Beta1-SNAPSHOT</version>
    </parent>

    <artifactId>wildfly-ts-integ-mp-reactive-streams-operators</artifactId>
    <name>WildFly Test Suite: Integration - MicroProfile TCK - Reactive Streams Operators</name>

    <properties>
        <jbossas.ts.integ.dir>${basedir}/../..</jbossas.ts.integ.dir>
        <jbossas.ts.dir>${jbossas.ts.integ.dir}/..</jbossas.ts.dir>
        <jbossas.project.dir>${jbossas.ts.dir}/..</jbossas.project.dir>
        <!--
            Change how the server is provisioned since we are not part of the standard configs.
            Since we're not shipping it in our standard configs, it makes no sense to use
            @ServerSetup.
            Essentially by default it will work like -Dts.layers
        -->
        <ts.copy-wildfly.phase>none</ts.copy-wildfly.phase>
        <ts.microprofile-tck-provisioning.phase>test-compile</ts.microprofile-tck-provisioning.phase>
        <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
        <ts.microprofile-tck-tests-dependency>org.eclipse.microprofile.reactive-streams-operators:microprofile-reactive-streams-operators-tck</ts.microprofile-tck-tests-dependency>
        <ts.microprofile-tck-glow.expected-discovery>[cdi, microprofile-reactive-streams-operators]==>ee-core-profile-server,microprofile-reactive-streams-operators</ts.microprofile-tck-glow.expected-discovery>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.eclipse.microprofile.reactive-streams-operators</groupId>
            <artifactId>microprofile-reactive-streams-operators-tck</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.reactive-streams-operators</groupId>
            <artifactId>microprofile-reactive-streams-operators-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.testng</groupId>
            <artifactId>arquillian-testng-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>microprofile-reactive-streams-operators-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>org.eclipse.microprofile.reactive.streams.operators.tck.arquillian.ReactiveStreamsArquillianTck</include>
                    </includes>
                    <dependenciesToScan>
                        <dependency>${ts.microprofile-tck-tests-dependency}</dependency>
                    </dependenciesToScan>
                    <environmentVariables>
                        <!--
                            Increase the timeout from 100ms, which is not enough.
                            This property is in
                            https://github.com/reactive-streams/reactive-streams-jvm/blob/master/tck/src/main/java/org/reactivestreams/tck/TestEnvironment.java
                        -->
                        <DEFAULT_TIMEOUT_MILLIS>500</DEFAULT_TIMEOUT_MILLIS>
                    </environmentVariables>
                    <systemPropertyVariables>
                        <microprofile.jvm.args>${microprofile.jvm.args}</microprofile.jvm.args>
                        <!-- Override the standard module path that points at the shared module set from the dist -->
                        <module.path>${project.build.directory}/wildfly/modules</module.path>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>layers.profile</id>
            <activation>
                <property>
                    <name>ts.layers</name>
                </property>
            </activation>
            <properties>
                <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
                <ts.microprofile-tck-provisioning.phase>test-compile</ts.microprofile-tck-provisioning.phase>
            </properties>
        </profile>

        <profile>
            <id>bootablejar.profile</id>
            <activation>
                <property>
                    <name>ts.bootable</name>
                </property>
            </activation>
            <properties>
                <!-- Turn off provisioning since it is enabled by default-->
                <ts.microprofile-tck-provisioning.phase>none</ts.microprofile-tck-provisioning.phase>
                <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
                <ts.bootable-jar-microprofile-tck-packaging.phase>test-compile</ts.bootable-jar-microprofile-tck-packaging.phase>
                <ts.microprofile-tck-glow.config.name>standalone.xml</ts.microprofile-tck-glow.config.name>

            </properties>
        </profile>

        <profile>
            <id>bootablejar.preview.profile</id>
            <activation>
                <property>
                    <name>ts.bootable.preview</name>
                </property>
            </activation>
            <properties>
                <!-- Turn off provisioning since it is enabled by default-->
                <ts.microprofile-tck-provisioning.phase>none</ts.microprofile-tck-provisioning.phase>
                <!-- Enable bootable jar packaging -->
                <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
                <ts.bootable-jar-microprofile-tck-packaging.phase>test-compile</ts.bootable-jar-microprofile-tck-packaging.phase>
                <ts.microprofile-tck-glow.config.name>standalone.xml</ts.microprofile-tck-glow.config.name>

           </properties>
        </profile>

        <profile>
            <id>preview.test.profile</id>
            <activation>
                <property>
                    <name>ts.preview</name>
                </property>
            </activation>
        </profile>
    </profiles>
</project>
