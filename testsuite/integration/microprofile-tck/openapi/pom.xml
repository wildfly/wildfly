<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright The WildFly Authors
  ~ SPDX-License-Identifier: Apache-2.0
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-ts-integ-mp</artifactId>
        <!--
        Maintain separation between the artifact id and the version to help prevent
        merge conflicts between commits changing the GA and those changing the V.
        -->
        <version>32.0.0.Beta1-SNAPSHOT</version>
    </parent>

    <artifactId>wildfly-ts-integ-mp-openapi</artifactId>
    <name>WildFly Test Suite: Integration - MicroProfile - OpenAPI TCK</name>

    <properties>
        <jbossas.ts.integ.dir>${basedir}/../..</jbossas.ts.integ.dir>
        <jbossas.ts.dir>${jbossas.ts.integ.dir}/..</jbossas.ts.dir>
        <jbossas.project.dir>${jbossas.ts.dir}/..</jbossas.project.dir>
        <!-- These properties control what layers are provisioned if galleon provision occurs -->
        <ts.microprofile-tck-tests-dependency>org.eclipse.microprofile.openapi:microprofile-openapi-tck</ts.microprofile-tck-tests-dependency>
        <ts.microprofile-tck-glow.expected-discovery>[bean-validation, ee-integration, jaxrs, microprofile-config, microprofile-openapi, microprofile-rest-client]==>ee-core-profile-server,microprofile-openapi,microprofile-rest-client</ts.microprofile-tck-glow.expected-discovery>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.eclipse.microprofile.openapi</groupId>
            <artifactId>microprofile-openapi-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.openapi</groupId>
            <artifactId>microprofile-openapi-tck</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.testng</groupId>
            <artifactId>arquillian-testng-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.wildfly.glow</groupId>
                <artifactId>wildfly-glow-arquillian-plugin</artifactId>
                <configuration>
                    <add-ons>
                        <add-on>openapi</add-on>
                    </add-ons>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <dependenciesToScan>
                        <dependency>${ts.microprofile-tck-tests-dependency}</dependency>
                    </dependenciesToScan>
                    <systemPropertyVariables>
                        <microprofile.jvm.args>${microprofile.jvm.args}</microprofile.jvm.args>
                        <test.url>http://localhost:8080</test.url>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Profile to turn off execution of this module's tests if the testsuite is being run
             against an external dist (i.e. by using the jboss.dist property to point to one)
             and that dist does not include the full set of MP functionality. -->
        <profile>
            <id>disable.microprofile.profile</id>
            <activation>
                <property>
                    <name>disable.microprofile.tests</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!-- Disable the surefire tests -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-test</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>layers.profile</id>
            <activation>
                <property>
                    <name>ts.layers</name>
                </property>
            </activation>
            <properties>
                <!-- Enable galleon provisioning -->
                <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
                <ts.microprofile-tck-provisioning.phase>test-compile</ts.microprofile-tck-provisioning.phase>
            </properties>
        </profile>

        <profile>
            <id>bootablejar.profile</id>
            <activation>
                <property>
                    <name>ts.bootable</name>
                </property>
            </activation>
            <properties>
                <!-- Enable bootable jar packaging -->
                <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
                <ts.bootable-jar-microprofile-tck-packaging.phase>test-compile</ts.bootable-jar-microprofile-tck-packaging.phase>
                <ts.microprofile-tck-glow.config.name>standalone.xml</ts.microprofile-tck-glow.config.name>
            </properties>
        </profile>
        
        <profile>
            <id>bootablejar.preview.profile</id>
            <activation>
                <property>
                    <name>ts.bootable.preview</name>
                </property>
            </activation>
            <properties>
                <!-- Enable bootable jar packaging -->
                <ts.microprofile-tck-provisioning.phase>none</ts.microprofile-tck-provisioning.phase>
                <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
                <ts.bootable-jar-microprofile-tck-packaging.phase>test-compile</ts.bootable-jar-microprofile-tck-packaging.phase>
                <ts.microprofile-tck-glow.config.name>standalone.xml</ts.microprofile-tck-glow.config.name>
            </properties>
        </profile>

        <profile>
            <id>preview.test.profile</id>
            <activation>
                <property>
                    <name>ts.preview</name>
                </property>
            </activation>
            <properties>
                <!-- Enable galleon provisioning -->
                <ts.microprofile-tck-provisioning.phase>test-compile</ts.microprofile-tck-provisioning.phase>
                <ts.microprofile-tck-glow.phase>test-compile</ts.microprofile-tck-glow.phase>
            </properties>
        </profile>

    </profiles>

</project>
