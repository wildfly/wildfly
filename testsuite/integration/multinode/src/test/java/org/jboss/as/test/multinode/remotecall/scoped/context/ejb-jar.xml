<ejb-jar xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/ejb-jar_3_1.xsd"
         version="3.1">
    <enterprise-beans>
        <session>
            <ejb-name>StatefulBeanA</ejb-name>
            <env-entry>
                <env-entry-name>other-server-remoting-port</env-entry-name>
                <env-entry-type>java.lang.String</env-entry-type>
                <!-- We don't have a system property for the other server's remoting port.
                    If at all we need to be able to control this more, then we can later
                    have this value as a system property expression. For now, relying on
                    this value is fine IMO -->
                <env-entry-value>4547</env-entry-value>
            </env-entry>

            <env-entry>
                <env-entry-name>other-server-host-address</env-entry-name>
                <env-entry-type>java.lang.String</env-entry-type>
                <!-- We *haven't* enabled system property replacement for spec DDs, in this testcase
                    since we can just pass along this value literally to the EJB client API which
                    does the necessary system property replacement -->
                <env-entry-value>${node1:localhost}</env-entry-value>
            </env-entry>

            <env-entry>
                <env-entry-name>other-server-auth-user-name</env-entry-name>
                <env-entry-type>java.lang.String</env-entry-type>
                <!-- We don't have a system property for the other server's username that passes
                    authentication. If at all we need to be able to control this more, then we can later
                    have this value as a system property expression. For now, relying on
                    this value is fine IMO -->
                <env-entry-value>user1</env-entry-value>
            </env-entry>

            <env-entry>
                <env-entry-name>other-server-auth-password</env-entry-name>
                <env-entry-type>java.lang.String</env-entry-type>
                <!-- We don't have a system property for the other server's password that passes
                    authentication. If at all we need to be able to control this more, then we can later
                    have this value as a system property expression. For now, relying on
                    this value is fine IMO -->
                <env-entry-value>cGFzc3dvcmQx</env-entry-value>
            </env-entry>
        </session>
    </enterprise-beans>

</ejb-jar>