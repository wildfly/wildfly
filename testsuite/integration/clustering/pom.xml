<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2018, Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags. See the copyright.txt file in the
  ~ distribution for a full listing of individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-ts-integ</artifactId>
        <!--
        Maintain separation between the artifact id and the version to help prevent
        merge conflicts between commits changing the GA and those changing the V.
        -->
        <version>30.0.0.Beta1-SNAPSHOT</version>
    </parent>

    <artifactId>wildfly-ts-integ-clustering</artifactId>
    <name>WildFly Test Suite: Integration - Clustering</name>

    <properties>
        <jbossas.ts.integ.dir>${basedir}/..</jbossas.ts.integ.dir>
        <jbossas.ts.dir>${jbossas.ts.integ.dir}/..</jbossas.ts.dir>
        <jbossas.project.dir>${jbossas.ts.dir}/..</jbossas.project.dir>
        <surefire.forked.process.timeout>5400</surefire.forked.process.timeout>
        <test-group>org/jboss/as/test/clustering/cluster</test-group>
        <version.org.infinispan.server>${version.org.infinispan}</version.org.infinispan.server>
        <version.org.infinispan.server.driver>${version.org.infinispan}</version.org.infinispan.server.driver>
        <ts.surefire.clustering.ha.additionalExcludes>nothing-by-default</ts.surefire.clustering.ha.additionalExcludes>
        <!-- properties to enable plugins shared by various bootable jar executions -->
        <bootable-jar-cloud-profile-packaging.phase>none</bootable-jar-cloud-profile-packaging.phase>
        <bootable-jar-jpa-distributed-packaging.phase>none</bootable-jar-jpa-distributed-packaging.phase>
        <bootable-jar-load-balancer-packaging.phase>none</bootable-jar-load-balancer-packaging.phase>
        <bootable-jar-configure-windows-paths.phase>none</bootable-jar-configure-windows-paths.phase>
        <!-- Disable the default surefire test execution. All profiles use custom executions. -->
        <surefire.default-test.phase>none</surefire.default-test.phase>
        <infinispan.server.home.override/>
        <infinispan.server.profile.override/>
    </properties>

    <dependencies>
        <!-- Jakarta specification dependencies -->
        <dependency>
            <groupId>jakarta.activation</groupId>
            <artifactId>jakarta.activation-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.ejb</groupId>
            <artifactId>jakarta.ejb-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.faces</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.interceptor</groupId>
            <artifactId>jakarta.interceptor-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.jms</groupId>
            <artifactId>jakarta.jms-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.security.enterprise</groupId>
            <artifactId>jakarta.security.enterprise-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.transaction</groupId>
            <artifactId>jakarta.transaction-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Build-time-only dependencies -->
        <dependency>
            <groupId>org.infinispan.protostream</groupId>
            <artifactId>protostream-processor</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kohsuke.metainf-services</groupId>
            <artifactId>metainf-services</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Project dependencies -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>wildfly-clustering-common</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>wildfly-clustering-marshalling-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>wildfly-clustering-server-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>wildfly-clustering-service</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>wildfly-clustering-singleton-api</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup</groupId>
            <artifactId>protoparser</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${legacy.version.com.squareup.okhttp}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-buffer</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-http</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-socks</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-common</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-handler</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-handler-proxy</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-resolver</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.jcip</groupId>
            <artifactId>jcip-annotations</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-core-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-jakarta-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-selector</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cdi-common-jakarta</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cdi-embedded-jakarta</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-cdi-remote-jakarta</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-client-hotrod-jakarta</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-clustered-counter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-clustered-lock</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-component-annotations</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-query-dsl</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-remote-query-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-server-testdriver-junit4</artifactId>
            <version>${version.org.infinispan.server.driver}</version>
            <scope>test</scope>
            <exclusions>
                <!-- Avoids issue on deploy - "Caused by: org.jboss.as.cli.CommandRegistry$RegisterHandlerException: The following command names could not be registered since they conflict with the already registered ones: cd" -->
                <exclusion>
                    <groupId>org.infinispan</groupId>
                    <artifactId>infinispan-cli-client</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.marshalling</groupId>
                    <artifactId>jboss-marshalling-osgi</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.infinispan</groupId>
                    <artifactId>infinispan-client-hotrod</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-ejb-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-extension-byteman</artifactId>
            <version>1.1.0</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.sun</groupId>
                    <artifactId>tools</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.arquillian.core</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman-submit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ejb3</groupId>
            <artifactId>jboss-ejb3-ext-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-core-spi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jgroups</groupId>
            <artifactId>jgroups</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-cli</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-testsuite-shared</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.discovery</groupId>
            <artifactId>wildfly-discovery-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-naming-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.transaction</groupId>
            <artifactId>wildfly-transaction-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.wildfly-http-client</groupId>
            <artifactId>wildfly-http-client-common</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.wildfly-http-client</groupId>
            <artifactId>wildfly-http-ejb-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.wildfly-http-client</groupId>
            <artifactId>wildfly-http-naming-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.wildfly-http-client</groupId>
            <artifactId>wildfly-http-transaction-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>xom</groupId>
            <artifactId>xom</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-jar-maven-plugin</artifactId>
                <version>${version.org.wildfly.jar.plugin}</version>
                <executions>
                    <!-- Package a cloud-profile server -->
                    <execution>
                        <id>bootable-jar-cloud-profile-packaging</id>
                        <goals>
                            <goal>package</goal>
                        </goals>
                        <phase>${bootable-jar-cloud-profile-packaging.phase}</phase>
                        <configuration>
                            <output-file-name>test-wildfly-cloud-profile.jar</output-file-name>
                            <hollowJar>true</hollowJar>
                            <record-state>false</record-state>
                            <log-time>${galleon.log.time}</log-time>
                            <offline>true</offline>
                            <!-- content that is installed in wildfly home -->
                            <extra-server-content-dirs>${wildfly.dir}</extra-server-content-dirs>
                            <plugin-options>
                                <jboss-maven-dist/>
                                <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                            </plugin-options>
                            <cli-sessions>
                                <cli-session>
                                    <script-files>
                                        <script>clustering-ha-bootable-jar.cli</script>
                                    </script-files>
                                </cli-session>
                            </cli-sessions>
                            <feature-packs>
                                <feature-pack>
                                    <groupId>${testsuite.ee.galleon.pack.groupId}</groupId>
                                    <artifactId>${testsuite.ee.galleon.pack.artifactId}</artifactId>
                                    <version>${testsuite.ee.galleon.pack.version}</version>
                                </feature-pack>
                            </feature-packs>
                            <layers>
                                <layer>cloud-server</layer>
                                <layer>web-clustering</layer>
                                <layer>h2-default-datasource</layer>
                                <layer>infinispan</layer>
                            </layers>
                        </configuration>
                    </execution>

                    <!-- Package a jpa2lc server -->
                    <execution>
                        <id>bootable-jar-jpa-distributed-packaging</id>
                        <goals>
                            <goal>package</goal>
                        </goals>
                        <phase>${bootable-jar-jpa-distributed-packaging.phase}</phase>
                        <configuration>
                            <output-file-name>test-wildfly-jpa-distributed.jar</output-file-name>
                            <hollowJar>true</hollowJar>
                            <record-state>false</record-state>
                            <log-time>${galleon.log.time}</log-time>
                            <offline>true</offline>
                            <plugin-options>
                                <jboss-maven-dist/>
                                <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                            </plugin-options>
                            <cli-sessions>
                                <cli-session>
                                    <script-files>
                                        <script>clustering-ha-bootable-jar.cli</script>
                                    </script-files>
                                </cli-session>
                            </cli-sessions>
                            <feature-packs>
                                <feature-pack>
                                    <groupId>${testsuite.ee.galleon.pack.groupId}</groupId>
                                    <artifactId>${testsuite.ee.galleon.pack.artifactId}</artifactId>
                                    <version>${testsuite.ee.galleon.pack.version}</version>
                                </feature-pack>
                            </feature-packs>
                            <excluded-layers>
                                <layer>jpa</layer>
                            </excluded-layers>
                            <layers>
                                <layer>jaxrs-server</layer>
                                <layer>h2-default-datasource</layer>
                                <layer>jpa-distributed</layer>
                            </layers>
                        </configuration>
                    </execution>

                    <!-- Package a load balancer -->
                    <execution>
                        <id>bootable-jar-load-balancer-packaging</id>
                        <goals>
                            <goal>package</goal>
                        </goals>
                        <phase>${bootable-jar-load-balancer-packaging.phase}</phase>
                        <configuration>
                            <output-file-name>test-wildfly-cloud-profile-load-balancer.jar</output-file-name>
                            <hollowJar>true</hollowJar>
                            <record-state>false</record-state>
                            <log-time>${galleon.log.time}</log-time>
                            <offline>true</offline>
                            <plugin-options>
                                <jboss-maven-dist/>
                                <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                            </plugin-options>
                            <cli-sessions>
                                <cli-session>
                                    <script-files>
                                        <script>clustering-load-balancer-bootable-jar.cli</script>
                                    </script-files>
                                </cli-session>
                            </cli-sessions>
                            <feature-packs>
                                <feature-pack>
                                    <groupId>${testsuite.ee.galleon.pack.groupId}</groupId>
                                    <artifactId>${testsuite.ee.galleon.pack.artifactId}</artifactId>
                                    <version>${testsuite.ee.galleon.pack.version}</version>
                                </feature-pack>
                            </feature-packs>
                            <layers>
                                <layer>management</layer>
                                <layer>undertow-load-balancer</layer>
                            </layers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>

        <!-- Common step to prepare servers in use by all non-Galleon tests -->
        <profile>
            <id>ts.clustering.common.profile</id>
            <activation>
                <property>
                    <name>!ts.noClustering</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Update server profile with shared configuration changes and the load balancer -->
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>${version.org.wildfly.plugin}</version>
                        <executions>
                            <execution>
                                <id>ts.config-as.configure-wildfly</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute-commands</goal>
                                </goals>
                                <configuration>
                                    <offline>true</offline>
                                    <scripts>
                                        <script>clustering-ha.cli</script>
                                        <!-- Add cache-container=server to the standalone.xml and standalone-full.xml configurations -->
                                        <script>clustering.cli</script>
                                    </scripts>
                                    <jboss-home>${wildfly.dir}</jboss-home>
                                    <stdout>${project.build.directory}/wildfly-plugin.log</stdout>
                                    <java-opts>${modular.jdk.args}</java-opts>
                                    <system-properties>
                                        <maven.repo.local>${settings.localRepository}</maven.repo.local>
                                        <module.path>${jboss.dist}/modules</module.path>
                                    </system-properties>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.config-as.configure-lb</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>execute-commands</goal>
                                </goals>
                                <configuration>
                                    <offline>true</offline>
                                    <scripts>
                                        <script>clustering-load-balancer.cli</script>
                                    </scripts>
                                    <jboss-home>${wildfly.dir}</jboss-home>
                                    <stdout>${project.build.directory}/wildfly-plugin.log</stdout>
                                    <java-opts>${modular.jdk.args}</java-opts>
                                    <system-properties>
                                        <maven.repo.local>${settings.localRepository}</maven.repo.local>
                                        <module.path>${jboss.dist}/modules</module.path>
                                    </system-properties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>keytool-maven-plugin</artifactId>
                        <version>1.5</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.mojo</groupId>
                                <artifactId>keytool-api-1.7</artifactId>
                                <version>1.5</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <phase>generate-test-resources</phase>
                                <id>clean-keystore</id>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                            <execution>
                                <phase>generate-test-resources</phase>
                                <id>genkey-keystore</id>
                                <goals>
                                    <goal>generateKeyPair</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <keystore>${wildfly.dir}/standalone/configuration/sso.keystore</keystore>
                            <dname>cn=commonName, ou=organizationUnit, o=organizationName, c=countryCode</dname>
                            <storetype>PKCS12</storetype>
                            <keypass>password</keypass>
                            <storepass>password</storepass>
                            <alias>localhost</alias>
                            <keyalg>RSA</keyalg>
                            <keysize>2048</keysize>
                            <validity>365</validity>
                            <verbose>true</verbose>
                        </configuration>
                    </plugin>
                    <!-- Copy 4 containers based on the shared configuration and one load balancer profile -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions combine.children="append">
                            <execution>
                                <id>ts.config-as.clustering</id>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <ant antfile="${basedir}/../src/test/scripts/clustering-build.xml">
                                            <target name="build-clustering"/>
                                        </ant>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile which provisions infinispan server by downloading, unpacking and patching it -->
        <profile>
            <id>ts.clustering.common.infinispan-server.download.profile</id>
            <activation>
                <property>
                    <name>!infinispan.server.home.override</name>
                </property>
            </activation>
            <properties>
                <infinispan.server.home.template>${basedir}/target/infinispan-server-${version.org.infinispan.server}</infinispan.server.home.template>
            </properties>
            <build>
                <plugins>
                    <!-- Download, unpack, and locally cache infinispan server distribution -->
                    <!-- This works around the fact that infinispan server distribution zip is no longer published in maven -->
                    <plugin>
                        <groupId>com.googlecode.maven-download-plugin</groupId>
                        <artifactId>download-maven-plugin</artifactId>
                        <version>1.3.0</version>
                        <executions>
                            <execution>
                                <id>ts.config-as.configure-infinispan-server</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>wget</goal>
                                </goals>
                                <configuration>
                                    <url>https://downloads.jboss.org/infinispan/${version.org.infinispan.server}/infinispan-server-${version.org.infinispan.server}.zip</url>
                                    <unpack>true</unpack>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Patch infinispan server distribution, e.g. with authentication / users configuration. -->
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>ts.config-as.configure-users-infinispan-server</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${infinispan.server.home.template}/server/conf</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/test/resources/infinispan-server-overlay</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- Alternative profile to the above which copies over custom infinispan server distribution from user-specified path and patches it -->
        <profile>
            <id>ts.clustering.common.infinispan-server.custom.profile</id>
            <activation>
                <property>
                    <name>infinispan.server.home.override</name>
                </property>
            </activation>
            <properties>
                <infinispan.server.home.template>${basedir}/target/infinispan-server-custom</infinispan.server.home.template>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <!-- FIXME Remove version override once rest of WF upgrades to this or newer version -->
                        <!-- Bring in version with fix for https://issues.apache.org/jira/browse/MRESOURCES-236 -->
                        <version>3.2.0</version>
                        <executions>
                            <!-- Copy over infinispan server distribution from custom path -->
                            <execution>
                                <id>ts.config-as.configure-infinispan-server-custom</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${infinispan.server.home.template}</outputDirectory>
                                    <includeEmptyDirs>true</includeEmptyDirs>
                                    <resources>
                                        <resource>
                                            <directory>${infinispan.server.home.override}</directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <!-- Patch infinispan server distribution, e.g. with authentication / users configuration. -->
                            <execution>
                                <id>ts.config-as.configure-users-infinispan-server-custom</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${infinispan.server.home.template}/server/conf</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/test/resources/infinispan-server-overlay</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Run cluster tests with standalone-ha.xml profile -->
        <profile>
            <id>ts.clustering.cluster.ha.profile</id>
            <activation>
                <property>
                    <name>!ts.noClustering</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${version.surefire.plugin}</version>
                        <executions combine.children="append">
                            <!-- Multi-node clustering tests -->
                            <execution>
                                <id>ts.surefire.clustering.ha</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <!-- Fix test order to speed up execution by grouping tests that run against same group of containers -->
                                    <runOrder>alphabetical</runOrder>
                                    <!-- Tests to execute. -->
                                    <includes>
                                        <include>${test-group}/**/*TestCase.java</include>
                                    </includes>
                                    <!-- Skip byteman tests -->
                                    <excludes>
                                        <!-- These are run with full-ha server profile by ts.clustering.cluster.fullha.profile maven profile -->
                                        <exclude>${test-group}/**/ejb/stateful/*TestCase.java</exclude>
                                        <exclude>${test-group}/**/group/*TestCase.java</exclude>
                                        <exclude>${test-group}/**/jms/*TestCase.java</exclude>
                                        <!-- These are run by ts.clustering.cluster.ha-infinispan-server.profile -->
                                        <exclude>${test-group}/**/ejb/timer/remote/*TestCase.java</exclude>
                                        <exclude>${test-group}/**/infinispan/remote/*TestCase.java</exclude>
                                        <exclude>${test-group}/**/web/remote/*TestCase.java</exclude>
                                        <exclude>${test-group}/**/sso/remote/*TestCase.java</exclude>
                                        <!-- These are run by ts.clustering.cluster.byteman.profile -->
                                        <exclude>${test-group}/**/byteman/*TestCase.java</exclude>
                                        <exclude>%regex[${test-group}/(${ts.surefire.clustering.ha.additionalExcludes})/.*TestCase.class]</exclude>
                                    </excludes>
                                    <!-- Parameters to test cases. -->
                                    <systemPropertyVariables>
                                        <!-- required by arquillian.xml -->
                                        <wildfly1>wildfly-1</wildfly1>
                                        <wildfly2>wildfly-2</wildfly2>
                                        <wildfly3>wildfly-3</wildfly3>
                                        <wildfly4>wildfly-4</wildfly4>
                                        <wildfly-load-balancer1>wildfly-load-balancer-1</wildfly-load-balancer1>
                                        <!-- end required by arquillian.xml -->
                                        <node0>${node0}</node0>
                                        <node1>${node1}</node1>
                                        <node2>${node2}</node2>
                                        <node3>${node3}</node3>
                                        <mcast>${mcast}</mcast>
                                        <mcast1>${mcast1}</mcast1>
                                        <mcast2>${mcast2}</mcast2>
                                        <mcast3>${mcast3}</mcast3>
                                        <arquillian.xml>arquillian.xml</arquillian.xml>
                                        <arquillian.launch>clustering-all</arquillian.launch>
                                        <jboss.server.config.file.name>standalone-ha.xml</jboss.server.config.file.name>
                                        <!-- Override ${server.jvm.arg} to only include ${jvm.args.ip} but *not* include ${jvm.args.ip.server} -->
                                        <server.jvm.args>${surefire.system.args} ${jvm.args.ip} ${jvm.args.other} ${jvm.args.timeouts} ${jvm.args.dirs} ${extra.server.jvm.args} -Dnode0=${node0} -Dnode1=${node1} -Dnode2=${node2} -Dnode3=${node3}</server.jvm.args>
                                        <infinispan.server.home>${infinispan.server.home.template}</infinispan.server.home>
                                        <infinispan.server.profile>${infinispan.server.profile.override}</infinispan.server.profile>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Run cluster tests with standalone-ha.xml profile with Infinispan Server provisioned -->
        <profile>
            <id>ts.clustering.cluster.ha-infinispan-server.profile</id>
            <activation>
                <property>
                    <name>!ts.noClustering</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${version.surefire.plugin}</version>
                        <executions combine.children="append">
                            <!-- Multi-node clustering tests -->
                            <execution>
                                <id>ts.surefire.clustering.ha-infinispan-server</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <!-- Fix test order to speed up execution by grouping tests that run against same group of containers -->
                                    <runOrder>alphabetical</runOrder>
                                    <!-- Tests to execute. -->
                                    <includes>
                                        <include>${test-group}/**/ejb/timer/remote/*TestCase.java</include>
                                        <include>${test-group}/**/infinispan/remote/*TestCase.java</include>
                                        <include>${test-group}/**/web/remote/*TestCase.java</include>
                                        <include>${test-group}/**/sso/remote/*TestCase.java</include>
                                    </includes>
                                    <!-- Parameters to test cases. -->
                                    <systemPropertyVariables>
                                        <!-- required by arquillian.xml -->
                                        <wildfly1>wildfly-1</wildfly1>
                                        <wildfly2>wildfly-2</wildfly2>
                                        <wildfly3>wildfly-3</wildfly3>
                                        <wildfly4>wildfly-4</wildfly4>
                                        <wildfly-load-balancer1>wildfly-load-balancer-1</wildfly-load-balancer1>
                                        <!-- end required by arquillian.xml -->
                                        <node0>${node0}</node0>
                                        <node1>${node1}</node1>
                                        <node2>${node2}</node2>
                                        <node3>${node3}</node3>
                                        <mcast>${mcast}</mcast>
                                        <mcast1>${mcast1}</mcast1>
                                        <mcast2>${mcast2}</mcast2>
                                        <mcast3>${mcast3}</mcast3>
                                        <arquillian.xml>arquillian.xml</arquillian.xml>
                                        <arquillian.launch>clustering-all</arquillian.launch>
                                        <jboss.server.config.file.name>standalone-ha.xml</jboss.server.config.file.name>
                                        <!-- Override ${server.jvm.arg} to only include ${jvm.args.ip} but *not* include ${jvm.args.ip.server} -->
                                        <server.jvm.args>${surefire.system.args} ${jvm.args.ip} ${jvm.args.other} ${jvm.args.timeouts} ${jvm.args.dirs} ${extra.server.jvm.args} -Dnode0=${node0} -Dnode1=${node1} -Dnode2=${node2} -Dnode3=${node3}</server.jvm.args>
                                        <infinispan.server.home>${infinispan.server.home.template}</infinispan.server.home>
                                        <infinispan.server.profile>${infinispan.server.profile.override}</infinispan.server.profile>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Run cluster tests with standalone-full-ha.xml profile -->
        <profile>
            <id>ts.clustering.cluster.fullha.profile</id>
            <activation>
                <property>
                    <name>!ts.noClustering</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${version.surefire.plugin}</version>
                        <executions combine.children="append">
                            <!-- Multi-node clustering tests -->
                            <execution>
                                <id>ts.surefire.clustering.fullha</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <!-- Fix test order to speed up execution by grouping tests that run against same group of containers -->
                                    <runOrder>alphabetical</runOrder>
                                    <!-- Tests to execute. -->
                                    <includes>
                                        <include>${test-group}/**/ejb/stateful/*TestCase.java</include>
                                        <include>${test-group}/**/group/*TestCase.java</include>
                                        <include>${test-group}/**/jms/*TestCase.java</include>
                                    </includes>
                                    <!-- Parameters to test cases. -->
                                    <systemPropertyVariables>
                                        <!-- required by arquillian.xml -->
                                        <wildfly1>wildfly-1</wildfly1>
                                        <wildfly2>wildfly-2</wildfly2>
                                        <wildfly3>wildfly-3</wildfly3>
                                        <wildfly4>wildfly-4</wildfly4>
                                        <wildfly-load-balancer1>wildfly-load-balancer-1</wildfly-load-balancer1>
                                        <!-- end required by arquillian.xml -->
                                        <node0>${node0}</node0>
                                        <node1>${node1}</node1>
                                        <node2>${node2}</node2>
                                        <node3>${node3}</node3>
                                        <mcast>${mcast}</mcast>
                                        <mcast1>${mcast1}</mcast1>
                                        <mcast2>${mcast2}</mcast2>
                                        <mcast3>${mcast3}</mcast3>
                                        <arquillian.xml>arquillian.xml</arquillian.xml>
                                        <arquillian.launch>clustering-all</arquillian.launch>
                                        <jboss.server.config.file.name>standalone-full-ha.xml</jboss.server.config.file.name>
                                        <!-- Override ${server.jvm.arg} to only include ${jvm.args.ip} but *not* include ${jvm.args.ip.server} -->
                                        <server.jvm.args>${surefire.system.args} ${jvm.args.ip} ${jvm.args.other} ${jvm.args.timeouts} ${jvm.args.dirs} ${extra.server.jvm.args} -Dnode0=${node0} -Dnode1=${node1} -Dnode2=${node2} -Dnode3=${node3} -Djboss.messaging.cluster.password=testsuite-messaging-password</server.jvm.args>
                                        <infinispan.server.home>${infinispan.server.home.template}</infinispan.server.home>
                                        <infinispan.server.profile>${infinispan.server.profile.override}</infinispan.server.profile>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Run clustering single node tests -->
        <profile>
            <id>ts.clustering.single.profile</id>
            <activation>
                <property>
                    <name>!ts.noClustering</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${version.surefire.plugin}</version>
                        <executions combine.children="append">
                            <!-- Single node clustering tests. -->
                            <execution>
                                <id>ts.surefire.clustering.single</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <runOrder>alphabetical</runOrder>
                                    <includes>
                                        <include>org/jboss/as/test/clustering/single/**/*TestCase.java</include>
                                    </includes>
                                    <excludes>
                                        <exclude>org/jboss/as/test/clustering/single/infinispan/**/*TestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/single/web/NonHaWebSessionPersistenceTestCase.java</exclude>
                                    </excludes>
                                    <systemPropertyVariables combine.children="append">
                                        <wildfly1>wildfly-1</wildfly1>
                                        <arquillian.launch>single</arquillian.launch>
                                        <jboss.server.config.file.name>standalone.xml</jboss.server.config.file.name>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <!-- Single node clustering tests for containers with manual lifecycle. -->
                            <execution>
                                <id>ts.surefire.clustering.single.manual</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <runOrder>alphabetical</runOrder>
                                    <includes>
                                        <include>org/jboss/as/test/clustering/single/web/NonHaWebSessionPersistenceTestCase.java</include>
                                    </includes>
                                    <systemPropertyVariables combine.children="append">
                                        <wildfly1>wildfly-1</wildfly1>
                                        <arquillian.launch>node-non-ha</arquillian.launch>
                                        <jboss.server.config.file.name>standalone.xml</jboss.server.config.file.name>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Run single node tests using testable deployments with standalone-ha.xml profile and with Infinispan Server provisioned -->
        <profile>
            <id>ts.clustering.single.testable.profile</id>
            <activation>
                <property>
                    <name>!ts.noClustering</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions combine.children="append">
                            <execution>
                                <id>ts.surefire.clustering.single.testable</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <runOrder>alphabetical</runOrder>
                                    <includes>
                                        <include>org/jboss/as/test/clustering/single/infinispan/InfinispanModulesTestSuite.java</include>
                                    </includes>
                                    <classpathDependencyExcludes>
                                        <classpathDependencyExclude>org.jboss.arquillian.extension:arquillian-extension-byteman</classpathDependencyExclude>
                                    </classpathDependencyExcludes>
                                    <systemPropertyVariables>
                                        <node0>${node0}</node0>
                                        <mcast>${mcast}</mcast>
                                        <arquillian.xml>arquillian-testable.xml</arquillian.xml>
                                        <jboss.server.config.file.name>standalone-ha.xml</jboss.server.config.file.name>
                                        <server.jvm.args>${surefire.system.args} ${jvm.args.ip} ${jvm.args.other} ${jvm.args.timeouts} ${jvm.args.dirs} ${extra.server.jvm.args} -Dnode0=${node0} -Dnode1=${node1} -Dnode2=${node2} -Dnode3=${node3}</server.jvm.args>
                                        <infinispan.server.home>${infinispan.server.home.template}</infinispan.server.home>
                                        <infinispan.server.profile>${infinispan.server.profile.override}</infinispan.server.profile>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Run byteman tests -->
        <profile>
            <id>ts.clustering.byteman.profile</id>
            <activation>
                <property>
                    <name>!ts.noClustering</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${version.surefire.plugin}</version>
                        <executions>
                            <!-- Multi-node clustering tests (based on Byteman) for EJB tests -->
                            <execution>
                                <id>ts.surefire.clustering.byteman</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <argLine>${surefire.byteman.argline}</argLine>
                                    <!-- Needed for EJB client tests -->
                                    <useSystemClassLoader>true</useSystemClassLoader>
                                    <useManifestOnlyJar>true</useManifestOnlyJar>
                                    <forkMode>once</forkMode>
                                    <environmentVariables>
                                        <BYTEMAN_HOME/>
                                    </environmentVariables>
                                    <includes>
                                        <include>${test-group}/**/byteman/*TestCase.java</include>
                                    </includes>
                                    <systemPropertyVariables combine.children="append">
                                        <node0>${node0}</node0>
                                        <node1>${node1}</node1>
                                        <node2>${node2}</node2>
                                        <node3>${node3}</node3>
                                        <mcast>${mcast}</mcast>
                                        <mcast1>${mcast1}</mcast1>
                                        <mcast2>${mcast2}</mcast2>
                                        <mcast3>${mcast3}</mcast3>
                                        <arquillian.xml>arquillian-byteman.xml</arquillian.xml>
                                        <arquillian.launch>clustering-all</arquillian.launch>
                                        <jboss.server.config.file.name>standalone-full-ha.xml</jboss.server.config.file.name>
                                        <!-- Usual server JVM args plus additional Byteman args (-Djboss.modules.system.pkgs, -Xbootclasspath)-->
                                        <server.jvm.args>${surefire.system.args} ${jvm.args.ip} ${jvm.args.other} ${jvm.args.timeouts} ${jvm.args.dirs} ${extra.server.jvm.args} ${surefire.byteman.args} -Dnode0=${node0} -Dnode1=${node1} -Dnode2=${node2} -Dnode3=${node3}</server.jvm.args>
                                        <infinispan.server.home>${infinispan.server.home.template}</infinispan.server.home>
                                        <infinispan.server.profile>${infinispan.server.profile.override}</infinispan.server.profile>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Selectively disable executions for clustering tests that do not work on IBM JDK -->
        <profile>
            <id>ts.clustering.ibm-exclusions.profile</id>
            <activation>
                <property>
                    <name>java.vendor</name>
                    <value>IBM Corporation</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions combine.children="append">
                            <execution>
                                <id>ts.surefire.clustering.byteman</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Shared plugin configuration used by ts.clustering.layers.profile and standalone.microprofile.profile -->
        <profile>
            <id>ts.clustering.shared.mp.profile</id>
            <activation>
                <property>
                    <name>!ts.noClustering</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <!-- A set of tests that can run against a slimmed cloud profile or the standalone-microprofile-ha.xml config -->
                            <execution>
                                <id>ts.surefire.clustering.microprofile</id>
                                <!-- Disabled by default; other profiles turn it on -->
                                <phase>none</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <!-- Fix test order to speed up execution by grouping tests that run against same group of containers -->
                                    <runOrder>alphabetical</runOrder>
                                    <!-- Parameters to test cases. -->
                                    <systemPropertyVariables>
                                        <node0>${node0}</node0>
                                        <node1>${node1}</node1>
                                        <node2>${node2}</node2>
                                        <node3>${node3}</node3>
                                        <mcast>${mcast}</mcast>
                                        <mcast1>${mcast1}</mcast1>
                                        <mcast2>${mcast2}</mcast2>
                                        <mcast3>${mcast3}</mcast3>
                                        <arquillian.xml>arquillian.xml</arquillian.xml>
                                        <arquillian.launch>clustering-all</arquillian.launch>
                                        <jboss.server.config.file.name>standalone-full-ha.xml</jboss.server.config.file.name>
                                        <!-- Override ${server.jvm.arg} to only include ${jvm.args.ip} but *not* include ${jvm.args.ip.server} -->
                                        <server.jvm.args>${surefire.system.args} ${jvm.args.ip} ${jvm.args.other} ${jvm.args.timeouts} ${jvm.args.dirs} ${extra.server.jvm.args} -Dnode0=${node0} -Dnode1=${node1} -Dnode2=${node2} -Dnode3=${node3}</server.jvm.args>
                                        <infinispan.server.home>${infinispan.server.home.template}</infinispan.server.home>
                                        <infinispan.server.profile>${infinispan.server.profile.override}</infinispan.server.profile>
                                    </systemPropertyVariables>
                                    <!-- Tests to execute. -->
                                    <includes>
                                        <include>${test-group}/**/*TestCase.java</include>
                                    </includes>
                                    <excludes>
                                        <!-- Skip byteman tests -->
                                        <exclude>${test-group}/**/byteman/*TestCase.java</exclude>
                                        <!-- Skip modcluster tests -->
                                        <exclude>org/jboss/as/test/clustering/cluster/modcluster/*TestCase.java</exclude>
                                        <!-- Uses TopologyChangeListener EJB -->
                                        <exclude>org/jboss/as/test/clustering/cluster/affinity/RankedAffinityTestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/cdi/**</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/infinispan/embedded/*TestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/infinispan/remote/*TestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/singleton/SingletonPartitionTestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/web/CoarseImmutableWebFailoverTestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/web/CoarseWebFailoverTestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/web/ConcurrentCoarseWebFailoverTestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/web/ConcurrentFineWebFailoverTestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/web/FineImmutableWebFailoverTestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/web/FineWebFailoverTestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/web/ReplicationForNegotiationAuthenticatorTestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/web/context/InvalidateConversationTestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/web/persistence/*DatabasePersistenceWebFailoverTestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/web/remote/*HotRodPersistenceWebFailoverTestCase.java</exclude>
                                        <!-- Uses ClusterTopologyRetriever EJB -->
                                        <exclude>org/jboss/as/test/clustering/cluster/dispatcher/CommandDispatcherTestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/group/GroupListenerTestCase.java</exclude>
                                        <!-- Uses ServiceProviderRetriever EJB -->
                                        <exclude>org/jboss/as/test/clustering/cluster/provider/ServiceProviderRegistrationTestCase.java</exclude>
                                        <!-- Uses RegistryRetriever EJB -->
                                        <exclude>org/jboss/as/test/clustering/cluster/registry/RegistryTestCase.java</exclude>
                                        <!-- EJB tests -->
                                        <exclude>**/ejb/**/*TestCase.java</exclude>
                                        <exclude>**/ejb2/**/*TestCase.java</exclude>
                                        <!-- Needs JSF -->
                                        <exclude>org/jboss/as/test/clustering/cluster/jsf/*TestCase.java</exclude>
                                        <!-- Needs embedded JMS -->
                                        <exclude>org/jboss/as/test/clustering/cluster/jms/*TestCase.java</exclude>
                                        <!-- Needs ha-singleton -->
                                        <exclude>org/jboss/as/test/clustering/cluster/singleton/*TestCase.java</exclude>
                                        <!-- Tests legacy security; there are *Elytron* variants that we do execute -->
                                        <exclude>org/jboss/as/test/clustering/cluster/sso/ReplicatedSingleSignOnTestCase.java</exclude>
                                        <!-- TODO these require infinispan server provisioning -->
                                        <exclude>org/jboss/as/test/clustering/cluster/web/remote/*TestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/sso/remote/*TestCase.java</exclude>
                                        <!-- TODO test setup requires legacy security but it would be better if it could handle elytron as well -->
                                        <exclude>org/jboss/as/test/clustering/cluster/web/authentication/*TestCase.java</exclude>
                                        <!-- Runs against a non-HA standalone.xml, which isn't what this profile provisions.
                                             TODO provisioning and testing this may be something to do. -->
                                        <exclude>org/jboss/as/test/clustering/cluster/web/NonHaWebSessionPersistenceTestCase.java</exclude>
                                        <!-- Needs jpa replaced with jpa-distributed;
                                             this is tested in the ts.surefire.clustering.all.jpa2lc execution -->
                                        <exclude>org/jboss/as/test/clustering/cluster/jpa/*TestCase.java</exclude>
                                        <exclude>org/jboss/as/test/clustering/cluster/jpa/custom/*TestCase.java</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.all.jpa2lc</id>
                                <!-- Disabled by default; other profiles turn it on -->
                                <phase>none</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <!-- Tests to execute. -->
                                    <includes>
                                        <include>org/jboss/as/test/clustering/cluster/jpa/*TestCase.java</include>
                                        <include>org/jboss/as/test/clustering/cluster/jpa/custom/*TestCase.java</include>
                                    </includes>
                                    <!-- Parameters to test cases. -->
                                    <systemPropertyVariables>
                                        <node0>${node0}</node0>
                                        <node1>${node1}</node1>
                                        <node2>${node2}</node2>
                                        <node3>${node3}</node3>
                                        <mcast>${mcast}</mcast>
                                        <mcast1>${mcast1}</mcast1>
                                        <mcast2>${mcast2}</mcast2>
                                        <mcast3>${mcast3}</mcast3>
                                        <arquillian.xml>arquillian.xml</arquillian.xml>
                                        <arquillian.launch>clustering-all</arquillian.launch>
                                        <jboss.server.config.file.name>standalone-full-ha.xml</jboss.server.config.file.name>
                                        <!-- Override ${server.jvm.arg} to only include ${jvm.args.ip} but *not* include ${jvm.args.ip.server} -->
                                        <server.jvm.args>${surefire.system.args} ${jvm.args.ip} ${jvm.args.other} ${jvm.args.timeouts} ${jvm.args.dirs} ${extra.server.jvm.args} -Dnode0=${node0} -Dnode1=${node1} -Dnode2=${node2} -Dnode3=${node3}</server.jvm.args>
                                        <infinispan.server.home>${infinispan.server.home.template}</infinispan.server.home>
                                        <infinispan.server.profile>${infinispan.server.profile.override}</infinispan.server.profile>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.jsf</id>
                                <!-- Disabled by default; other profiles turn it on -->
                                <phase>none</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <!-- Tests to execute. -->
                                    <includes>
                                        <include>org/jboss/as/test/clustering/cluster/jsf/*TestCase.java</include>
                                    </includes>
                                    <!-- Parameters to test cases. -->
                                    <systemPropertyVariables>
                                        <node0>${node0}</node0>
                                        <node1>${node1}</node1>
                                        <node2>${node2}</node2>
                                        <node3>${node3}</node3>
                                        <mcast>${mcast}</mcast>
                                        <mcast1>${mcast1}</mcast1>
                                        <mcast2>${mcast2}</mcast2>
                                        <mcast3>${mcast3}</mcast3>
                                        <arquillian.xml>arquillian.xml</arquillian.xml>
                                        <arquillian.launch>clustering-all</arquillian.launch>
                                        <jboss.server.config.file.name>standalone-full-ha.xml</jboss.server.config.file.name>
                                        <!-- Override ${server.jvm.arg} to only include ${jvm.args.ip} but *not* include ${jvm.args.ip.server} -->
                                        <server.jvm.args>${surefire.system.args} ${jvm.args.ip} ${jvm.args.other} ${jvm.args.timeouts} ${jvm.args.dirs} ${extra.server.jvm.args} -Dnode0=${node0} -Dnode1=${node1} -Dnode2=${node2} -Dnode3=${node3}</server.jvm.args>
                                        <infinispan.server.home>${infinispan.server.home.template}</infinispan.server.home>
                                        <infinispan.server.profile>${infinispan.server.profile.override}</infinispan.server.profile>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.singleton-ha</id>
                                <!-- Disabled by default; other profiles turn it on -->
                                <phase>none</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <!-- Tests to execute. -->
                                    <includes>
                                        <include>org/jboss/as/test/clustering/cluster/singleton/*TestCase.java</include>
                                    </includes>
                                    <excludes>
                                        <!-- Requires EJB not provisioned by the tested layer -->
                                        <exclude>org/jboss/as/test/clustering/cluster/singleton/SingletonPartitionTestCase.java</exclude>
                                    </excludes>
                                    <!-- Parameters to test cases. -->
                                    <systemPropertyVariables>
                                        <node0>${node0}</node0>
                                        <node1>${node1}</node1>
                                        <node2>${node2}</node2>
                                        <node3>${node3}</node3>
                                        <mcast>${mcast}</mcast>
                                        <mcast1>${mcast1}</mcast1>
                                        <mcast2>${mcast2}</mcast2>
                                        <mcast3>${mcast3}</mcast3>
                                        <arquillian.xml>arquillian.xml</arquillian.xml>
                                        <arquillian.launch>clustering-all</arquillian.launch>
                                        <jboss.server.config.file.name>standalone-full-ha.xml</jboss.server.config.file.name>
                                        <!-- Override ${server.jvm.arg} to only include ${jvm.args.ip} but *not* include ${jvm.args.ip.server} -->
                                        <server.jvm.args>${surefire.system.args} ${jvm.args.ip} ${jvm.args.other} ${jvm.args.timeouts} ${jvm.args.dirs} ${extra.server.jvm.args} -Dnode0=${node0} -Dnode1=${node1} -Dnode2=${node2} -Dnode3=${node3}</server.jvm.args>
                                        <infinispan.server.home>${infinispan.server.home.template}</infinispan.server.home>
                                        <infinispan.server.profile>${infinispan.server.profile.override}</infinispan.server.profile>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.web-passivation</id>
                                <!-- Disabled by default; other profiles turn it on -->
                                <phase>none</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <runOrder>alphabetical</runOrder>
                                    <includes>
                                        <include>org/jboss/as/test/clustering/single/web/NonHaWebSessionPersistenceTestCase.java</include>
                                    </includes>
                                    <systemPropertyVariables combine.children="append">
                                        <arquillian.launch>node-non-ha</arquillian.launch>
                                        <jboss.server.config.file.name>standalone.xml</jboss.server.config.file.name>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.singleton-local</id>
                                <!-- Disabled by default; other profiles turn it on -->
                                <phase>none</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <runOrder>alphabetical</runOrder>
                                    <includes>
                                        <include>org/jboss/as/test/clustering/single/singleton/SingletonServiceTestCase.java</include>
                                    </includes>
                                    <systemPropertyVariables combine.children="append">
                                        <arquillian.launch>single</arquillian.launch>
                                        <jboss.server.config.file.name>standalone.xml</jboss.server.config.file.name>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Test against slimmed servers provisioned by Galleon -->
        <profile>
            <id>ts.clustering.layers.profile</id>
            <activation>
                <property>
                    <name>ts.layers</name>
                </property>
            </activation>
            <properties>
                <jboss.dist>${project.build.directory}/wildfly</jboss.dist>
                <extra.server.jvm.args>-Dmaven.repo.local=${settings.localRepository}</extra.server.jvm.args>
            </properties>
            <build>
                <plugins>
                    <!-- Disable the standard copy-based provisioning -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>ts.copy-wildfly</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Instead provision slimmed installations -->
                    <plugin>
                        <groupId>org.jboss.galleon</groupId>
                        <artifactId>galleon-maven-plugin</artifactId>
                        <executions>
                            <!-- Provision a cloud-server with web-clustering -->
                            <execution>
                                <id>cloud-profile-provisioning</id>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <install-dir>${project.build.directory}/wildfly</install-dir>
                                    <record-state>false</record-state>
                                    <log-time>${galleon.log.time}</log-time>
                                    <offline>${galleon.offline}</offline>
                                    <plugin-options>
                                        <jboss-maven-dist/>
                                        <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                        <optional-packages>passive+</optional-packages>
                                    </plugin-options>
                                    <feature-packs>
                                        <feature-pack>
                                            <groupId>${testsuite.ee.galleon.pack.groupId}</groupId>
                                            <artifactId>${testsuite.ee.galleon.pack.artifactId}</artifactId>
                                            <version>${testsuite.ee.galleon.pack.version}</version>
                                            <inherit-configs>false</inherit-configs>
                                            <inherit-packages>false</inherit-packages>
                                        </feature-pack>
                                    </feature-packs>
                                    <configurations>
                                        <!-- Provision the configuration that the ts.surefire.clustering.all
                                             surefire execution tests. -->
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone-full-ha.xml</name>
                                            <layers>
                                                <layer>cloud-server</layer>
                                                <layer>web-clustering</layer>
                                                <layer>h2-default-datasource</layer>
                                                <layer>infinispan</layer>
                                            </layers>
                                        </config>
                                        <!-- Some tests launch an lb process, and this gets set up
                                             by ts.config-as.clustering copying the single common dist
                                             to a separate dir, and then the tests launch a process from
                                             that dir with -c=standalone-load-balancer.xml. We could
                                             directly provision to that dir in a separate execution and
                                             then change the ts.config-as.clustering copying, which would be
                                             more formally correct. But this is simpler for now and, at least
                                             right now, does not result in extra packages ending up in the
                                             dist we test. (Avoiding the risk of extra packages would be the
                                             reason to do a separate provisioning of this installation.) -->
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone-load-balancer.xml</name>
                                            <layers>
                                                <layer>management</layer>
                                                <layer>undertow-load-balancer</layer>
                                            </layers>
                                        </config>
                                        <!-- Also produce a standalone-ha.xml file with the same content
                                             as standalone-full-ha.xml.
                                             This doesn't actually get used in any tests we run with this
                                             profile but the clustering-ha.cli script wants to modify it
                                             so to keep it simple create the file so that doesn't fail.
                                        -->
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone-ha.xml</name>
                                            <layers>
                                                <layer>cloud-server</layer>
                                                <layer>web-clustering</layer>
                                                <layer>h2-default-datasource</layer>
                                                <layer>infinispan</layer>
                                            </layers>
                                        </config>
                                    </configurations>
                                </configuration>
                            </execution>
                            <!-- Provision a server with 'mod_cluster' layer -->
                            <execution>
                                <id>cloud-profile-mod_cluster-provisioning</id>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <install-dir>${project.build.directory}/wildfly-clustering-mod_cluster</install-dir>
                                    <record-state>false</record-state>
                                    <log-time>${galleon.log.time}</log-time>
                                    <offline>${galleon.offline}</offline>
                                    <plugin-options>
                                        <jboss-maven-dist/>
                                        <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                        <optional-packages>passive+</optional-packages>
                                    </plugin-options>
                                    <feature-packs>
                                        <feature-pack>
                                            <groupId>${testsuite.ee.galleon.pack.groupId}</groupId>
                                            <artifactId>${testsuite.ee.galleon.pack.artifactId}</artifactId>
                                            <version>${testsuite.ee.galleon.pack.version}</version>
                                            <inherit-configs>false</inherit-configs>
                                            <inherit-packages>false</inherit-packages>
                                        </feature-pack>
                                        <feature-pack>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>wildfly-test-galleon-pack</artifactId>
                                            <version>${project.version}</version>
                                            <inherit-configs>false</inherit-configs>
                                            <inherit-packages>false</inherit-packages>
                                        </feature-pack>
                                    </feature-packs>
                                    <configurations>
                                        <!-- Also produce a standalone-full-ha.xml file with the same content
                                             as standalone-ha.xml.
                                             This doesn't actually get used in any tests we run with this
                                             profile but the clustering-ha.cli script wants to modify it
                                             so to keep it simple create the file so that doesn't fail.
                                        -->
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone-full-ha.xml</name>
                                            <layers>
                                                <layer>cloud-server</layer>
                                                <layer>mod_cluster</layer>
                                                <layer>web-clustering</layer>
                                                <layer>ejb</layer>
                                            </layers>
                                        </config>
                                        <!-- Provision the configuration that the ts.surefire.clustering.mod_cluster surefire execution tests. -->
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone-ha.xml</name>
                                            <layers>
                                                <layer>cloud-server</layer>
                                                <layer>mod_cluster</layer>
                                                <layer>web-clustering</layer>
                                                <layer>ejb</layer>
                                            </layers>
                                        </config>
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone-load-balancer.xml</name>
                                            <layers>
                                                <!-- Arquillian requires 'management' to manage the container. -->
                                                <layer>management</layer>
                                                <layer>undertow-load-balancer</layer>
                                            </layers>
                                        </config>
                                    </configurations>
                                </configuration>
                            </execution>
                            <!-- Provision a cloud-server with web-clustering and jpa-distributed-->
                            <execution>
                                <id>cloud-profile-jpa-distributed-provisioning</id>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <install-dir>${project.build.directory}/wildfly-jpa-dist</install-dir>
                                    <record-state>false</record-state>
                                    <log-time>${galleon.log.time}</log-time>
                                    <offline>${galleon.offline}</offline>
                                    <plugin-options>
                                        <jboss-maven-dist/>
                                        <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                        <optional-packages>passive+</optional-packages>
                                    </plugin-options>
                                    <feature-packs>
                                        <feature-pack>
                                            <groupId>${testsuite.ee.galleon.pack.groupId}</groupId>
                                            <artifactId>${testsuite.ee.galleon.pack.artifactId}</artifactId>
                                            <version>${testsuite.ee.galleon.pack.version}</version>
                                            <inherit-configs>false</inherit-configs>
                                            <inherit-packages>false</inherit-packages>
                                        </feature-pack>
                                        <feature-pack>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>wildfly-test-galleon-pack</artifactId>
                                            <version>${project.version}</version>
                                            <inherit-configs>false</inherit-configs>
                                            <inherit-packages>false</inherit-packages>
                                        </feature-pack>
                                    </feature-packs>
                                    <configurations>
                                        <!-- Provision the configuration that the ts.surefire.clustering.all.jpa2lc
                                             surefire execution tests. -->
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone-full-ha.xml</name>
                                            <excluded-layers>
                                                <layer>jpa</layer>
                                            </excluded-layers>
                                            <layers>
                                                <layer>jaxrs-server</layer>
                                                <layer>h2-default-datasource</layer>
                                                <layer>jpa-distributed</layer>
                                            </layers>
                                        </config>
                                        <!-- Also produce a standalone-ha.xml file with the same content
                                             as standalone-full-ha.xml.
                                             This doesn't actually get used in any tests we run with this
                                             profile but the clustering-ha.cli script wants to modify it
                                             so to keep it simple create the file so that doesn't fail.
                                        -->
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone-ha.xml</name>
                                            <excluded-layers>
                                                <layer>jpa</layer>
                                            </excluded-layers>
                                            <layers>
                                                <layer>cloud-server</layer>
                                                <layer>web-clustering</layer>
                                                <layer>h2-default-datasource</layer>
                                                <layer>jpa-distributed</layer>
                                            </layers>
                                        </config>
                                    </configurations>
                                </configuration>
                            </execution>
                            <!-- Provision a cloud-server with web-clustering, ejb-dist-cache and jpa-distributed-->
                            <execution>
                                <id>cloud-profile-ejb-provisioning</id>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <install-dir>${project.build.directory}/wildfly-clustering-ejb</install-dir>
                                    <record-state>false</record-state>
                                    <log-time>${galleon.log.time}</log-time>
                                    <offline>${galleon.offline}</offline>
                                    <plugin-options>
                                        <jboss-maven-dist/>
                                        <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                        <optional-packages>passive+</optional-packages>
                                    </plugin-options>
                                    <feature-packs>
                                        <feature-pack>
                                            <groupId>${testsuite.ee.galleon.pack.groupId}</groupId>
                                            <artifactId>${testsuite.ee.galleon.pack.artifactId}</artifactId>
                                            <version>${testsuite.ee.galleon.pack.version}</version>
                                            <inherit-configs>false</inherit-configs>
                                            <inherit-packages>false</inherit-packages>
                                        </feature-pack>
                                        <feature-pack>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>wildfly-test-galleon-pack</artifactId>
                                            <version>${project.version}</version>
                                            <inherit-configs>false</inherit-configs>
                                            <inherit-packages>false</inherit-packages>
                                        </feature-pack>
                                    </feature-packs>
                                    <configurations>
                                        <!-- Provision the configuration that the ts.surefire.clustering.ejb-xpc
                                             surefire execution tests. -->
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone-full-ha.xml</name>
                                            <excluded-layers>
                                                <layer>jpa</layer>
                                                <layer>ejb-local-cache</layer>
                                            </excluded-layers>
                                            <layers>
                                                <layer>jaxrs-server</layer>
                                                <layer>web-clustering</layer>
                                                <layer>h2-default-datasource</layer>
                                                <layer>jpa-distributed</layer>
                                                <layer>ejb</layer>
                                                <layer>ejb-dist-cache</layer>
                                            </layers>
                                        </config>
                                        <!-- Also produce a standalone-ha.xml file with the same content
                                             as standalone-full-ha.xml.
                                             This doesn't actually get used in any tests we run with this
                                             profile but the clustering-ha.cli script wants to modify it
                                             so to keep it simple create the file so that doesn't fail.
                                        -->
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone-ha.xml</name>
                                            <excluded-layers>
                                                <layer>jpa</layer>
                                                <layer>ejb-local-cache</layer>
                                            </excluded-layers>
                                            <layers>
                                                <layer>cloud-server</layer>
                                                <layer>web-clustering</layer>
                                                <layer>h2-default-datasource</layer>
                                                <layer>jpa-distributed</layer>
                                                <layer>ejb</layer>
                                                <layer>ejb-dist-cache</layer>
                                            </layers>
                                        </config>
                                    </configurations>
                                </configuration>
                            </execution>
                            <!-- Provision a jaxrs-server with web-clustering and jsf-->
                            <execution>
                                <id>jaxrs-server-jsf-provisioning</id>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <install-dir>${project.build.directory}/wildfly-clustering-jsf</install-dir>
                                    <record-state>false</record-state>
                                    <log-time>${galleon.log.time}</log-time>
                                    <offline>${galleon.offline}</offline>
                                    <plugin-options>
                                        <jboss-maven-dist/>
                                        <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                        <optional-packages>passive+</optional-packages>
                                    </plugin-options>
                                    <feature-packs>
                                        <feature-pack>
                                            <groupId>${testsuite.ee.galleon.pack.groupId}</groupId>
                                            <artifactId>${testsuite.ee.galleon.pack.artifactId}</artifactId>
                                            <version>${testsuite.ee.galleon.pack.version}</version>
                                            <inherit-configs>false</inherit-configs>
                                            <inherit-packages>false</inherit-packages>
                                        </feature-pack>
                                        <feature-pack>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>wildfly-test-galleon-pack</artifactId>
                                            <version>${project.version}</version>
                                            <inherit-configs>false</inherit-configs>
                                            <inherit-packages>false</inherit-packages>
                                        </feature-pack>
                                    </feature-packs>
                                    <configurations>
                                        <!-- Provision the configuration that the ts.surefire.clustering.jsf
                                             surefire execution tests. -->
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone-full-ha.xml</name>
                                            <layers>
                                                <layer>jaxrs-server</layer>
                                                <layer>web-clustering</layer>
                                                <layer>jsf</layer>
                                            </layers>
                                        </config>
                                        <!-- Also produce a standalone-ha.xml file with the same content
                                             as standalone-full-ha.xml.
                                             This doesn't actually get used in any tests we run with this
                                             profile but the clustering-ha.cli script wants to modify it
                                             so to keep it simple create the file so that doesn't fail.
                                        -->
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone-ha.xml</name>
                                            <layers>
                                                <layer>jaxrs-server</layer>
                                                <layer>web-clustering</layer>
                                                <layer>jsf</layer>
                                            </layers>
                                        </config>
                                    </configurations>
                                </configuration>
                            </execution>
                            <!-- Provision base 'web-server' + 'core-server' with 'singleton-ha'-->
                            <execution>
                                <id>cloud-server-singleton-ha-provisioning</id>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <install-dir>${project.build.directory}/wildfly-clustering-singleton-ha</install-dir>
                                    <record-state>false</record-state>
                                    <log-time>${galleon.log.time}</log-time>
                                    <offline>${galleon.offline}</offline>
                                    <plugin-options>
                                        <jboss-maven-dist/>
                                        <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                        <optional-packages>passive+</optional-packages>
                                    </plugin-options>
                                    <feature-packs>
                                        <feature-pack>
                                            <groupId>${testsuite.ee.galleon.pack.groupId}</groupId>
                                            <artifactId>${testsuite.ee.galleon.pack.artifactId}</artifactId>
                                            <version>${testsuite.ee.galleon.pack.version}</version>
                                            <inherit-configs>false</inherit-configs>
                                            <inherit-packages>false</inherit-packages>
                                        </feature-pack>
                                        <feature-pack>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>wildfly-test-galleon-pack</artifactId>
                                            <version>${project.version}</version>
                                            <inherit-configs>false</inherit-configs>
                                            <inherit-packages>false</inherit-packages>
                                        </feature-pack>
                                    </feature-packs>
                                    <configurations>
                                        <!-- Provision the configuration that the ts.surefire.clustering.singleton-ha
                                             surefire execution tests. -->
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone-full-ha.xml</name>
                                            <layers>
                                                <layer>web-server</layer>
                                                <layer>core-server</layer>
                                                <layer>singleton-ha</layer>
                                            </layers>
                                        </config>
                                        <!-- Also produce a standalone-ha.xml file with the same content
                                             as standalone-full-ha.xml.
                                             This doesn't actually get used in any tests we run with this
                                             profile but the clustering-ha.cli script wants to modify it
                                             so to keep it simple create the file so that doesn't fail.
                                        -->
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone-ha.xml</name>
                                            <layers>
                                                <layer>web-server</layer>
                                                <layer>core-server</layer>
                                                <layer>singleton-ha</layer>
                                            </layers>
                                        </config>
                                    </configurations>
                                </configuration>
                            </execution>
                            <!-- Provision datasources-web-server with web-passivation -->
                            <execution>
                                <id>web-passivation-provisioning</id>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <install-dir>${project.build.directory}/wildfly-web-passivation</install-dir>
                                    <record-state>false</record-state>
                                    <log-time>${galleon.log.time}</log-time>
                                    <offline>true</offline>
                                    <plugin-options>
                                        <jboss-maven-dist/>
                                        <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                        <optional-packages>passive+</optional-packages>
                                    </plugin-options>
                                    <feature-packs>
                                        <feature-pack>
                                            <groupId>${testsuite.ee.galleon.pack.groupId}</groupId>
                                            <artifactId>${testsuite.ee.galleon.pack.artifactId}</artifactId>
                                            <version>${testsuite.ee.galleon.pack.version}</version>
                                            <inherit-configs>false</inherit-configs>
                                            <inherit-packages>false</inherit-packages>
                                        </feature-pack>
                                    </feature-packs>
                                    <configurations>
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone.xml</name>
                                            <layers>
                                                <layer>datasources-web-server</layer>
                                                <layer>web-passivation</layer>
                                            </layers>
                                        </config>
                                    </configurations>
                                </configuration>
                            </execution>
                            <!-- Provision base 'web-server' + 'core-server' with 'singleton-local' -->
                            <execution>
                                <id>singleton-local-provisioning</id>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <install-dir>${project.build.directory}/wildfly-singleton-local</install-dir>
                                    <record-state>false</record-state>
                                    <log-time>${galleon.log.time}</log-time>
                                    <offline>true</offline>
                                    <plugin-options>
                                        <jboss-maven-dist/>
                                        <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                                        <optional-packages>passive+</optional-packages>
                                    </plugin-options>
                                    <feature-packs>
                                        <feature-pack>
                                            <groupId>${testsuite.ee.galleon.pack.groupId}</groupId>
                                            <artifactId>${testsuite.ee.galleon.pack.artifactId}</artifactId>
                                            <version>${testsuite.ee.galleon.pack.version}</version>
                                            <inherit-configs>false</inherit-configs>
                                            <inherit-packages>false</inherit-packages>
                                        </feature-pack>
                                    </feature-packs>
                                    <configurations>
                                        <config>
                                            <model>standalone</model>
                                            <name>standalone.xml</name>
                                            <layers>
                                                <layer>web-server</layer>
                                                <layer>core-server</layer>
                                                <layer>singleton-local</layer>
                                            </layers>
                                        </config>
                                    </configurations>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Update server profile with shared configuration changes -->
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>${version.org.wildfly.plugin}</version>
                        <executions>
                            <execution>
                                <id>ts.config-as.configure-wildfly</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute-commands</goal>
                                </goals>
                                <configuration>
                                    <!-- Only standalone-ha.xml and standalone-full-ha.xml configurations
                                         have been provisioned, execute only the CLI script that updates the ha configurations -->
                                    <scripts combine.self="override">
                                        <script>clustering-ha.cli</script>
                                    </scripts>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.config-as.configure-wildfly-clustering-mod_cluster</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute-commands</goal>
                                </goals>
                                <configuration>
                                    <offline>true</offline>
                                    <scripts>
                                        <script>clustering-ha.cli</script>
                                    </scripts>
                                    <jboss-home>${project.build.directory}/wildfly-clustering-mod_cluster</jboss-home>
                                    <stdout>${project.build.directory}/wildfly-clustering-mod_cluster-plugin.log</stdout>
                                    <java-opts>${modular.jdk.args}</java-opts>
                                    <system-properties>
                                        <maven.repo.local>${settings.localRepository}</maven.repo.local>
                                        <module.path>${project.build.directory}/wildfly-clustering-mod_cluster/modules</module.path>
                                    </system-properties>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.config-as.configure-lb-clustering-mod_cluster</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>execute-commands</goal>
                                </goals>
                                <configuration>
                                    <offline>true</offline>
                                    <scripts>
                                        <script>clustering-load-balancer.cli</script>
                                    </scripts>
                                    <jboss-home>${project.build.directory}/wildfly-clustering-mod_cluster</jboss-home>
                                    <stdout>${project.build.directory}/wildfly-clustering-mod_cluster-lb-plugin.log</stdout>
                                    <java-opts>${modular.jdk.args}</java-opts>
                                    <system-properties>
                                        <maven.repo.local>${settings.localRepository}</maven.repo.local>
                                        <module.path>${project.build.directory}/wildfly-clustering-mod_cluster/modules</module.path>
                                    </system-properties>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.config-as.configure-wildfly-clustering-ejb</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute-commands</goal>
                                </goals>
                                <configuration>
                                    <offline>true</offline>
                                    <scripts>
                                        <script>clustering-ha.cli</script>
                                    </scripts>
                                    <jboss-home>${project.build.directory}/wildfly-clustering-ejb</jboss-home>
                                    <stdout>${project.build.directory}/wildfly-ejb-xpc-plugin.log</stdout>
                                    <java-opts>${modular.jdk.args}</java-opts>
                                    <system-properties>
                                        <maven.repo.local>${settings.localRepository}</maven.repo.local>
                                        <module.path>${project.build.directory}/wildfly-clustering-ejb/modules</module.path>
                                    </system-properties>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.config-as.configure-wildfly-clustering-jpa-dist</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute-commands</goal>
                                </goals>
                                <configuration>
                                    <offline>true</offline>
                                    <scripts>
                                        <script>clustering-ha.cli</script>
                                    </scripts>
                                    <jboss-home>${project.build.directory}/wildfly-jpa-dist</jboss-home>
                                    <stdout>${project.build.directory}/wildfly-jpa-dist-plugin.log</stdout>
                                    <java-opts>${modular.jdk.args}</java-opts>
                                    <system-properties>
                                        <maven.repo.local>${settings.localRepository}</maven.repo.local>
                                        <module.path>${project.build.directory}/wildfly-jpa-dist/modules</module.path>
                                    </system-properties>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.config-as.configure-wildfly-clustering-jsf</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute-commands</goal>
                                </goals>
                                <configuration>
                                    <offline>true</offline>
                                    <scripts>
                                        <script>clustering-ha.cli</script>
                                    </scripts>
                                    <jboss-home>${project.build.directory}/wildfly-clustering-jsf</jboss-home>
                                    <stdout>${project.build.directory}/wildfly-clustering-jsf-plugin.log</stdout>
                                    <java-opts>${modular.jdk.args}</java-opts>
                                    <system-properties>
                                        <maven.repo.local>${settings.localRepository}</maven.repo.local>
                                        <module.path>${project.build.directory}/wildfly-clustering-jsf/modules</module.path>
                                    </system-properties>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.config-as.configure-wildfly-clustering-singleton-ha</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute-commands</goal>
                                </goals>
                                <configuration>
                                    <offline>true</offline>
                                    <scripts>
                                        <script>clustering-ha.cli</script>
                                    </scripts>
                                    <jboss-home>${project.build.directory}/wildfly-clustering-singleton-ha</jboss-home>
                                    <stdout>${project.build.directory}/wildfly-clustering-singleton-ha-plugin.log</stdout>
                                    <java-opts>${modular.jdk.args}</java-opts>
                                    <system-properties>
                                        <maven.repo.local>${settings.localRepository}</maven.repo.local>
                                        <module.path>${project.build.directory}/wildfly-clustering-singleton-ha/modules</module.path>
                                    </system-properties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Copy 4 containers based on the shared configuration and one load balancer profile -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions combine.children="append">
                            <execution>
                                <id>ts.config-as.clustering.mod_cluster</id>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <ant antfile="${basedir}/../src/test/scripts/clustering-build.xml">
                                            <target name="build-clustering"/>
                                            <property name="wildfly1" value="wildfly-clustering-mod_cluster-1"/>
                                            <property name="wildfly2" value="wildfly-clustering-mod_cluster-2"/>
                                            <property name="wildfly3" value="wildfly-clustering-mod_cluster-3"/>
                                            <property name="wildfly4" value="wildfly-clustering-mod_cluster-4"/>
                                            <property name="wildfly-original" value="wildfly-clustering-mod_cluster"/>
                                            <property name="wildfly-load-balancer1" value="wildfly-clustering-mod_cluster-load-balancer-1"/>
                                        </ant>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.config-as.clustering.ejb</id>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <ant antfile="${basedir}/../src/test/scripts/clustering-build.xml">
                                            <target name="build-clustering"/>
                                            <property name="wildfly1" value="wildfly-clustering-ejb-1"/>
                                            <property name="wildfly2" value="wildfly-clustering-ejb-2"/>
                                            <property name="wildfly3" value="wildfly-clustering-ejb-3"/>
                                            <property name="wildfly4" value="wildfly-clustering-ejb-4"/>
                                            <property name="wildfly-original" value="wildfly-clustering-ejb"/>
                                            <property name="wildfly-load-balancer1" value="wildfly-clustering-ejb-load-balancer-1"/>
                                        </ant>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.config-as.clustering.jpa-dist</id>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <ant antfile="${basedir}/../src/test/scripts/clustering-build.xml">
                                            <target name="build-clustering"/>
                                            <property name="wildfly1" value="wildfly-jpa-dist-1"/>
                                            <property name="wildfly2" value="wildfly-jpa-dist-2"/>
                                            <property name="wildfly3" value="wildfly-jpa-dist-3"/>
                                            <property name="wildfly4" value="wildfly-jpa-dist-4"/>
                                            <property name="wildfly-original" value="wildfly-jpa-dist"/>
                                            <property name="wildfly-load-balancer1" value="wildfly-jpa-dist-load-balancer-1"/>
                                        </ant>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.config-as.clustering.jsf</id>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <ant antfile="${basedir}/../src/test/scripts/clustering-build.xml">
                                            <target name="build-clustering"/>
                                            <property name="wildfly1" value="wildfly-clustering-jsf-1"/>
                                            <property name="wildfly2" value="wildfly-clustering-jsf-2"/>
                                            <property name="wildfly3" value="wildfly-clustering-jsf-3"/>
                                            <property name="wildfly4" value="wildfly-clustering-jsf-4"/>
                                            <property name="wildfly-original" value="wildfly-clustering-jsf"/>
                                            <property name="wildfly-load-balancer1" value="wildfly-clustering-jsf-load-balancer-1"/>
                                        </ant>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.config-as.clustering.singleton-ha</id>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <ant antfile="${basedir}/../src/test/scripts/clustering-build.xml">
                                            <target name="build-clustering"/>
                                            <property name="wildfly1" value="wildfly-clustering-singleton-ha-1"/>
                                            <property name="wildfly2" value="wildfly-clustering-singleton-ha-2"/>
                                            <property name="wildfly3" value="wildfly-clustering-singleton-ha-3"/>
                                            <property name="wildfly4" value="wildfly-clustering-singleton-ha-4"/>
                                            <property name="wildfly-original" value="wildfly-clustering-singleton-ha"/>
                                            <property name="wildfly-load-balancer1" value="wildfly-clustering-singleton-ha-load-balancer-1"/>
                                        </ant>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <!-- Override the standard module path that points at the shared module set from dist.
                                     Have all the servers use wildfly-1 for the modules -->
                                <module.path>${project.build.directory}/wildfly-1/modules${path.separator}${basedir}/target/modules</module.path>
                            </systemPropertyVariables>
                        </configuration>
                        <executions>
                            <!-- Disable the test executions that are not compatible with this profile. -->
                            <execution>
                                <id>ts.surefire.clustering.ha</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.fullha</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.ha-infinispan-server</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.byteman</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.single</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.single.manual</id>
                                <phase>none</phase>
                            </execution>
                            <!-- Run the ts.surefire.clustering.microprofile execution but exclude incompatible tests -->
                            <execution>
                                <id>ts.surefire.clustering.microprofile</id>
                                <!-- Turn on the execution that is configured outside this profile -->
                                <phase>test</phase>
                                <configuration>
                                    <systemPropertyVariables>
                                        <!-- Override the standard module path that points at the shared module set from dist.
                                        Have all the servers use wildfly-1 for the modules -->
                                        <module.path>${project.build.directory}/wildfly-1/modules${path.separator}${basedir}/target/modules</module.path>
                                        <!-- required by arquillian.xml -->
                                        <wildfly1>wildfly-1</wildfly1>
                                        <wildfly2>wildfly-2</wildfly2>
                                        <wildfly3>wildfly-3</wildfly3>
                                        <wildfly4>wildfly-4</wildfly4>
                                        <wildfly-load-balancer1>wildfly-load-balancer-1</wildfly-load-balancer1>
                                        <!-- end required by arquillian.xml -->
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.all.jpa2lc</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <!-- Parameters to test cases. -->
                                    <systemPropertyVariables>
                                        <!-- Override the standard module path that points at the shared module set from dist.
                                        Have all the servers use wildfly-jpa-dist-1 for the modules -->
                                        <module.path>${project.build.directory}/wildfly-jpa-dist-1/modules${path.separator}${basedir}/target/modules</module.path>
                                        <!-- required by arquillian.xml -->
                                        <wildfly1>wildfly-jpa-dist-1</wildfly1>
                                        <wildfly2>wildfly-jpa-dist-2</wildfly2>
                                        <wildfly3>wildfly-jpa-dist-3</wildfly3>
                                        <wildfly4>wildfly-jpa-dist-4</wildfly4>
                                        <wildfly-load-balancer1>wildfly-jpa-dist-load-balancer-1</wildfly-load-balancer1>
                                        <!-- end required by arquillian.xml -->
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.mod_cluster</id>
                                <!-- Disabled by default; other profiles turn it on -->
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>${test-group}/**/affinity/*TestCase.java</include>
                                        <include>${test-group}/**/modcluster/*TestCase.java</include>
                                    </includes>
                                    <systemPropertyVariables>
                                        <node0>${node0}</node0>
                                        <node1>${node1}</node1>
                                        <node2>${node2}</node2>
                                        <node3>${node3}</node3>
                                        <mcast>${mcast}</mcast>
                                        <mcast1>${mcast1}</mcast1>
                                        <mcast2>${mcast2}</mcast2>
                                        <mcast3>${mcast3}</mcast3>
                                        <arquillian.xml>arquillian.xml</arquillian.xml>
                                        <arquillian.launch>clustering-all</arquillian.launch>
                                        <jboss.server.config.file.name>standalone-ha.xml</jboss.server.config.file.name>
                                        <!-- Override ${server.jvm.arg} to only include ${jvm.args.ip} but *not* include ${jvm.args.ip.server} -->
                                        <server.jvm.args>${surefire.system.args} ${jvm.args.ip} ${jvm.args.other} ${jvm.args.timeouts} ${jvm.args.dirs} ${extra.server.jvm.args} -Dnode0=${node0} -Dnode1=${node1} -Dnode2=${node2} -Dnode3=${node3}</server.jvm.args>
                                        <infinispan.server.home>${infinispan.server.home.template}</infinispan.server.home>
                                        <infinispan.server.profile>${infinispan.server.profile.override}</infinispan.server.profile>
                                        <!-- Override the standard module path that points at the shared module set from dist.
                                        Have all the servers use wildfly-clustering-mod_cluster-1 for the modules -->
                                        <module.path>${project.build.directory}/wildfly-clustering-mod_cluster-1/modules${path.separator}${basedir}/target/modules</module.path>
                                        <!-- arquillian.xml -->
                                        <wildfly1>wildfly-clustering-mod_cluster-1</wildfly1>
                                        <wildfly2>wildfly-clustering-mod_cluster-2</wildfly2>
                                        <wildfly3>wildfly-clustering-mod_cluster-3</wildfly3>
                                        <wildfly4>wildfly-clustering-mod_cluster-4</wildfly4>
                                        <wildfly-load-balancer1>wildfly-clustering-mod_cluster-load-balancer-1</wildfly-load-balancer1>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.ejb</id>
                                <!-- Disabled by default; other profiles turn it on -->
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <!-- Tests to execute. -->
                                    <includes>
                                        <!-- EJB tests -->
                                        <include>${test-group}/**/ejb/**/*TestCase.java</include>
                                        <include>${test-group}/**/ejb2/**/*TestCase.java</include>
                                    </includes>
                                    <excludes>
                                        <exclude>${test-group}/**/byteman/*TestCase.java</exclude>
                                        <!-- TODO see why these aren't working and fix or exclude with a clear explanation.
                                             They might require legacy security but why isn't obvious -->
                                        <exclude>${test-group}/ejb/forwarding/*TestCase.java</exclude>
                                        <exclude>${test-group}/ejb/remote/GlobalAuthContextRemoteStatelessEJBFailoverTestCase.java</exclude>
                                        <exclude>${test-group}/ejb/remote/ThreadAuthContextRemoteStatelessEJBFailoverTestCase.java</exclude>
                                    </excludes>
                                    <!-- Parameters to test cases. -->
                                    <systemPropertyVariables>
                                        <node0>${node0}</node0>
                                        <node1>${node1}</node1>
                                        <node2>${node2}</node2>
                                        <node3>${node3}</node3>
                                        <mcast>${mcast}</mcast>
                                        <mcast1>${mcast1}</mcast1>
                                        <mcast2>${mcast2}</mcast2>
                                        <mcast3>${mcast3}</mcast3>
                                        <arquillian.xml>arquillian.xml</arquillian.xml>
                                        <arquillian.launch>clustering-all</arquillian.launch>
                                        <jboss.server.config.file.name>standalone-full-ha.xml</jboss.server.config.file.name>
                                        <!-- Override ${server.jvm.arg} to only include ${jvm.args.ip} but *not* include ${jvm.args.ip.server} -->
                                        <server.jvm.args>${surefire.system.args} ${jvm.args.ip} ${jvm.args.other} ${jvm.args.timeouts} ${jvm.args.dirs} ${extra.server.jvm.args} -Dnode0=${node0} -Dnode1=${node1} -Dnode2=${node2} -Dnode3=${node3}</server.jvm.args>
                                        <infinispan.server.home>${infinispan.server.home.template}</infinispan.server.home>
                                        <infinispan.server.profile>${infinispan.server.profile.override}</infinispan.server.profile>
                                        <!-- Override the standard module path that points at the shared module set from dist.
                                        Have all the servers use wildfly-clustering-ejb-1 for the modules -->
                                        <module.path>${project.build.directory}/wildfly-clustering-ejb-1/modules${path.separator}${basedir}/target/modules</module.path>
                                        <!-- required by arquillian.xml -->
                                        <wildfly1>wildfly-clustering-ejb-1</wildfly1>
                                        <wildfly2>wildfly-clustering-ejb-2</wildfly2>
                                        <wildfly3>wildfly-clustering-ejb-3</wildfly3>
                                        <wildfly4>wildfly-clustering-ejb-4</wildfly4>
                                        <wildfly-load-balancer1>wildfly-clustering-ejb-load-balancer-1</wildfly-load-balancer1>
                                        <!-- end required by arquillian.xml -->
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.jsf</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <!-- Parameters to test cases. -->
                                    <systemPropertyVariables>
                                        <!-- Override the standard module path that points at the shared module set from dist.
                                        Have all the servers use wildfly-clustering-jsf-1 for the modules -->
                                        <module.path>${project.build.directory}/wildfly-clustering-jsf-1/modules${path.separator}${basedir}/target/modules</module.path>
                                        <!-- required by arquillian.xml -->
                                        <wildfly1>wildfly-clustering-jsf-1</wildfly1>
                                        <wildfly2>wildfly-clustering-jsf-2</wildfly2>
                                        <wildfly3>wildfly-clustering-jsf-3</wildfly3>
                                        <wildfly4>wildfly-clustering-jsf-4</wildfly4>
                                        <wildfly-load-balancer1>wildfly-clustering-jsf-load-balancer-1</wildfly-load-balancer1>
                                        <!-- end required by arquillian.xml -->
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.singleton-ha</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <module.path>${project.build.directory}/wildfly-clustering-singleton-ha-1/modules${path.separator}${basedir}/target/modules</module.path>
                                        <wildfly1>wildfly-clustering-singleton-ha-1</wildfly1>
                                        <wildfly2>wildfly-clustering-singleton-ha-2</wildfly2>
                                        <wildfly3>wildfly-clustering-singleton-ha-3</wildfly3>
                                        <wildfly4>wildfly-clustering-singleton-ha-4</wildfly4>
                                        <wildfly-load-balancer1>wildfly-clustering-singleton-ha-load-balancer-1</wildfly-load-balancer1>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.web-passivation</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <wildfly1>wildfly-web-passivation</wildfly1>
                                        <module.path>${project.build.directory}/wildfly-web-passivation/modules</module.path>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.singleton-local</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <wildfly1>wildfly-singleton-local</wildfly1>
                                        <module.path>${project.build.directory}/wildfly-singleton-local/modules</module.path>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Test against standalone-microprofile-ha.xml instead of standalone-full-ha.xml -->
        <profile>
            <id>standalone.microprofile.profile</id>
            <activation>
                <property>
                    <name>ts.standalone.microprofile</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Update server profile with shared configuration changes.
                         Override the default ts.config-as.configure-wildfly execution
                         to run the clustering-microprofile-ha.cli script -->
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>${version.org.wildfly.plugin}</version>
                        <executions>
                            <execution>
                                <id>ts.config-as.configure-wildfly</id>
                                <configuration>
                                    <scripts>
                                        <script>clustering-microprofile-ha.cli</script>
                                    </scripts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Copy 4 containers based on the shared configuration and one load balancer profile -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions combine.children="append">
                            <!-- Turn off the standard execution -->
                            <execution>
                                <id>ts.config-as.clustering</id>
                                <phase>none</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>ts.config-as.clustering.mp-dist</id>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <ant antfile="${basedir}/../src/test/scripts/clustering-build.xml">
                                            <target name="build-clustering"/>
                                            <property name="wildfly1" value="wildfly-mp-dist-1"/>
                                            <property name="wildfly2" value="wildfly-mp-dist-2"/>
                                            <property name="wildfly3" value="wildfly-mp-dist-3"/>
                                            <property name="wildfly4" value="wildfly-mp-dist-4"/>
                                            <property name="wildfly-load-balancer1" value="wildfly-mp-dist-load-balancer-1"/>
                                        </ant>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <!-- Disable the test executions that are not compatible with this profile. -->
                            <execution>
                                <id>ts.surefire.clustering.ha</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.fullha</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.ha-infinispan-server</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.byteman</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.single</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.single.manual</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.single.testable</id>
                                <phase>none</phase>
                            </execution>
                            <!-- Tests against the standalone-microprofile-ha.xml config -->
                            <execution>
                                <id>ts.surefire.clustering.microprofile</id>
                                <!-- Turn on the execution that is configured outside this profile -->
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <!-- required by arquillian.xml -->
                                        <wildfly1>wildfly-mp-dist-1</wildfly1>
                                        <wildfly2>wildfly-mp-dist-2</wildfly2>
                                        <wildfly3>wildfly-mp-dist-3</wildfly3>
                                        <wildfly4>wildfly-mp-dist-4</wildfly4>
                                        <wildfly-load-balancer1>wildfly-mp-dist-load-balancer-1</wildfly-load-balancer1>
                                        <jboss.server.config.file.name>standalone-microprofile-ha.xml</jboss.server.config.file.name>
                                        <!-- end required by arquillian.xml -->
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.all.jpa2lc</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <!-- Parameters to test cases. -->
                                    <systemPropertyVariables>
                                        <!-- required by arquillian.xml -->
                                        <wildfly1>wildfly-mp-dist-1</wildfly1>
                                        <wildfly2>wildfly-mp-dist-2</wildfly2>
                                        <wildfly3>wildfly-mp-dist-3</wildfly3>
                                        <wildfly4>wildfly-mp-dist-4</wildfly4>
                                        <wildfly-load-balancer1>wildfly-mp-dist-load-balancer-1</wildfly-load-balancer1>
                                        <jboss.server.config.file.name>standalone-microprofile-ha.xml</jboss.server.config.file.name>
                                        <!-- end required by arquillian.xml -->
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Test against bootable jar -->
        <profile>
            <id>bootablejar.profile</id>
            <activation>
                <property>
                    <name>ts.bootable</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-bootable</artifactId>
                </dependency>
            </dependencies>
            <properties>
                <bootable-jar-cloud-profile-packaging.phase>process-test-resources</bootable-jar-cloud-profile-packaging.phase>
                <bootable-jar-jpa-distributed-packaging.phase>process-test-resources</bootable-jar-jpa-distributed-packaging.phase>
                <bootable-jar-load-balancer-packaging.phase>process-test-resources</bootable-jar-load-balancer-packaging.phase>
                <bootable-jar-configure-windows-paths.phase>generate-test-sources</bootable-jar-configure-windows-paths.phase>
                <extra.server.jvm.args>-Dmaven.repo.local=${settings.localRepository}</extra.server.jvm.args>
            </properties>
            <build>
                <plugins>
                    <!-- Disable the standard copy-based provisioning -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>ts.copy-wildfly</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Disable the standard configurations -->
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>${version.org.wildfly.plugin}</version>
                        <executions>
                            <execution>
                                <id>ts.config-as.configure-lb</id>
                                <phase>none</phase>
                                <goals>
                                    <goal>execute-commands</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>ts.config-as.configure-wildfly</id>
                                <phase>none</phase>
                                <goals>
                                    <goal>execute-commands</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Disable copying the generated resources into server directories -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions combine.children="append">
                            <execution>
                                <id>ts.config-as.clustering</id>
                                <phase>none</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <!-- Disable the test executions that are not compatible with this profile. -->
                            <execution>
                                <id>default-test</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.ha</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.fullha</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.ha-infinispan-server</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.byteman</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.single</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.single.manual</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.single.testable</id>
                                <phase>none</phase>
                            </execution>
                            <!-- Run the ts.surefire.clustering.microprofile execution but exclude incompatible tests -->
                            <execution>
                                <id>ts.surefire.clustering.microprofile</id>
                                <!-- Turn on the execution that is configured outside this profile -->
                                <phase>test</phase>
                                <configuration>
                                    <systemPropertyVariables>
                                        <install.dir.1>${project.build.directory}/wildfly-1</install.dir.1>
                                        <install.dir.2>${project.build.directory}/wildfly-2</install.dir.2>
                                        <install.dir.3>${project.build.directory}/wildfly-3</install.dir.3>
                                        <install.dir.4>${project.build.directory}/wildfly-4</install.dir.4>
                                        <install.dir.load.balancer>${project.build.directory}/wildfly-load-balancer-1</install.dir.load.balancer>
                                        <bootable.jar>${project.build.directory}/test-wildfly-cloud-profile.jar</bootable.jar>
                                        <bootable.jar.load.balancer>${project.build.directory}/test-wildfly-cloud-profile-load-balancer.jar</bootable.jar.load.balancer>
                                        <arquillian.xml>arquillian-bootable.xml</arquillian.xml>
                                    </systemPropertyVariables>
                                    <classpathDependencyExcludes>
                                        <classpathDependencyExclude>
                                            org.wildfly.arquillian:wildfly-arquillian-container-managed
                                        </classpathDependencyExclude>
                                    </classpathDependencyExcludes>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.all.jpa2lc</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <install.dir.1>${project.build.directory}/wildfly-jpa-dist-1</install.dir.1>
                                        <install.dir.2>${project.build.directory}/wildfly-jpa-dist-2</install.dir.2>
                                        <install.dir.3>${project.build.directory}/wildfly-jpa-dist-3</install.dir.3>
                                        <install.dir.4>${project.build.directory}/wildfly-jpa-dist-4</install.dir.4>
                                        <install.dir.load.balancer>${project.build.directory}/wildfly-jpa-dist-load-balancer-1</install.dir.load.balancer>
                                        <bootable.jar>${project.build.directory}/test-wildfly-jpa-distributed.jar</bootable.jar>
                                        <bootable.jar.load.balancer>${project.build.directory}/test-wildfly-cloud-profile-load-balancer.jar</bootable.jar.load.balancer>
                                        <arquillian.xml>arquillian-bootable.xml</arquillian.xml>
                                    </systemPropertyVariables>
                                    <classpathDependencyExcludes>
                                        <classpathDependencyExclude>
                                            org.wildfly.arquillian:wildfly-arquillian-container-managed
                                        </classpathDependencyExclude>
                                    </classpathDependencyExcludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Test against bootable jar -->
        <profile>
            <id>bootablejar.ee9.profile</id>
            <activation>
                <property>
                    <name>DISABLED.ts.bootable.ee9</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-bootable</artifactId>
                </dependency>
            </dependencies>
            <properties>
                <bootable-jar-cloud-profile-packaging.phase>process-test-resources</bootable-jar-cloud-profile-packaging.phase>
                <bootable-jar-jpa-distributed-packaging.phase>process-test-resources</bootable-jar-jpa-distributed-packaging.phase>
                <bootable-jar-load-balancer-packaging.phase>process-test-resources</bootable-jar-load-balancer-packaging.phase>
                <bootable-jar-configure-windows-paths.phase>generate-test-sources</bootable-jar-configure-windows-paths.phase>
                <extra.server.jvm.args>-Dmaven.repo.local=${settings.localRepository}</extra.server.jvm.args>
            </properties>
            <build>
                <plugins>
                    <!-- Disable the standard copy-based provisioning -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>ts.copy-wildfly</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Disable the standard configurations -->
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>${version.org.wildfly.plugin}</version>
                        <executions>
                            <execution>
                                <id>ts.config-as.configure-lb</id>
                                <phase>none</phase>
                                <goals>
                                    <goal>execute-commands</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>ts.config-as.configure-wildfly</id>
                                <phase>none</phase>
                                <goals>
                                    <goal>execute-commands</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Disable copying the generated resources into server directories -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions combine.children="append">
                            <execution>
                                <id>ts.config-as.clustering</id>
                                <phase>none</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <!-- Disable the test executions that are not compatible with this profile. -->
                            <execution>
                                <id>ts.surefire.clustering.ha</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.fullha</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.ha-infinispan-server</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.byteman</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.single</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.single.manual</id>
                                <phase>none</phase>
                            </execution>
                            <!-- Run the ts.surefire.clustering.microprofile execution but exclude incompatible tests -->
                            <execution>
                                <id>ts.surefire.clustering.microprofile</id>
                                <!-- Turn on the execution that is configured outside this profile -->
                                <phase>test</phase>
                                <configuration>
                                    <systemPropertyVariables>
                                        <install.dir.1>${project.build.directory}/wildfly-1</install.dir.1>
                                        <install.dir.2>${project.build.directory}/wildfly-2</install.dir.2>
                                        <install.dir.3>${project.build.directory}/wildfly-3</install.dir.3>
                                        <install.dir.4>${project.build.directory}/wildfly-4</install.dir.4>
                                        <install.dir.load.balancer>${project.build.directory}/wildfly-load-balancer-1</install.dir.load.balancer>
                                        <bootable.jar>${project.build.directory}/test-wildfly-cloud-profile.jar</bootable.jar>
                                        <bootable.jar.load.balancer>${project.build.directory}/test-wildfly-cloud-profile-load-balancer.jar</bootable.jar.load.balancer>
                                        <arquillian.xml>arquillian-bootable.xml</arquillian.xml>
                                    </systemPropertyVariables>
                                    <classpathDependencyExcludes>
                                        <classpathDependencyExclude>
                                            org.wildfly.arquillian:wildfly-arquillian-container-managed
                                        </classpathDependencyExclude>
                                    </classpathDependencyExcludes>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.all.jpa2lc</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <install.dir.1>${project.build.directory}/wildfly-jpa-dist-1</install.dir.1>
                                        <install.dir.2>${project.build.directory}/wildfly-jpa-dist-2</install.dir.2>
                                        <install.dir.3>${project.build.directory}/wildfly-jpa-dist-3</install.dir.3>
                                        <install.dir.4>${project.build.directory}/wildfly-jpa-dist-4</install.dir.4>
                                        <install.dir.load.balancer>${project.build.directory}/wildfly-jpa-dist-load-balancer-1</install.dir.load.balancer>
                                        <bootable.jar>${project.build.directory}/test-wildfly-jpa-distributed.jar</bootable.jar>
                                        <bootable.jar.load.balancer>${project.build.directory}/test-wildfly-cloud-profile-load-balancer.jar</bootable.jar.load.balancer>
                                        <arquillian.xml>arquillian-bootable.xml</arquillian.xml>
                                    </systemPropertyVariables>
                                    <classpathDependencyExcludes>
                                        <classpathDependencyExclude>
                                            org.wildfly.arquillian:wildfly-arquillian-container-managed
                                        </classpathDependencyExclude>
                                    </classpathDependencyExcludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- Test against EE 9 dist -->
        <profile>
            <id>ee9.profile</id>
            <activation>
                <property>
                    <name>DISABLED.ts.ee9</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>ts.surefire.clustering.ha</id>
                                <!--<phase>none</phase>-->
                                <configuration>
                                    <excludes>
                                        <!-- This next section is a duplication of the usual excludes from the ts.clustering.cluster.ha.profile.
                                             TODO figure out how to avoid this -->
                                        <exclude>${test-group}/**/ejb/stateful/*TestCase.java</exclude>
                                        <exclude>${test-group}/**/group/*TestCase.java</exclude>
                                        <exclude>${test-group}/**/infinispan/embedded/*TestCase.java</exclude>
                                        <exclude>${test-group}/**/infinispan/remote/*TestCase.java</exclude>
                                        <exclude>${test-group}/**/jms/*TestCase.java</exclude>
                                        <exclude>${test-group}/**/web/remote/*TestCase.java</exclude>
                                        <exclude>${test-group}/**/sso/remote/*TestCase.java</exclude>
                                        <!-- These are run by ts.clustering.cluster.byteman.profile -->
                                        <exclude>${test-group}/**/byteman/*TestCase.java</exclude>
                                        <exclude>%regex[${test-group}/(${ts.surefire.clustering.ha.additionalExcludes})/.*TestCase.class]</exclude>

                                        <!-- TODO see why these aren't working and fix or exclude with a clear explanation -->
                                        <exclude>${test-group}/ejb/remote/GlobalAuthContextRemoteStatelessEJBFailoverTestCase.java</exclude>
                                        <exclude>${test-group}/ejb/remote/ThreadAuthContextRemoteStatelessEJBFailoverTestCase.java</exclude>
                                        <exclude>${test-group}/jsf/**</exclude> <!-- test hard-codes javax package; need to parameterize -->
                                    </excludes>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ts.surefire.clustering.fullha</id>
                                <!--<phase>none</phase>-->
                                <configuration>
                                    <excludes>
                                        <!-- Requires the /subsystem=messaging-activemq/server=default to exist for its setup tasks -->
                                        <exclude>${test-group}/jms/ClusteredMessagingTestCase.java</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
</project>
