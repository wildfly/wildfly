/*
 * JBoss, Home of Professional Open Source
 * Copyright 2005-2010, Red Hat, and individual contributors
 * as indicated by the @author tags.
 * See the copyright.txt in the distribution for a full listing
 * of individual contributors.
 * This copyrighted material is made available to anyone wishing to use,
 * modify, copy, or redistribute it subject to the terms and conditions
 * of the GNU Lesser General Public License, v. 2.1.
 * This program is distributed in the hope that it will be useful, but WITHOUT A
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 * You should have received a copy of the GNU Lesser General Public License,
 * v.2.1 along with this distribution; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA  02110-1301, USA.
 *
 * @author JBoss Inc.
 */
/*
 * RestaurantManager.java
 *
 * Copyright (c) 2003 Arjuna Technologies Ltd.
 *
 * $Id: RestaurantManager.java,v 1.3 2004/04/21 13:09:18 jhalliday Exp $
 *
 */
package org.jboss.as.test.xts.simple.wsat.jaxws;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import java.net.MalformedURLException;
import java.net.URL;
import org.jboss.logging.Logger;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.6 in JDK 6 Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "RestaurantServiceATService", targetNamespace = "http://www.jboss.com/jbossas/test/xts/simple/wsat/Restaurant")
public class RestaurantServiceATService extends Service {

    private final static URL RESTAURANTSERVICEATSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(RestaurantServiceATService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = RestaurantServiceATService.class.getResource(".");
            url = new URL(baseUrl, "RestaurantServiceAT.wsdl");
        } catch (MalformedURLException e) {
            logger.warn("Failed to create URL for the wsdl Location: 'RestaurantServiceAT.wsdl', retrying as a local file");
            logger.warn(e.getMessage());
        }
        RESTAURANTSERVICEATSERVICE_WSDL_LOCATION = url;
    }

    public RestaurantServiceATService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RestaurantServiceATService() {
        super(RESTAURANTSERVICEATSERVICE_WSDL_LOCATION, new QName(
                "http://www.jboss.com/jbossas/test/xts/simple/wsat/Restaurant", "RestaurantServiceATService"));
    }

    /**
     * 
     * @return returns RestaurantServiceAT
     */
    @WebEndpoint(name = "RestaurantServiceAT")
    public RestaurantServiceAT getRestaurantServiceAT() {
        return super.getPort(
                new QName("http://www.jboss.com/jbossas/test/xts/simple/wsat/Restaurant", "RestaurantServiceAT"),
                RestaurantServiceAT.class);
    }

    /**
     * 
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in the
     *        <code>features</code> parameter will have their default values.
     * @return returns RestaurantServiceAT
     */
    @WebEndpoint(name = "RestaurantServiceAT")
    public RestaurantServiceAT getRestaurantServiceAT(WebServiceFeature... features) {
        return super.getPort(
                new QName("http://www.jboss.com/jbossas/test/xts/simple/wsat/Restaurant", "RestaurantServiceAT"),
                RestaurantServiceAT.class, features);
    }

}
