core.management=The management services used to control a server or a host's host controller.
core.management.access=Model representation for configuration affecting access control and auditing of access.
core.management.access.audit=The model representing the auditing configuration.
core.management.security-realm=A security realm that can be associated with a management interface and used to control access to the management services.
core.management.ldap-connection=A connection factory that can be used by a security realm to access an LDAP server as a source of authentication and authorization information.
core.management.management-interface=Interfaces exposed by the management services to allow external callers to perform management tasks.

core.management.access-control.is-caller-in-role=Test if the current caller is a member of the role.

core.access-control=The access control definitions defining the access management restrictions.
core.access-control.provider=The provider to use for management access control decisions.
core.access-control.constraint=Access constraints for the vault expressions sensitivity, sensitivity classifications and the application resources.
core.access-control.permission-combination-policy=The policy for combining access control permissions when the authorization policy grants the user more than one type of permission for a given action. In the standard role based authorization policy, this would occur when a user maps to multiple roles. The 'permissive' policy means if any of the permissions allow the action, the action is allowed. The 'rejecting' policy means the existence of multiple permissions should result in an error.
core.access-control.standard-role-names=The official names of the standard roles supported by the current management access control provider.
core.access-control.standard-role-names.role=The official names of a standard role supported by the current management access control provider.
core.access-control.all-role-names=The official names of all roles supported by the current management access control provider. This includes any standard roles as well as any user-defined roles.
core.access-control.all-role-names.role=The official names of a role supported by the current management access control provider.

core.access-constraint.application-classification=The application classification constraints.
core.access-constraint.vault-expression=Sensitivity classification of vault expressions.
core.access-control.constraint.application-classification=Configuration of the application classification constraints.
core.access-control.constraint.application-classification.type=The named application classifications grouped by the constraint's subsystem, or 'core' if it comes from the core model.
core.access-control.constraint.application-classification-config=Configuration of an application classification constraint.
core.access-control.constraint.application-classification-config.configured-application=Set to override the default as to whether the constraint is considered an application resource.
core.access-control.constraint.application-classification-config.default-application=Whether targets having this application type constraint are considered application resources.
core.access-control.constraint.application-classification-config.applies-to=Information about the resources, attributes and operations to which this application classification constraint applies.
core.access-control.constraint.application-classification-type=The application classification constraints by type. Type is either 'core' or the name of a subsystem.
core.access-control.constraint.application-classification-type.classification=The application classification constraints by type.

core.access-control.constraint.sensitivity-classification=The sensitivity classification constraints.
core.access-control.constraint.sensitivity-classification.type=The named application classifications grouped by the constraint's subsystem, or 'core' if it comes from the core model.
core.access-control.constraint.sensitivity-classification-config=Configuration of a sensitivity constraint.
core.access-control.constraint.sensitivity-classification-config.configured-requires-addressable=Set to override the default as to whether the visibility of resources annotated with this sensitivity constraint should be considered sensitive.
core.access-control.constraint.sensitivity-classification-config.configured-requires-read=Set to override the default as to whether reading attributes annotated with this sensitivity constraint should be considered sensitive.
core.access-control.constraint.sensitivity-classification-config.configured-requires-write=Set to override the default as to whether writing attributes annotated with this sensitivity constraint should be considered sensitive.
core.access-control.constraint.sensitivity-classification-config.default-requires-addressable=Whether the visibility of resources annotated with this sensitivity constraint should be considered sensitive.
core.access-control.constraint.sensitivity-classification-config.default-requires-read=Whether reading attributes annotated with this sensitivity constraint should be considered sensitive.
core.access-control.constraint.sensitivity-classification-config.default-requires-write=Whether writing attributes annotated with this sensitivity constraint should be considered sensitive.
core.access-control.constraint.sensitivity-classification-config.applies-to=Information about the resources, attributes and operations to which this sensitivity classification constraint applies.
core.access-control.constraint.sensitivity-classification-type=The sensitivity classifications by type. Type is either 'core' or the name of a subsystem.
core.access-control.constraint.sensitivity-classification-type.classification=The sensitivity classifications by type


core.access-control.constraint.applies-to=Information about the resources, attributes and operations to which an access control constraint applies.
core.access-control.constraint.applies-to.address=Address pattern describing a resource or resources to which the constraint applies.
core.access-control.constraint.applies-to.entire-resource=True if the constraint applies to the resource as a whole; false if it only applies to one or more attributes or operations.
core.access-control.constraint.applies-to.attributes=List of the names of attributes to which the constraint specifically applies.
core.access-control.constraint.applies-to.attributes.attribute=The names of an attribute to which the constraint specifically applies.
core.access-control.constraint.applies-to.operations=List of the names of operations to which the constraint specifically applies.
core.access-control.constraint.applies-to.operations.operation=The name of an operation to which the constraint specifically applies.

core.access-control.constraint.vault-expression-sensitivity=Configuration of whether vault expressions should be considered sensitive.
core.access-control.constraint.vault-expression-sensitivity.configured-requires-addressable=Set to override the default as to whether the visibility of resources containing vault expressions should be considered sensitive.
core.access-control.constraint.vault-expression-sensitivity.configured-requires-read=Set to override the default as to whether reading attributes containing vault expressions should be considered sensitive.
core.access-control.constraint.vault-expression-sensitivity.configured-requires-write=Set to override the default as to whether writing attributes containing vault expressions should be considered sensitive.
core.access-control.constraint.vault-expression-sensitivity.default-requires-addressable=Whether the visibility of resources containing vault expressions should be considered sensitive.
core.access-control.constraint.vault-expression-sensitivity.default-requires-read=Whether reading attributes containing vault expressions should be considered sensitive.
core.access-control.constraint.vault-expression-sensitivity.default-requires-write=Whether writing attributes containing vault expressions should be considered sensitive.

core.access-control.host-scoped-roles=Domain-wide host scoped roles to which this host should be added as a valid host
core.access-control.host-scoped-roles.role=A host scoped roles to which this host should be added as a valid host

core.access-control.server-group-scoped-role=Administrative roles that are based on standard roles but are constrained to a particular set of managed domain server groups
core.access-control.server-group-scoped-role.base-role=The standard role upon which the server-group-scoped-role is based
core.access-control.server-group-scoped-role.server-groups=The list of names server groups to which this users in this role are constrained
core.access-control.server-group-scoped-role.server-groups.server-group=A server group to which the user in this role is constrained
core.access-control.server-group-scoped-role.add=Adds a new server-group-scoped-role
core.access-control.server-group-scoped-role.remove=Removes a server-group-scoped-role

core.access-control.host-scoped-role=Administrative roles that are based on standard roles but are constrained to a particular set of managed domain hosts
core.access-control.host-scoped-role.base-role=The standard role upon which the host-scoped-role is based
core.access-control.host-scoped-role.hosts=The list of names hosts to which this users in this role are constrained
core.access-control.host-scoped-role.hosts.host=A host to which the user in this role is constrained
core.access-control.host-scoped-role.add=Adds a new host-scoped-role
core.access-control.host-scoped-role.remove=Removes a host-scoped-role

core.access-control.role-mapping=A mapping of users and groups to a specific role.
core.access-control.role-mapping.add=Add a new role mapping definition.
core.access-control.role-mapping.remove=Remove an existing role mapping definition.
core.access-control.role-mapping.include-all=Configure if all authenticated users should be automatically assigned this role.
core.access-control.role-mapping.exclude=Principals to be excluded from a role.
core.access-control.role-mapping.include=Principals to be inlcuded in a role.

core.access-control.role-mapping.principal=An individual principal used within a role mapping.
core.access-control.role-mapping.principal.add=Add a new principal to role mapping.
core.access-control.role-mapping.principal.remove=Remove an existing principal to role mapping.
core.access-control.role-mapping.principal.type=The type of the Principal being mapped, either 'group' or 'user'.
core.access-control.role-mapping.principal.realm=An optional attribute to map based on the realm used for authentication.
core.access-control.role-mapping.principal.name=The name of the user or group being mapped.

# Management
core.management.audit-log=The management audit logging top-level resource.
core.management.audit-log.add=Adds the management audit top-level resource.
core.management.audit-log.remove=Removes the management audit top-level resource.
core.management.audit-log.logger=The management audit logging service.
core.management.audit-log.logger.add=Adds the management audit logging service.
core.management.audit-log.logger.remove=Removes the management audit logging service.
core.management.audit-log.server-logger=The management audit logging service for use on the managed servers.
core.management.audit-log.server-logger.add=Adds the management audit logging service for use on the managed servers.
core.management.audit-log.server-logger.remove=Removes the management audit logging service for use on the managed servers.
core.management.audit-log.log-boot=Whether operations should be logged on server boot.
core.management.audit-log.log-read-only=Whether operations that do not modify the configuration or any runtime services should be logged.
core.management.audit-log.enabled=Whether audit logging is enabled.
core.management.audit-log.handler=References to file or syslog audit log appenders.
core.management.audit-log.handler-reference=A reference to a file or syslog audit log handler. The name of the handler is denoted by the value of the address.
core.management.audit-log.handler-reference.add=Adds a reference to a file or syslog audit log handler.
core.management.audit-log.handler-reference.remove=Removes a reference to a file or syslog audit log handler.
core.management.audit-log.json-formatter=Formatters for formatting the audit log messages using json.
core.management.audit-log.file-handler=File handlers for use with the management audit logging service.
core.management.audit-log.syslog-handler=Syslog handlers for use with the management audit logging service.
core.management.file-handler=A file handler for use with the management audit logging service.
core.management.file-handler.add=Adds an audit log file handler.
core.management.file-handler.remove=Removes an audit log file handler.
core.management.file-handler.disabled-due-to-failure=Whether this handler has been disabled due to logging failures.
core.management.file-handler.failure-count=The number of logging failures since the handler was initialized.
core.management.file-handler.formatter=The formatter used to format the log messages.
core.management.file-handler.max-failure-count=The maximum number of logging failures before disabling this handler.
core.management.file-handler.path=The path of the audit log file.
core.management.file-handler.recycle=Resets the file handler failure count, and backs up the current log file.
core.management.file-handler.relative-to=The name of another previously named path, or of one of the standard paths provided by the system. If 'relative-to' is provided, the value of the 'path' attribute is treated as relative to the path specified by this attribute.
core.management.file-handler.server-path=The overridden 'path' of the audit log file to be used setting up the handler for managed servers.
core.management.file-handler.server-relative-to=The overridden 'relative-to' of the audit log file to be used setting up the handler for managed servers. The name of another previously named path, or of one of the standard paths provided by the system. If 'relative-to' is provided, the value of the 'path' attribute is treated as relative to the path specified by this attribute.
core.management.json-formatter=A json formatter for audit log messages.
core.management.json-formatter.add=Adds a json formatter for the audit logging.
core.management.json-formatter.remove=Removes a json formatter for the audit logging.
core.management.json-formatter.compact=If true will format the JSON on one line. There may still be values containing new lines, so if having the whole record on one line is important, set escape-new-line or escape-control-characters to true.
core.management.json-formatter.date-format=The date format to use as understood by {@link java.text.SimpleDateFormat}. Will be ignored if include-date="false".
core.management.json-formatter.date-separator=The separator between the date and the rest of the formatted log message. Will be ignored if include-date="false".
core.management.json-formatter.escape-control-characters=If true will escape all control characters (ascii entries with a decimal value < 32) with the ascii code in octal, e.g.'\n\ becomes '#012'. If this is true, it will override escape-new-line="false".
core.management.json-formatter.escape-new-line=If true will escape all new lines with the ascii code in octal, e.g. "#012".
core.management.json-formatter.include-date=Whether or not to include the date in the formatted log record.
core.management.syslog-handler=A syslog handler for use with the management audit logging service.
core.management.syslog-handler.add=Adds an audit log syslog handler.
core.management.syslog-handler.remove=Removes an audit log syslog handler.
core.management.syslog-handler.app-name=The application name to add to the syslog records as defined in section 6.2.5 of RFC-5424. If not specified it will default to the name of the product.
core.management.syslog-handler.disabled-due-to-failure=Whether this handler has been disabled due to logging failures.
core.management.syslog-handler.failure-count=The number of logging failures since the handler was initialized.
core.management.syslog-handler.facility=The facility to use for syslog logging as defined in section 6.2.1 of RFC-5424, and section 4.1.1 of RFC-3164.
core.management.syslog-handler.formatter=The formatter used to format the log messages.
core.management.syslog-handler.max-failure-count=The maximum number of logging failures before disabling this handler.
core.management.syslog-handler.max-length=The maximum length in bytes a log message, including the header, is allowed to be. If undefined, it will default to 1024 bytes if the syslog-format is RFC3164, or 2048 bytes if the syslog-format is RFC5424.
core.management.syslog-handler.truncate=Whether or not a message, including the header, should truncate the message if the length in bytes is greater than the maximum length. If set to false messages will be split and sent with the same header values.
core.management.syslog-handler.syslog-format=Whether to set the syslog format to the one specified in RFC-5424 or RFC-3164.
core.management.syslog-handler.protocol=The protocol to use for the syslog handler. Must be one and only one of 'udp', 'tcp' or 'tls'.
core.management.syslog-handler.recycle=Resets the syslog handler failure count, disconnects and reconnects to the syslog server.
core.management.syslog-client-cert-store=Configuration for the keystore containing the client certificate if the syslog server requires authentication.
core.management.syslog-client-cert-store.add=Adds the keystore configuration.
core.management.syslog-client-cert-store.remove=Removes the keystore configuration.
core.management.syslog-client-cert-store.key-password=The password for the keystore key.
core.management.syslog-client-cert-store.keystore-password=The password for the keystore.
core.management.syslog-client-cert-store.keystore-path==The path of the keystore.
core.management.syslog-client-cert-store.keystore-relative-to=The name of another previously named path, or of one of the standard paths provided by the system. If 'keystore-relative-to' is provided, the value of the 'keystore-path' attribute is treated as relative to the path specified by this attribute.
core.management.syslog-client-cert-store.server-keystore-path=The overridden 'keystore-path' of the audit log file to be used setting up the handler for managed servers.
core.management.syslog-client-cert-store.server-keystore-relative-to=The overridden 'keystore-relative-to' of the audit log file to be used setting up the handler for managed servers. The name of another previously named path, or of one of the standard paths provided by the system. If 'keystore-relative-to' is provided, the value of the 'keystore-path' attribute is treated as relative to the path specified by this attribute.
core.management.syslog-truststore=Configuration for the truststore for the server certificate, if not signed by an authority.
core.management.syslog-truststore.add=Adds the truststore configuration.
core.management.syslog-truststore.remove=Removes the truststore configuration.
core.management.syslog-truststore.key-password=The password for the truststore key.
core.management.syslog-truststore.keystore-password=The password for the truststore.
core.management.syslog-truststore.keystore-path==The path of the truststore.
core.management.syslog-truststore.keystore-relative-to=The name of another previously named path, or of one of the standard paths provided by the system. If 'keystore-relative-to' is provided, the value of the 'keystore-path' attribute is treated as relative to the path specified by this attribute.
core.management.syslog-truststore.server-keystore-path=The overridden 'keystore-path' of the audit log file to be used setting up the handler for managed servers.
core.management.syslog-truststore.server-keystore-relative-to=The overridden 'keystore-relative-to' of the audit log file to be used setting up the handler for managed servers. The name of another previously named path, or of one of the standard paths provided by the system. If 'keystore-relative-to' is provided, the value of the 'keystore-path' attribute is treated as relative to the path specified by this attribute.
core.management.syslog-udp=Configuration to append to syslog over udp/ip.
core.management.syslog-udp.add=Add the syslog udp protocol.
core.management.syslog-udp.remove=Remove the syslog udp protocol.
core.management.syslog-udp.host=The host of the syslog server for the udp requests.
core.management.syslog-udp.port=The port of the syslog server for the udp requests.
core.management.syslog-tcp=Configuration to append to syslog over tcp/ip.
core.management.syslog-tcp.add=Add the syslog tcp protocol.
core.management.syslog-tcp.remove=Remove the syslog tcp protocol.
core.management.syslog-tcp.host=The host of the syslog server for the tcp requests.
core.management.syslog-tcp.message-transfer=The message transfer setting as described in section 3.4 of RFC-6587. This can either be OCTET_COUNTING as described in section 3.4.1 of RFC-6587, or NON_TRANSPARENT_FRAMING as described in section 3.4.1 of RFC-6587. See your syslog provider's documentation for what is supported.
core.management.syslog-tcp.port=The port of the syslog server for the tcp requests.
core.management.syslog-tls.add=Add the syslog tls over tcp/ip protocol.
core.management.syslog-tls.remove=Remove the syslog tls over tcp/ip protocol.
core.management.syslog-tls=Configuration to append to syslog over tls over tcp/ip.
core.management.syslog-tls.host=The host of the syslog server for the tls over tcp requests.
core.management.syslog-tls.message-transfer=The message transfer setting as described in section 3.4 of RFC-6587. This can either be OCTET_COUNTING as described in section 3.4.1 of RFC-6587, or NON_TRANSPARENT_FRAMING as described in section 3.4.1 of RFC-6587. See your syslog provider's documentation for what is supported.
core.management.syslog-tls.port=The port of the syslog server for the tls over tcp requests.
core.management.syslog-tls.authentication=Configuration for the truststore for the server certificate if not signed by an authority, and the keystore containing the client certificate if the syslog server is set up to require client authentication.
