infinispan=Die Konfiguration des infinispan-Untersystems
infinispan.add=infinispan-Untersystem hinzuf\u00FCgen
infinispan.describe=Beschreiben Sie das infinispan-Untersystem
infinispan.remove=Entfernen Sie das infinispan-Untersystem
infinispan.default-cache-container=Der standardm\u00E4\u00DFige infinispan Cache-Container-Name
infinispan.container=Die Konfiguration eines infinispan Cache-Containers
infinispan.container.default-cache=Das Standard infinispan-Cache
infinispan.container.add=F\u00FCgen Sie dem infinispan-Untersystem einen Cache-Container hinzu 
infinispan.container.remove=Entfernen Sie einen Cache-Container vom infinispan-Untersystem 
infinispan.container.listener-executor=Der f\u00FCr die Replikationswarteschlange verwendete Executor 
infinispan.container.eviction-executor=Der f\u00FCr die Eviction terminierte Executor 
infinispan.container.replication-queue-executor=Der f\u00FCr asynchrone Cache-Operationen verwendete Executor
infinispan.container.jndi-name=Der jndi-Name, an den dieser Cache-Container gebunden werden soll.
infinispan.container.start=Der Startmodus des Cache-Containers, der EAGER (sofortiger Start) oder LAZY sein kann (Start auf Anfrage).
infinispan.container.aliases=Die Liste von Aliassen f\u00FCr diesen Cache-Container
infinispan.container.alias=Ein Alias f\u00FCr diesen Cache-Container
infinispan.container.alias.name=Name des hinzu zu f\u00FCgenden oder zu entfernenden Alias
infinispan.container.alias.add-alias=Einen Alias f\u00FCr diesen Cache-Container hinzuf\u00FCgen
infinispan.container.alias.remove-alias=Einen Alias f\u00FCr diesen Cache-Container entfernen
infinispan.container.transport=Eine Beschreibung des von diesem Cache-Container verwendeten Transports
infinispan.container.transport.add=Den Transport zum Cache-Container hinzuf\u00FCgen
infinispan.container.transport.remove=Den Transport vom Cache-Container entfernen
infinispan.container.transport.stack=Das f\u00FCr den Transport zu verwendende jgroups-Stack
infinispan.container.transport.cluster=Der Name des Gruppenkommunikations-Cluster
infinispan.container.transport.executor=Der f\u00FCr den Transport zu verwendende Executor
infinispan.container.transport.lock-timeout=Der Timeout f\u00FCr Sperren f\u00FCr den Transport
infinispan.container.transport.machine=Ein Maschinenbezeichner ("Machine Identifier") f\u00FCr den Transport
infinispan.container.transport.rack=Ein "Rack Identifier" f\u00FCr den Transport
infinispan.container.transport.site=Ein "Site Identifier" f\u00FCr den Transport
infinispan.container.cache=Die Liste von f\u00FCr diesen Cache-Container verf\u00FCgbaren Caches
infinispan.container.singleton=Ein Satz von Einzelinstanz-Konfigurationselementen des Cache-Containers.
infinispan.container.local-cache=Ein lokales Cache
infinispan.container.local-cache.add=Diesem Cache-Container ein lokales Cache hinzuf\u00FCgen 
infinispan.container.invalidation-cache=Ein Invalidierungs-Cache
infinispan.container.invalidation-cache.add=Diesem Cache-Container ein Invalidierungs-Cache hinzuf\u00FCgen 
infinispan.container.replicated-cache=Ein repliziertes Cache
infinispan.container.replicated-cache.add=Diesem Cache-Container ein repliziertes Cache hinzuf\u00FCgen 
infinispan.container.distributed-cache=Ein distribuiertes Cache
infinispan.container.distributed-cache.add=Diesem Cache-Container ein distribuiertes Cache hinzuf\u00FCgen 
infinispan.cache.name=Der Name des Cache.
infinispan.cache.mode=Der Cache-Modus. Nur interne Verwendung.
infinispan.cache.start=Der Startmodus des Cache, der EAGER (sofortiger Start) oder LAZY sein kann (Start auf Anfrage).
infinispan.cache.batching=Falls aktiviert, wird das Invocation-Batching-API f\u00FCr dieses Cache verf\u00FCgbar gemacht.
infinispan.cache.indexing=Falls aktiviert werden Eintr\u00E4ge indiziert wenn sie dem Cache hinzugef\u00FCgt werden. Indexe werden bei \u00C4nderung oder Entfernung von Eintr\u00E4gen aktualisiert. 
infinispan.cache.jndi-name=Der jndi-Name, an den diese Cache-Instanz gebunden werden soll.
infinispan.cache.remove=Ein Cache aus diesem Container entfernen.
infinispan.cache.singleton=Ein Satz von Einzelinstanz Konfigurationselementen des Cache (locking, transaction, eviction, expiration, store, file-store, jdbc-store, remote-store).
infinispan.cache.locking=Die Sperrkonfiguration des Cache.
infinispan.cache.locking.isolation=Setzt die Isolationsebene der Cache-Sperre. 
infinispan.cache.locking.striping=Falls "true" wird ein Pool geteilter Sperren f\u00FCr alle Eintr\u00E4ge, die gesperrt werden m\u00FCssen, gewartet. Andernfalls wird pro Eintrag im Cache eine Sperre erstellt. "Lock Striping" hilft bei der Steuerung des Memory-Footprint, kann aber die Nebenl\u00E4ufigkeit im System negativ beeinflussen. 
infinispan.cache.locking.acquire-timeout=Maximale Zeit, die der Versuch eines bestimmten Sperrerwerbs unternommen wird.
infinispan.cache.locking.concurrency-level=Nebenl\u00E4ufigkeitsebene f\u00FCr Sperr-Containers. Passen Sie diesen Wert entsprechend der Anzahl nebenl\u00E4ufiger Threads an, die mit Infinispan interagieren.
infinispan.cache.locking.add=F\u00FCgt dem Cache ein Sperrkonfigurationselement hinzu. 
infinispan.cache.locking.remove=Entfernt eine Sperrkonfiguration vom Cache.
infinispan.cache.transaction=Die Transaktionskonfiguration des Cache.
infinispan.cache.transaction.mode=Setzt den Transaktionsmodus des Cache auf einen der folgenden NONE, NON_XA, NON_DURABLE_XA, FULL_XA.
infinispan.cache.transaction.stop-timeout=Existieren bestehende Transaktionen wenn ein Cache gestoppt wird, so wartet Infinispan darauf, dass laufende Remote und lokale Transaktionen beendet werden. Die Zeitdauer, die gewartet wird, wird durch den Cache Stop Timeout bestimmt.
infinispan.cache.transaction.eager-locking=Hat nur Auswirkungen auf den DIST-Modus und wenn useEagerLocking auf "true" eingestellt ist. Ist dies aktiviert, so ist nur ein Knoten im Cluster gesperrt und numOwners config wird ignoriert.
infinispan.cache.transaction.locking=Der Sperrmodus f\u00FCr dieses Cache, entweder OPTIMISTIC oder PESSIMISTIC.
infinispan.cache.transaction.add=F\u00FCgt dem Cache ein Transaktionskonfigurationselement hinzu. 
infinispan.cache.transaction.remove=Entfernt ein Transaktionskonfigurationselement aus dem Cache. 
infinispan.cache.eviction=Die Eviction-Konfiguration des Cache.
infinispan.cache.eviction.strategy=Setzt die Eviction-Strategie des Cache. Verf\u00FCgbare Optionen sind 'UNORDERED', 'FIFO', 'LRU', 'LIRS' und 'NONE' (zur Deaktivierung der Eviction).
infinispan.cache.eviction.max-entries=Maximale Anzahl von Eintr\u00E4gen in einer Cache-Instanz. Ist der gew\u00E4hlte Wert keine Zweierpotenz, so ist der tats\u00E4chliche Standardwert die kleinste Zweierpotenz, die gr\u00F6\u00DFer als der gew\u00E4hlte Wert ist. -1 bedeutet keine Einschr\u00E4nkung.
infinispan.cache.eviction.add=F\u00FCgt dem Cache ein Eviction-Konfigurationselement hinzu. 
infinispan.cache.eviction.remove=Entfernt ein Eviction-Konfigurationselement aus dem Cache. 
infinispan.cache.expiration=Die Cache-Verfallskonfiguration.
infinispan.cache.expiration.max-idle=Maximale Unt\u00E4tigkeitsdauer eines Cache-Eintrags in Millisekunden, nach der der Eintrag clusterweit verf\u00E4llt. -1 bedeutet, dass die Eintr\u00E4ge nie verfallen.
infinispan.cache.expiration.lifespan=Maximale Lebensdauer eines Cache-Eintrags in Millisekunden, nach dem der Eintrag clusterweit verf\u00E4llt. -1 bedeutet, dass die Eintr\u00E4ge nie verfallen.
infinispan.cache.expiration.interval=Zeitintervall (in Millisekunden) zwischen aufeinander folgenden S\u00E4uberungen von veralteten Eintr\u00E4gen in Haupt- und Cachespeicher. Um diese periodische Ausf\u00FChrung zu unterbinden, muss wakeupInterval auf -1 gesetzt werden.
infinispan.cache.expiration.add=F\u00FCgt dem Cache ein Verfallskonfigurationselement hinzu. 
infinispan.cache.expiration.remove=Entfernt ein Verfallskonfigurationselement aus dem Cache. 
infinispan.cache.store=Die Cache-Speicherkonfiguration.
infinispan.cache.store.add=F\u00FCgt dem Cache ein einfaches Cache-Speicher-Konfigurationselement hinzu. 
infinispan.cache.store.remove=Entfernt eine Cache-Speicher-Konfigurationselement vom Cache.
infinispan.cache.store.shared=Diese Einstellung sollte "true" lauten, wenn sich mehrere Cache-Instanzen denselben Cache-Speicher teilen (z.B. mehrere Knoten im Cluster einen  JDBC-basierten CacheStore verwenden, der auf dieselbe, geteilte Datenbank weist). Die Einstellung auf "true" vermeidet, dass mehrere Cache-Instanzen dieselbe \u00C4nderung mehrere Male schreiben. Falls aktiviert schreibt nur der Knoten, an dem die \u00C4nderung ihren Ursprung hat, in den Cache-Speicher. Falls deaktiviert reagiert jedes einzelne Cache auf eine m\u00F6gliche Remote-Aktualisierung, indem es Daten im Cache-Speicher speichert.
infinispan.cache.store.preload=Fall true werden beim Cachestart persistente Daten vom Cachespeicher automatisch in den Hauptspeicher geladen. Dies ist insbesondere dann n\u00FCtzlich, falls Daten aus dem Cachespeicher direkt nach dem Start ben\u00F6tigt werden. Auf diese Weise werden Verz\u00F6gerungen vermieden, die auftreten falls die Daten erst bei direkter Aufforderung geladen werden. Diese Option kann benutzt werden, um den Cache beim Start "aufzuw\u00E4rmen", jedoch beinhaltet sie eine Beeintr\u00E4chtigung des Startvorgangs.  
infinispan.cache.store.passivation=Falls true werden Daten nur in den Cachespeicher geschrieben wenn sie von Hauptspeicher verdr\u00E4ngt werden. Diesen Prozess nennt man auch 'passivation'. Wenn die Daten das n\u00E4chste mal angefordert werden, werden sie 'activated'. Dies bedeutet, dass sie wieder in den Hauptspeicher geladen und gleichzeitig vom persistenten Speicher gel\u00F6scht werden.\nFalls diese Option den Wert false hat, h\u00E4lt der Cachespeicher eine Kopie der Daten des Hauptspeicher. Schreibzugriffe auf den Cache werden automatisch an den Cachespeicher weitergeleitet. Dies ist im Prinzip eine 'write-through' Konfiguration.
infinispan.cache.store.fetch-state=Falls true l\u00E4dt der Cache beim Beitritt eines Clusters persistente Daten. Im Falle dass mehrere Caches verkettet sind, kann nur eine Instanz diese Option gesetzt haben.
infinispan.cache.store.purge=Falls true wird der Cache beim Starten automatisch ges\u00E4ubert.
infinispan.cache.store.singleton=Falls true wird der Singleton Cache aktiviert. Ein Singleton Cache ist ein delegierender Cache f\u00FCr den Fall, dass nur eine Instanz im Cluster mit den darunter liegenden Cachespeicher interagieren soll.
infinispan.cache.store.class=Die benutzerdefinierte Speicherimplementierungsklasse, die f\u00FCr diesen Cachespeicher verwendet werden soll.
infinispan.cache.store.properties=Eine Liste von Cache-Speicher Properties. 
infinispan.cache.store.property=Eine Cache-Speicher Property mit Namen und Wert. 
infinispan.cache.store.property.add=F\u00FCgt eine Cache-Speicher Property hinzu.
infinispan.cache.store.property.remove=Entfernt eine Cache-Speicher Property.
infinispan.cache.store.property.value=Der Wert der Cache-Speicher Property.
infinispan.cache.file-store=Die Konfiguration des Cache-Dateispeichers. 
infinispan.cache.file-store.add=F\u00FCgt dem Cache ein Datei-Cache-Speicher-Konfigurationselement hinzu. 
infinispan.cache.file-store.relative-to=Beschreibung
infinispan.cache.file-store.path=Beschreibung
infinispan.cache.jdbc-store=Die Cache JDBC-Speicherkonfiguration.
infinispan.cache.jdbc-store.add=F\u00FCgt dem Cache ein JDBC Cache-Speicher-Konfigurationselement hinzu. 
infinispan.cache.jdbc-store.datasource=Eine Datenquellenreferenz f\u00FCr diesen Datenspeicher.
infinispan.cache.jdbc-store.entry-table=Die zur Speicherung von Cache-Eintr\u00E4gen verwendete Datenbank.
infinispan.cache.jdbc-store.bucket-table=Die zur Speicherung von bin\u00E4ren Cache-Eintr\u00E4gen verwendete Datenbanktabelle.
infinispan.cache.jdbc-store.table.prefix=Der Pr\u00E4fix f\u00FCr den Namen der Datenbanktabelle.
infinispan.cache.jdbc-store.table.batch-size=F\u00FCr DB Einf\u00FCgungen bestimmt die Batch-Gr\u00F6\u00DFe wie viele Einf\u00FCgungen in Batches zusammengef\u00FCgt werden.
infinispan.cache.jdbc-store.table.fetch-size=F\u00FCr DB-Anfragen bestimmt die Abrufgr\u00F6\u00DFe, die Abrufgr\u00F6\u00DFe bei ResultSets.
infinispan.cache.jdbc-store.table.id-column=Eine Datenbankspalte, die die ids der Cache-Eintr\u00E4ge enth\u00E4lt.
infinispan.cache.jdbc-store.table.data-column=Eine Datenbankspalte, die Cache-Eintragsdaten enth\u00E4lt.
infinispan.cache.jdbc-store.table.timestamp-column=Eine Datenbankspalte, die die Zeitstempel der Cache-Eintr\u00E4ge enth\u00E4lt.
infinispan.cache.jdbc-store.table.column.name=Der Name der Datenbankspalte.
infinispan.cache.jdbc-store.table.column.type=Der Typ der Datenbankspalte.
infinispan.cache.remote-store=Die Konfiguration des Remote-Speichers. 
infinispan.cache.remote-store.add=F\u00FCgt dem Cache ein Remote Cache-Speicher-Konfigurationselement hinzu. 
infinispan.cache.remote-store.cache=Der Name des f\u00FCr diesen Remote-Speicher zu verwendenden Remote-Caches.
infinispan.cache.remote-store.tcp-no-delay=Ein TCP_NODELAY-Wert f\u00FCr Remote Cache-Kommunikation.
infinispan.cache.remote-store.socket-timeout=Ein Socket-Timeout f\u00FCr Remote Cache-Kommunikation.
infinispan.cache.remote-store.remote-servers=Eine Liste von Remote-Servern f\u00FCr diesen Remote-Speicher.
infinispan.cache.remote-store.remote-server=Ein Remote-Server, definiert durch sein ausgehendes Socket-Binding.
infinispan.cache.remote-store.remote-server.outbound-socket-binding=Outbound Socket Binding f\u00FCr einen Remote-Server
infinispan.clustered-cache.async-marshalling=Falls aktiviert, erfolgt ein asynchrones Marshalling von Eintr\u00E4gen.
infinispan.clustered-cache.mode=Stellt den geclusterten Cache-Modus ein, ASYNC f\u00FCr asynchronen Betrieb oder SYNC f\u00FCr synchronen Betrieb.
infinispan.clustered-cache.queue-size=Im ASYNC-Modus kann dieses Attribute zum Ausl\u00F6sen der R\u00E4umung der Warteschlange verwendet werden, wenn diese eine bestimmte Grenze erreicht.
infinispan.clustered-cache.queue-flush-interval=Im ASYNC-Modus steuert dieses Attribut, wie oft der zur R\u00E4umung der Warteschlange verwendete asynchrone Thread l\u00E4uft. Dies sollte eine positive ganze Zahl sein, die die Aufwachzeit des Threads in Millisekunden repr\u00E4sentiert.
infinispan.clustered-cache.remote-timeout=Im SYNC-Modus der Timeout (in ms) der auf Best\u00E4tigung eines Remote-Aufrufs gewartet wird, nachdem der Aufruf abgebrochen und eine Ausnahme gemeldet wird.
infinispan.replicated-cache.state-transfer=Die Statustransferkonfiguration f\u00FCr Distribution und replizierte Caches.
infinispan.replicated-cache.state-transfer.add=Eine Statustransferkonfiguration hinzuf\u00FCgen. 
infinispan.replicated-cache.state-transfer.remove=Eine Statustransferkonfiguration entfernen. 
infinispan.replicated-cache.state-transfer.enabled=Falls aktiviert befragt das Cache benachbarte Caches bei seinem Startup nach deren Status, so dass das Cache 'warm' startet, obwohl dies die Startup-Zeit beeinflusst. 
infinispan.replicated-cache.state-transfer.timeout=Dies ist die maximale Dauer (ms) die auf den Status benachbarter Caches gewartet wird, ehe eine Ausnahme gemeldet und der Startup abgebrochen wird.
infinispan.replicated-cache.state-transfer.chunk-size=Die Gr\u00F6\u00DFe in Bytes f\u00FCr den Transfer der Batches von Cache-Eintr\u00E4gen.
infinispan.distributed-cache=Die distribuierte Cache-Konfiguration.
infinispan.distributed-cache.owners=Anzahl von clusterweiten Replikas f\u00FCr jeden Cache-Eintrag. 
infinispan.distributed-cache.virtual-nodes=Steuert die Anzahl virtueller Knoten pro "echtem" Knoten. Falls  numVirtualNodes 1 ist, so sind virtuelle Knoten deaktiviert. Der Topologie-gewahre konsistente Hash muss verwendet werden, falls Sie virtuelle Knoten nutzen m\u00F6chten. Es wird ein Standard von 1 verwendet.
infinispan.distributed-cache.l1-lifespan=Maximale Lebensdauer eines im L1-Cache platzierten Cache. Dieses Element konfiguriert das Verhalten des L1-Cache in 'distribuierten' Cache-Instanzen. In allen anderen Cache-Modi wird dieses Element ignoriert.
