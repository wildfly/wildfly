<!--
  ~ /*
  ~  * JBoss, Home of Professional Open Source.
  ~  * Copyright 2014, Red Hat, Inc., and individual contributors
  ~  * as indicated by the @author tags. See the copyright.txt file in the
  ~  * distribution for a full listing of individual contributors.
  ~  *
  ~  * This is free software; you can redistribute it and/or modify it
  ~  * under the terms of the GNU Lesser General Public License as
  ~  * published by the Free Software Foundation; either version 2.1 of
  ~  * the License, or (at your option) any later version.
  ~  *
  ~  * This software is distributed in the hope that it will be useful,
  ~  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~  * Lesser General Public License for more details.
  ~  *
  ~  * You should have received a copy of the GNU Lesser General Public
  ~  * License along with this software; if not, write to the Free
  ~  * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~  * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  ~  */
  -->

<subsystem xmlns="urn:jboss:domain:infinispan:3.0">
    <cache-container name="minimal" default-cache="local">
        <local-cache name="local"/>
    </cache-container>
    <cache-container name="maximal" aliases="alias1 alias2" default-cache="local" jndi-name="java:global/infinispan/maximal" statistics-enabled="true">
        <!-- We only use local caches because the test fixture does not set up the dependencies needed for use of jgroups -->
        <!-- Use LAZY because the test fixture does not set up all the needed service dependencies, so we don't
         want the service to actually have to start -->
        <local-cache name="local" start="LAZY" statistics-enabled="true">
            <locking acquire-timeout="30000" concurrency-level="2000" isolation="NONE" striping="true"/>
            <transaction mode="BATCH" stop-timeout="60000"  locking="OPTIMISTIC"/>
            <eviction max-entries="20000" strategy="LIRS"/>
            <expiration interval="10000" lifespan="10" max-idle="10"/>
            <file-store fetch-state="false" passivation="false" path="path" preload="true" purge="false" relative-to="jboss.server.temp.dir" shared="true" singleton="false">
                <write-behind flush-lock-timeout="2" modification-queue-size="2048" shutdown-timeout="20000" thread-pool-size="1" />
            </file-store>
            <indexing index="LOCAL" />
        </local-cache>
        <!-- Use LAZY because the test fixture does not set up all the needed service dependencies, so we don't
         want the service to actually have to start -->
        <local-cache name="jdbc" start="LAZY" statistics-enabled="true">
            <locking acquire-timeout="30000" concurrency-level="2000" isolation="NONE" striping="true"/>
            <transaction mode="BATCH" stop-timeout="60000"  locking="OPTIMISTIC"/>
            <eviction max-entries="20000" strategy="LIRS"/>
            <expiration interval="10000" lifespan="10" max-idle="10"/>
            <mixed-keyed-jdbc-store datasource="java:jboss/jdbc/store" dialect="MYSQL" fetch-state="false" passivation="false" preload="true" purge="false" shared="false" singleton="false">
                <write-behind flush-lock-timeout="2" modification-queue-size="2048" shutdown-timeout="20000" thread-pool-size="1" />
                <string-keyed-table prefix="ispn_bucket" batch-size="100" fetch-size="100">
                    <id-column name="id" type="VARCHAR"/>
                    <data-column name="datum" type="BINARY"/>
                    <timestamp-column name="version" type="BIGINT"/>
                </string-keyed-table>
                <binary-keyed-table prefix="ispn_entry" batch-size="100" fetch-size="100">
                    <id-column name="id" type="VARCHAR"/>
                    <data-column name="datum" type="BINARY"/>
                    <timestamp-column name="version" type="BIGINT"/>
                </binary-keyed-table>
            </mixed-keyed-jdbc-store>
            <indexing index="LOCAL" />
        </local-cache>
    </cache-container>
</subsystem>
