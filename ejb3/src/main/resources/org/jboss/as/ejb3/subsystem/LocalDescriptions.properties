ejb3=The configuration of the ejb3 subsystem.
ejb3.add=Adds the ejb3 subsystem.
ejb3.enable-statistics=If set to true, enable the collection of invocation statistics. Deprecated in favour of "statistics-enabled"
ejb3.enable-statistics.deprecated=If set to true, enable the collection of invocation statistics. Deprecated in favour of "statistics-enabled"
ejb3.statistics-enabled=If set to true, enable the collection of invocation statistics.
ejb3.remove=Removes the ejb3 subsystem.

ejb3.lite=Specifies whether the ejb3 container need only provide the "LITE" profile of the specification. This value should only be false when using the "everything" distro.
ejb3.default-clustered-sfsb-cache=Name of the default stateful bean cache, which will be applicable to all clustered stateful EJBs, unless overridden at the deployment or bean level
ejb3.default-clustered-sfsb-cache.deprecated=Not supported on current version servers; only allowed in managed domain profiles for use on servers running earlier versions.
ejb3.default-sfsb-passivation-disabled-cache=Name of the default stateful bean cache, which will be applicable to all stateful EJBs which have passivation disabled. Each deployment or EJB can optionally override this cache name.
ejb3.default-mdb-instance-pool=Name of the default MDB instance pool, which will be applicable to all MDBs, unless overridden at the deployment or bean level
ejb3.default-entity-bean-instance-pool=Name of the default entity bean instance pool, which will be applicable to all entity beans, unless overridden at the deployment or bean level
ejb3.default-entity-bean-optimistic-locking=If set to true entity beans will use optimistic locking by default
ejb3.default-resource-adapter-name=Name of the default resource adapter name that will be used by MDBs, unless overridden at the deployment or bean level
ejb3.default-sfsb-cache=Name of the default stateful bean cache, which will be applicable to all stateful EJBs, unless overridden at the deployment or bean level
ejb3.default-slsb-instance-pool=Name of the default stateless bean instance pool, which will be applicable to all stateless EJBs, unless overridden at the deployment or bean level
ejb3.default-stateful-bean-access-timeout=The default access timeout for stateful beans
ejb3.default-singleton-bean-access-timeout=The default access timeout for singleton beans
ejb3.in-vm-remote-interface-invocation-pass-by-value=If set to false, the parameters to invocations on remote interface of an EJB, will be passed by reference. Else, the parameters will be passed by value.
ejb3.default-distinct-name=The default distinct name that is applied to every EJB deployed on this server
ejb3.default-security-domain=The default security domain that will be used for EJBs if the bean doesn't explicitly specify one
ejb3.default-missing-method-permissions-deny-access=If this is set to true then methods on an EJB with a security domain specified or with other methods with security metadata will have an implicit @DenyAll unless other security metadata is present
ejb3.disable-default-ejb-permissions=This deprecated attribute has no effect and will be removed in a future release; it may never be set to a "false" value
ejb3.disable-default-ejb-permissions.deprecated=Adding default permissions to EJB deployments is no longer supported and this configuration attribute will be removed in a future release
ejb3.enable-graceful-txn-shutdown=Enabling txn graceful shutdown will make the server wait for active EJB-related transactions to complete before suspending. For that reason, if the server is running on a cluster, the suspending cluster node may receive ejb requests until all active transactions are complete. To avoid this behavior, omit this tag.
ejb3.log-system-exceptions=If this is true then all EJB system (not application) exceptions will be logged. The EJB spec mandates this behaviour, however it is not recommended as it will often result in exceptions being logged twice (once by the EJB and once by the calling code)
ejb3.allow-ejb-name-regex=If this is true then regular expressions can be used in interceptor bindings to allow interceptors to be mapped to all beans that match the regular expression
ejb3.server-interceptors=Server interceptor definitions.
ejb3.server-interceptors.class=Class implementing the server interceptor.
ejb3.server-interceptors.module=Module in which the server interceptor is defined.

service=Centrally configurable services that are part of the EJB3 subsystem.

timer-service=The EJB timer service
timer-service.add=Adds the timer service
timer-service.remove=Removes the timer service
timer-service.thread-pool-name=The name of the thread pool used to run timer service invocations
timer-service.default-data-store=The default data store used for persistent timers

file-data-store=A JVM local file store that stores persistent EJB timers
file-data-store.add=Adds a file data store
file-data-store.remove="Removes a file data store
file-data-store.path=The directory to store persistent timer information in
file-data-store.relative-to=The relative path that is used to resolve the timer data store location


database-data-store=An database based store for persistent EJB timers.
database-data-store.add=Adds a database store
database-data-store.remove=Removes a database store
database-data-store.datasource-jndi-name=The datasource that is used to persist the timers
database-data-store.database=The type of database that is in use. SQL can be customised per database type.
database-data-store.partition=The partition name. This should be set to a different value for every node that is sharing a database to prevent the same timer being loaded by multiple noded.
database-data-store.refresh-interval=Interval between refreshing the current timer set against the underlying database. A low value means timers get picked up more quickly, but increase load on the database.
database-data-store.allow-execution=If this node is allowed to execute timers. If this is false then the timers will be added to the database, and another node may execute them. Note that depending on your refresh interval if you add timers with a very short delay they will not be executed until another node refreshes.

timer=Actual timer running for EJB
timer.info=Serializable information associated with timer.
timer.primary-key=Primary key of EJB instance which started the timer.
timer.time-remaining=The number of milliseconds that will elapse before the next scheduled timer expiration, or "undefined" if the timer has no future timeouts, is expired, or has been cancelled.
timer.next-timeout=The point in time (in ms since the epoch) at which the next timer expiration is scheduled to occur, or "undefined" if the timer has no future timeouts, is expired, or has been cancelled.
timer.calendar-timer=Whether this timer is a calendar-based timer, or "undefined" if the timer has expired or been cancelled.
timer.persistent=Whether this timer has persistent semantics or "undefined" if the timer has expired or been cancelled.
timer.active=Indicates whether this timer is active or suspended.
timer.schedule=The schedule expression corresponding to this timer or "undefined" if the timer was not created using a schedule expression, is expired, or has been cancelled.
timer.schedule.year=A particular calendar year.
timer.schedule.month=One or more months within a year.
timer.schedule.day-of-month=One or more days within a month.
timer.schedule.day-of-week=One or more days within a week.
timer.schedule.hour=One or more hours within a day.
timer.schedule.minute=One or more minutes within an hour.
timer.schedule.second=One or more seconds within a minute.
timer.schedule.timezone=A non-default time zone in whose context the schedule specification is to be evaluated.
timer.schedule.start=The start date for the timer, in ms since the epoch.
timer.schedule.end=The end date for the timer, in ms since the epoch.

timer.suspend=Suspends timer. No timeout will occur after this operation has been invoked. To reanimate timer, 'activate' operation is present.
timer.activate=Activates timer after it has been suspended.
timer.cancel=Cancels timer and removes it from container.
timer.trigger=Triggers timer timeout method prematurely.

strict-max-bean-instance-pool=A bean instance pool with a strict upper limit
strict-max-bean-instance-pool.add=Adds a bean instance pool which has a strict upper limit for bean instances
strict-max-bean-instance-pool.remove=Removes a specific a bean instance pool which has a strict upper limit for bean instances
strict-max-bean-instance-pool.name=Name of the pool
strict-max-bean-instance-pool.max-pool-size=Configured maximum number of bean instances that the pool can hold at a given point in time
strict-max-bean-instance-pool.derived-size=Derived maximum number of bean instances that the pool can hold at a given point in time
strict-max-bean-instance-pool.derive-size=Specifies if and what the max pool size should be derived from. An undefined value (or the deprecated value 'none' which is converted to undefined) indicates that the explicit value of max-pool-size should be used. A value of 'from-worker-pools' indicates that the max pool size should be derived from the size of the total threads for all worker pools configured on the system. A value of 'from-cpu-count' indicates that the max pool size should be derived from the total number of processors available on the system. Note that the computation isn't a 1:1 mapping, the values may or may not be augmented by other factors.
strict-max-bean-instance-pool.timeout=The maximum amount of time to wait for a bean instance to be available from the pool
strict-max-bean-instance-pool.timeout-unit=The instance acquisition timeout unit

deployed=Runtime resources exposed by EJBs components included in this deployment.

entity-bean=Entity bean component included in the deployment.
entity-bean.component-class-name=The component's class name.
entity-bean.security-domain=The security domain for this EJB component.
entity-bean.run-as-role=The run-as role (if any) for this EJB component.
entity-bean.declared-roles=The roles declared (via @DeclareRoles) on this EJB component.
entity-bean.execution-time=Time spend within a bean method.
entity-bean.invocations=Number of invocations processed.
entity-bean.methods=Invocation metrics per method.
entity-bean.methods.execution-time=Time spend within this bean method.
entity-bean.methods.invocations=Number of invocations processed.
entity-bean.methods.wait-time=Time spend waiting to obtain an instance.
entity-bean.peak-concurrent-invocations=Peak concurrent invocations.
entity-bean.pool-available-count=The number of available (i.e. not in use) instances in the pool.
entity-bean.pool-create-count=The number of bean instances that have been created.
entity-bean.pool-current-size=The current size of the pool.
entity-bean.pool-name=The name of the pool.
entity-bean.pool-remove-count=The number of bean instances that have been removed.
entity-bean.pool-max-size=The maximum size of the pool.
entity-bean.wait-time=Time spend waiting to obtain an instance.

message-driven-bean=Message driven bean component included in the deployment.
message-driven-bean.component-class-name=The component's class name.
message-driven-bean.security-domain=The security domain for this EJB component.
message-driven-bean.run-as-role=The run-as role (if any) for this EJB component.
message-driven-bean.delivery-active=Indicates whether messages are delivered to this message-driven bean.
message-driven-bean.start-delivery=Start delivering messages to this message-driven bean.
message-driven-bean.stop-delivery=Stop delivering messages to this message-driven bean.
message-driven-bean.declared-roles=The roles declared (via @DeclareRoles) on this EJB component.
message-driven-bean.execution-time=Time spend within a bean method.
message-driven-bean.invocations=Number of invocations processed.
message-driven-bean.methods=Invocation metrics per method.
message-driven-bean.methods.execution-time=Time spend within this bean method.
message-driven-bean.methods.invocations=Number of invocations processed.
message-driven-bean.methods.wait-time=Time spend waiting to obtain an instance.
message-driven-bean.peak-concurrent-invocations=Peak concurrent invocations.
message-driven-bean.pool-available-count=The number of available (i.e. not in use) instances in the pool.
message-driven-bean.pool-create-count=The number of bean instances that have been created.
message-driven-bean.pool-current-size=The current size of the pool.
message-driven-bean.pool-name=The name of the pool.
message-driven-bean.pool-remove-count=The number of bean instances that have been removed.
message-driven-bean.pool-max-size=The maximum size of the pool.
message-driven-bean.timers=EJB timers associated with the component.
message-driven-bean.timers.time-remaining=The number of milliseconds that will elapse before the next scheduled timer expiration, or "undefined" if the timer has no future timeouts, is expired, or has been cancelled.
message-driven-bean.timers.next-timeout=The point in time (in ms since the epoch) at which the next timer expiration is scheduled to occur, or "undefined" if the timer has no future timeouts, is expired, or has been cancelled.
message-driven-bean.timers.calendar-timer=Whether this timer is a calendar-based timer, or "undefined" if the timer has expired or been cancelled.
message-driven-bean.timers.persistent=Whether this timer has persistent semantics, or "undefined" if the timer has expired or been cancelled.
message-driven-bean.timers.schedule=The schedule expression corresponding to this timer, or "undefined" if the timer was not created using a schedule expression, is expired, or has been cancelled.
message-driven-bean.timers.schedule.year=A particular calendar year.
message-driven-bean.timers.schedule.month=One or more months within a year.
message-driven-bean.timers.schedule.day-of-month=One or more days within a month.
message-driven-bean.timers.schedule.day-of-week=One or more days within a week.
message-driven-bean.timers.schedule.hour=One or more hours within a day.
message-driven-bean.timers.schedule.minute=One or more minutes within an hour.
message-driven-bean.timers.schedule.second=One or more seconds within a minute.
message-driven-bean.timers.schedule.timezone=A non-default time zone in whose context the schedule specification is to be evaluated.
message-driven-bean.timers.schedule.start=The start date for the timer, in ms since the epoch.
message-driven-bean.timers.schedule.end=The end date for the timer, in ms since the epoch.
message-driven-bean.wait-time=Time spend waiting to obtain an instance.

singleton-bean=Singleton bean component included in the deployment.
singleton-bean.component-class-name=The component's class name.
singleton-bean.timers=EJB timers associated with the component.
singleton-bean.security-domain=The security domain for this EJB component.
singleton-bean.run-as-role=The run-as role (if any) for this EJB component.
singleton-bean.declared-roles=The roles declared (via @DeclareRoles) on this EJB component.
singleton-bean.execution-time=Time spend within a bean method.
singleton-bean.invocations=Number of invocations processed.
singleton-bean.methods=Invocation metrics per method.
singleton-bean.methods.execution-time=Time spend within this bean method.
singleton-bean.methods.invocations=Number of invocations processed.
singleton-bean.methods.wait-time=Time spend waiting to obtain an instance.
singleton-bean.peak-concurrent-invocations=Peak concurrent invocations.
singleton-bean.timers.time-remaining=The number of milliseconds that will elapse before the next scheduled timer expiration, or "undefined" if the timer has no future timeouts, is expired, or has been cancelled.
singleton-bean.timers.next-timeout=The point in time (in ms since the epoch) at which the next timer expiration is scheduled to occur, or "undefined" if the timer has no future timeouts, is expired, or has been cancelled.
singleton-bean.timers.calendar-timer=Whether this timer is a calendar-based timer, or "undefined" if the timer has expired or been cancelled.
singleton-bean.timers.persistent=Whether this timer has persistent semantics, or "undefined" if the timer has expired or been cancelled.
singleton-bean.timers.schedule=The schedule expression corresponding to this timer, or "undefined" if the timer was not created using a schedule expression, is expired, or has been cancelled.
singleton-bean.timers.schedule.year=A particular calendar year.
singleton-bean.timers.schedule.month=One or more months within a year.
singleton-bean.timers.schedule.day-of-month=One or more days within a month.
singleton-bean.timers.schedule.day-of-week=One or more days within a week.
singleton-bean.timers.schedule.hour=One or more hours within a day.
singleton-bean.timers.schedule.minute=One or more minutes within an hour.
singleton-bean.timers.schedule.second=One or more seconds within a minute.
singleton-bean.timers.schedule.timezone=A non-default time zone in whose context the schedule specification is to be evaluated.
singleton-bean.timers.schedule.start=The start date for the timer, in ms since the epoch.
singleton-bean.timers.schedule.end=The end date for the timer, in ms since the epoch.
singleton-bean.wait-time=Time spend waiting to obtain an instance.

stateful-session-bean=Stateful session bean component included in the deployment.
stateful-session-bean.component-class-name=The component's class name.
stateful-session-bean.security-domain=The security domain for this EJB component.
stateful-session-bean.run-as-role=The run-as role (if any) for this EJB component.
stateful-session-bean.declared-roles=The roles declared (via @DeclareRoles) on this EJB component.
stateful-session-bean.execution-time=Time spend within a bean method.
stateful-session-bean.invocations=Number of invocations processed.
stateful-session-bean.methods=Invocation metrics per method.
stateful-session-bean.methods.execution-time=Time spend within this bean method.
stateful-session-bean.methods.invocations=Number of invocations processed.
stateful-session-bean.methods.wait-time=Time spend waiting to obtain an instance.
stateful-session-bean.peak-concurrent-invocations=Peak concurrent invocations.
stateful-session-bean.wait-time=Time spend waiting to obtain an instance.
stateful-session-bean.cache-size=Cache size.
stateful-session-bean.passivated-count=Passivated count.
stateful-session-bean.total-size=Total size.

stateless-session-bean=Stateless session bean component included in the deployment.
stateless-session-bean.component-class-name=The component's class name.
stateless-session-bean.security-domain=The security domain for this EJB component.
stateless-session-bean.run-as-role=The run-as role (if any) for this EJB component.
stateless-session-bean.declared-roles=The roles declared (via @DeclareRoles) on this EJB component.
stateless-session-bean.execution-time=Time spend within a bean method.
stateless-session-bean.invocations=Number of invocations processed.
stateless-session-bean.methods=Invocation metrics per method.
stateless-session-bean.methods.execution-time=Time spend within this bean method.
stateless-session-bean.methods.invocations=Number of invocations processed.
stateless-session-bean.methods.wait-time=Time spend waiting to obtain an instance.
stateless-session-bean.peak-concurrent-invocations=Peak concurrent invocations.
stateless-session-bean.pool-available-count=The number of available (i.e. not in use) instances in the pool.
stateless-session-bean.pool-create-count=The number of bean instances that have been created.
stateless-session-bean.pool-current-size=The current size of the pool.
stateless-session-bean.pool-name=The name of the pool.
stateless-session-bean.pool-remove-count=The number of bean instances that have been removed.
stateless-session-bean.pool-max-size=The maximum size of the pool.
stateless-session-bean.timers=EJB timers associated with the component.
stateless-session-bean.timers.time-remaining=The number of milliseconds that will elapse before the next scheduled timer expiration, or "undefined" if the timer has no future timeouts, is expired, or has been cancelled.
stateless-session-bean.timers.next-timeout=The point in time (in ms since the epoch) at which the next timer expiration is scheduled to occur, or "undefined" if the timer has no future timeouts, is expired, or has been cancelled.
stateless-session-bean.timers.calendar-timer=Whether this timer is a calendar-based timer, or "undefined" if the timer has expired or been cancelled.
stateless-session-bean.timers.persistent=Whether this timer has persistent semantics, or "undefined" if the timer has expired or been cancelled.
stateless-session-bean.timers.schedule=The schedule expression corresponding to this timer, or "undefined" if the timer was not created using a schedule expression, is expired, or has been cancelled.
stateless-session-bean.timers.schedule.year=A particular calendar year.
stateless-session-bean.timers.schedule.month=One or more months within a year.
stateless-session-bean.timers.schedule.day-of-month=One or more days within a month.
stateless-session-bean.timers.schedule.day-of-week=One or more days within a week.
stateless-session-bean.timers.schedule.hour=One or more hours within a day.
stateless-session-bean.timers.schedule.minute=One or more minutes within an hour.
stateless-session-bean.timers.schedule.second=One or more seconds within a minute.
stateless-session-bean.timers.schedule.timezone=A non-default time zone in whose context the schedule specification is to be evaluated.
stateless-session-bean.timers.schedule.start=The start date for the timer, in ms since the epoch.
stateless-session-bean.timers.schedule.end=The end date for the timer, in ms since the epoch.
stateless-session-bean.wait-time=Time spend waiting to obtain an instance.

remote=The EJB3 Remote Service
remote.add=Adds the EJB3 remote service
remote.remove=Removes the EJB3 remote service
remote.execute-in-worker=If this is true the EJB request will be executed in the IO subsystems worker, otherwise it will dispatch to the EJB thread pool
remote.cluster= The name of the clustered cache container which will be used to store/access the client-mappings of the EJB remoting connector's socket-binding on each node, in the cluster
remote.connector-ref=The name of the connector on which the EJB3 remoting channel is registered
remote.thread-pool-name=The name of the thread pool that handles remote invocations
remote.client-mappings-cache-container-ref=The name of the clustered cache container which will be used to store/access the client-mappings of the EJB remoting connector's socket-binding on each node, in the cluster
remote.client-mappings-cache-ref=The name of the clustered cache which will be used to store/access the client-mappings of the EJB remoting connector's socket-binding on each node, in the cluster
channel-creation-options=The options that will be used during the EJB remote channel creation
channel-creation-options.value=The value for the EJB remote channel creation option
channel-creation-options.type=The type of the channel creation option
channel-creation-options.add=Adds an EJB remote channel creation option
channel-creation-options.remove=Removes an EJB remote channel creation option

remote-http=The EJB3 remote HTTP service
remote-http.add=Adds the remote HTTP service, this allows EJBs to be invoked directly over HTTP
remote-http.remove=Removes the remote HTTP service
remote-http.thread-pool-name=The thread pool to execute the EJB requests in. If this is not defined they will be executed in the web worker pool.


async=The EJB3 Asynchronous Invocation Service
async.add=Adds the EJB3 Asynchronous Invocation Service
async.remove=Removes the EJB3 Asynchronous Invocation Service
async.thread-pool-name=The name of the thread pool which handles asynchronous invocations

thread-pool=An EJB thread pool
thread-pool.add=Adds a thread pool
thread-pool.remove=Removes a thread pool
thread-pool.max-threads=The maximum number of threads that the thread pool can contain. The default value if not configured is the number of processes as returned by Runtime.availableProcessors()
thread-pool.core-threads=The minimum number of threads in the thread pool.
thread-pool.keepalive-time=The amount of time in milliseconds that an idle thread will stay around.

iiop=The IIOP service
iiop.add=Adds IIOP support to the EJB3 subsystem
iiop.remove=Removes IIOP support
iiop.enable-by-default=If this is true EJB's will be exposed over IIOP by default, otherwise it needs to be explicitly enabled in the deployment descriptor
iiop.use-qualified-name=If true EJB names will be bound into the naming service with the application and module name prepended to the name (e.g. myapp/mymodule/MyEjb)

cache=A SFSB cache
cache.add=Adds a cache
cache.remove=Removes a cache
cache.name=Name of the cache
cache.aliases=The aliases by which this cache may also be referenced
cache.passivation-store=The passivation store used by this cache

file-passivation-store=A file system based passivation store
file-passivation-store.deprecated=file-passivation-store has been superseded by passivation-store and will be removed in a future release
file-passivation-store.add=Adds a file system based passivation store
file-passivation-store.remove=Removes a file system based passivation store
file-passivation-store.idle-timeout=The timeout in units specified by idle-timeout-unit, after which a bean will passivate
file-passivation-store.idle-timeout.deprecated=SFSBs are no longer passivated eagerly, but only lazily as required by max-size
file-passivation-store.idle-timeout-unit=The unit of idle-timeout
file-passivation-store.idle-timeout-unit.deprecated=SFSBs are no longer passivated eagerly, but only lazily as required by max-size
file-passivation-store.max-size=The maximum number of beans this cache should store before forcing old beans to passivate
file-passivation-store.relative-to=The root path used to store passivated beans
file-passivation-store.relative-to.deprecated=Use the relative-to attribute of the file-store of the relevant infinispan cache instead
file-passivation-store.groups-path=The subdirectory within the path specified by relative-to in which to store passivated bean groups
file-passivation-store.groups-path.deprecated=Beans and bean groups are no longer stored in distinct directories
file-passivation-store.sessions-path=The subdirectory within the path specified by relative-to in which to store passivated beans
file-passivation-store.sessions-path.deprecated=Beans and bean groups are no longer stored in distinct directories
file-passivation-store.subdirectory-count=Specifies the number of subdirectories into which stored state should be divided, used to minimize the number of files created per directory
file-passivation-store.subdirectory-count.deprecated=This is no longer configurable and will be ignored
file-passivation-store.name=Name of the store

cluster-passivation-store=A clustered passivation store
cluster-passivation-store.deprecated=cluster-passivation-store has been superseded by passivation-store and will be removed in a future release
cluster-passivation-store.add=Adds a clustered passivation store
cluster-passivation-store.remove=Removes a clustered passivation store
cluster-passivation-store.idle-timeout=The timeout in units specified by idle-timeout-unit, after which a bean will passivate
cluster-passivation-store.idle-timeout.deprecated=SFSBs are no longer passivated eagerly, but only lazily as required by max-size
cluster-passivation-store.idle-timeout-unit=The unit of idle-timeout
cluster-passivation-store.idle-timeout-unit.deprecated=SFSBs are no longer passivated eagerly, but only lazily as required by max-size
cluster-passivation-store.max-size=The maximum number of beans this cache should store before forcing old beans to passivate
cluster-passivation-store.cache-container=The name of the cache container used for the bean and client-mappings caches
cluster-passivation-store.bean-cache=The name of the cache used to store bean instances.
cluster-passivation-store.client-mappings-cache=The name of the cache used to store client-mappings of the EJB remoting connector's socket-bindings
cluster-passivation-store.client-mappings-cache.deprecated=This is no longer configurable and will be ignored
cluster-passivation-store.passivate-events-on-replicate=Indicates whether replication should trigger passivation events on the bean
cluster-passivation-store.passivate-events-on-replicate.deprecated=This is no longer configurable and will be ignored
cluster-passivation-store.name=Name of the store

passivation-store=A passivation store
passivation-store.add=Adds a passivation store
passivation-store.remove=Removes a passivation store
passivation-store.name=Name of the store
passivation-store.max-size=The maximum number of beans this cache should store before forcing old beans to passivate
passivation-store.cache-container=The name of the cache container used for the bean and client-mappings caches
passivation-store.bean-cache=The name of the cache used to store bean instances.

remoting-profile=A remoting profile
remoting-profile.add=Adds a remoting profile
remoting-profile.remove=Removes a remoting profile
remoting-profile.exclude-local-receiver=If set no local receiver is used in this profile
remoting-profile.local-receiver-pass-by-value=If set local receiver will pass ejb beans by value
remoting-profile.static-ejb-discovery=Describes static discovery config for EJB's
remoting-profile.static-ejb-discovery.app-name=The EJB application name
remoting-profile.static-ejb-discovery.module-name=The EJB module name
remoting-profile.static-ejb-discovery.distinct-name=The EJB distinct name
remoting-profile.static-ejb-discovery.uri=The URI to use for invocations to this EJB module
remoting-ejb-receiver=A remoting ejb receiver reference included in the profile
remoting-ejb-receiver.add=Adds a remoting ejb receiver reference to the profile
remoting-ejb-receiver.remove=Removes a remoting ejb receiver reference from the profile
remoting-ejb-receiver.outbound-connection-ref=Name of outbound connection that will be used by the ejb receiver
remoting-ejb-receiver.connect-timeout=Remoting ejb receiver connect timeout


mdb-delivery-group=Delivery group to manage delivery for mdbs
mdb-delivery-group.active=Indicates if delivery for all MDBs belonging to this group is active
mdb-delivery-group.add=Adds a delivery group
mdb-delivery-group.remove=Removes a delivery group

application-security-domain=A mapping from a security domain referenced in a deployed application
application-security-domain.add=Add a new application referenced security domain mapping
application-security-domain.remove=Remove the application referenced security domain mapping
application-security-domain.security-domain=The Elytron security domain to be used by deployments that reference the mapped security domain
application-security-domain.referencing-deployments=The deployments currently referencing this mapping
application-security-domain.enable-jacc=Enable authorization using JACC
application-security-domain.http-authentication-factory=The HTTP authentication factory to use for HTTP based invocations

identity=Identity definition for security identity propagation
identity.add=Add the identity resource
identity.remove=Remove the identity resource
identity.outflow-security-domains=References to security domains to attempt to outflow any established identity to
