# Subsystem
modcluster=Configuration and runtime operations for mod_cluster subsystem.
modcluster.add=Add the mod_cluster subsystem leaving the server in 'reload-required' state.
modcluster.remove=Remove the mod_cluster subsystem leaving the server in 'reload-required' state.

# Proxy Configuration
modcluster.proxy=Proxy resource coupled with single Undertow listener (and server) specifying load balancer discovery, its configuration and load balance factor provider. Multiple proxy configuration can be specified.
modcluster.proxy.add=Add a proxy resource requiring an Undertow listener reference leaving the server in 'reload-required' state.
modcluster.proxy.remove=Remove a proxy resource leaving the server in 'reload-required' state.
modcluster.proxy.advertise=Whether to enable multicast-based advertise mechanism.
modcluster.proxy.advertise-security-key=If specified, reverse proxy advertisements checksums will be verified using this value as a salt.
modcluster.proxy.advertise-socket=Name of socket binding to use for the advertise socket.
modcluster.proxy.auto-enable-contexts=If false, the contexts are registered with the reverse proxy as disabled, they need to be enabled manually by 'enable-context' operation or via mod_cluster_manager console (if available).
modcluster.proxy.balancer=The name of the balancer on the reverse proxy to register with.
modcluster.proxy.excluded-contexts=List of contexts to exclude from registration with the reverse proxies.
modcluster.proxy.flush-packets=Whether to enable packet flushing on the reverse proxy.
modcluster.proxy.flush-wait=Time to wait before flushing packets on the reverse proxy.
modcluster.proxy.listener=The name of Undertow listener that will be registered with the reverse proxy.
modcluster.proxy.load-balancing-group=Name of the load balancing group this node belongs to.
modcluster.proxy.max-attempts=Maximum number of failover attempts by reverse proxy when sending the request to the backend server.
modcluster.proxy.node-timeout=Timeout (in seconds) for proxy connections to a node. That is the time mod_cluster will wait for the back-end response before returning an error.
modcluster.proxy.ping=Number of seconds for which to wait for a pong answer to a ping.
modcluster.proxy.proxies=List of reverse proxies for mod_cluster to register with defined by 'outbound-socket-binding' in 'socket-binding-group'.
modcluster.proxy.proxy-url=Base URL for MCMP requests.
modcluster.proxy.session-draining-strategy=Session draining strategy used during undeployment of a web application.
modcluster.proxy.smax=Soft maximum idle connection count for reverse proxy.
modcluster.proxy.socket-timeout=Timeout to wait for the reverse proxy to answer a MCMP message.
modcluster.proxy.ssl-context=Reference to the SSLContext to be used by mod_cluster.
modcluster.proxy.status-interval=Number of seconds a STATUS message is sent from the application server to the proxy.
modcluster.proxy.sticky-session=Indicates whether subsequent requests for a given session should be routed to the same node, if possible.
modcluster.proxy.sticky-session-force=Indicates whether the reverse proxy should run an error in the event that the balancer is unable to route a request to the node to which it is stuck. Ignored if sticky sessions are disabled.
modcluster.proxy.sticky-session-remove=Indicates whether the reverse proxy should remove session stickiness in the event that the balancer is unable to route a request to the node to which it is stuck. Ignored if sticky sessions are disabled.
modcluster.proxy.stop-context-timeout=Maximum time to wait for context to process pending requests.
modcluster.proxy.ttl=Time to live (in seconds) for idle connections above smax.
modcluster.proxy.worker-timeout=Number of seconds to wait for a worker to become available to handle a request.

# Load Providers
modcluster.dynamic-load-provider=Legacy alias for dynamic load provider.
modcluster.load-provider=Load provider provides load calculations.
modcluster.load-provider.simple=Simple load provider returns constant pre-configured load balancing factor.
modcluster.load-provider.simple.add=Add a simple load provider returning constant pre-configured load balancing factor.
modcluster.load-provider.simple.remove=Remove a simple load provider.
modcluster.load-provider.simple.factor=Dynamic load provider computes the load balance factor of a node from a defined set of load metrics.
modcluster.load-provider.dynamic.add=Add a dynamic load provider with no load metrics.
modcluster.load-provider.dynamic.remove=Remove a dynamic load provider defaulting to simple load provider.
modcluster.load-provider.dynamic.decay=The factor by which a historic load values should degrade in significance.
modcluster.load-provider.dynamic.history=The number of historic (previous) load values to consider in the load balance factor computation.
modcluster.load-provider.dynamic.initial-load=Initial load within the range [0..100] with which to prepopulate historical values. Used to gradually drive load to the node. Value of 0 prepopulates with full load and value of -1 disables this behavior.

# Load Metrics
modcluster.load-metric=Built-in load metric contributing a value to the overall load factor of a node. The load factors from each metric are aggregated according to their weights.
modcluster.load-metric.add=Add a load metric to the set of load metrics to calculate the load factor from.
modcluster.load-metric.remove=Remove a load metric from the set of load metrics to calculate the load factor from.
modcluster.load-metric.type=Type of a built-in load metric from the enumerated values.
modcluster.load-metric.class=Class name to use to construct a load metric from.
modcluster.load-metric.module=Module name from which to load the load metric class.
modcluster.load-metric.weight=Number indicating the significance of a metric with respect to the other metrics. For example, a metric of weight 2 will have twice the impact on the overall load factor than a metric of weight 1.
modcluster.load-metric.capacity=Maximum capacity of the metric used to normalize the load values from a metric which require explicit capacity.
modcluster.load-metric.property=Properties to apply on a loaded metric instance.
modcluster.custom-load-metric=Custom load metric loaded from a specified Java class contributing a value to the overall load factor of a node. The load factors from each metric are aggregated according to their weights.

# Runtime-only Operations
modcluster.add-proxy=Add a reverse proxy to the list of proxies to register with.
modcluster.add-proxy.host=Host of the reverse proxy.
modcluster.add-proxy.port=Port of the reverse proxy accepting MCMP commands.
modcluster.disable=Tell reverse proxies that all contexts of the node can't process new requests.
modcluster.disable-context=Tell reverse proxies that the context can't process new requests.
modcluster.disable-context.context=Name of the context to disable.
modcluster.disable-context.virtualhost=Name of the virtual host to disable context on.
modcluster.enable=Tell reverse proxies that all contexts on the node are ready to receive requests.
modcluster.enable-context=Tell reverse proxies that the context is ready to receive requests.
modcluster.enable-context.context=Name of the context to enable.
modcluster.enable-context.virtualhost=Name of the virtual host to enable context for.
modcluster.list-proxies=List the reverse proxies this node is currently registered with.
modcluster.read-proxies-configuration=Send a DUMP command to the reverse proxies and display the result.
modcluster.read-proxies-info=Send an INFO command to the reverse proxies and display the result.
modcluster.refresh=Refresh the node sending a new CONFIG message to the reverse proxies.
modcluster.remove-proxy=Remove the reverse proxy from the list of proxies to register with.
modcluster.remove-proxy.host=Host of the reverse proxy.
modcluster.remove-proxy.port=Port of the reverse proxy.
modcluster.reset=Reset the node's connection to the reverse proxies.
modcluster.stop=Tell reverse proxies that all contexts on the node can't process requests.
modcluster.stop.waittime=Number of seconds for which to wait for sessions to drain before stopping all contexts if session draining is in effect. Negative or zero timeout value will wait indefinitely.
modcluster.stop-context=Tell reverse proxies that the context can't process requests.
modcluster.stop-context.context=Name of the context to stop.
modcluster.stop-context.virtualhost=Name of the virtual host to stop the context on.
modcluster.stop-context.waittime=Number of seconds for which to wait for sessions to drain before stopping the context if session draining is in effect. Negative or zero timeout value will wait indefinitely.
