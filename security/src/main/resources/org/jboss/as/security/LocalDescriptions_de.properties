security=Die Konfiguration des Security-Untersystems.
security.add=F\u00FCgt das Security-Untersystem hinzu.
security.remove=Entfernt das Security-Untersystem.
security.deep-copy-subject-mode=Setzt den Kopiermodus von Subjekten von Sicherheitsmanagern auf Tiefenkopieren, wodurch Kopien von Subjekt-Principals und Berechtigungsnachweisen, falls klonbar, erstellt werden. Sollte auf "true" eingestellt werden, falls das Subjekt ver\u00E4nderbaren Content enth\u00E4lt, der korrumpiert werden kann, wenn mehrere Threads dieselbe Identit\u00E4t besitzen und Cache R\u00E4umungen/Logout Bereinigungen des Subjekts in einem Thread zu Subjektreferenzen f\u00FChren, die andere Threads betreffen.
security-domain-children=Die Sicherheitsdomains.
security-domain=Konfiguriert eine Sicherheitsdomain. Authentifizierung, Autorisierung, ACL, Mapping, Auditing und Identit\u00E4ts-Trust werden hier konfiguriert.
security-domain.add=Hinzuf\u00FCgung einer Sicherheitsdomain.
security-domain.remove=Entfernen einer Sicherheitsdomain.
security-domain.cache-type=F\u00FCgt einen Cache hinzu, um Authentifizierungspr\u00FCfungen zu beschleunigen. Zul\u00E4ssige Werte sind 'default', um eine einfache Map als Cache zu nutzen, und 'infinispan', um einen Infinispan-Cache zu nutzen.
authentication=Authentifikationskonfigurationen f\u00FCr diese Domain. Kann entweder "classic" oder "jaspi" sein.
authentication.classic=Herk\u00F6mmliche Authentifizierungskonfiguration. Konfiguriert eine Liste von zu verwendenden Login-Modulen. 
authentication.classic.add=F\u00FCgt eine herk\u00F6mmliche Authentifizierungskonfiguration hinzu
authentication.classic.remove=Entfernt eine herk\u00F6mmliche Authentifizierungskonfiguration
authentication.classic.login-modules=Liste von Authentifizierungsmodulen
authentication.classic.login-modules.code=Klassenname des zu instantiierenden Moduls. 
authentication.classic.login-modules.flag=Das Flag steuert, wie das Modul in dem gesamten Vorgang mitwirkt. Zul\u00E4ssige Werte sind 'requisite', 'required', 'sufficient' und 'optional'.
authentication.classic.login-modules.module=Name des JBoss Moduls, in dem sich der Login-Modulcode befindet.
authentication.classic.login-modules.module-options=Liste von Moduloptionen bestehend aus Name/Wert-Paaren.
authentication.jaspi=JASPI-Authentifizierungskonfiguration.
authorization=Authorisierungskonfiguration. Konfiguriert eine Liste von zu verwendenden Authorisierungsrichtlinienmodulen. 
authorization.add=F\u00FCgt eine Autorisierungskonfiguration hinzu
authorization.remove=Entfernt eine Autorisierungskonfiguration
authorization.policy-modules=Liste von Autorisierungsmodulen
authorization.policy-modules.code=Klassenname des zu instantiierenden Moduls. 
authorization.policy-modules.flag=Das Flag steuert, wie das Modul in dem gesamten Vorgang mitwirkt. Zul\u00E4ssige Werte sind 'requisite', 'required', 'sufficient' und 'optional'.
authorization.policy-modules.module=Name des JBoss Moduls, in dem sich der Richlinien-Modulcode befindet.
authorization.policy-modules.module-options=Liste von Moduloptionen bestehend aus Name/Wert-Paaren.
mapping=Mapping-Konfiguration. Konfiguriert eine Liste von Mapping-Modulen, die f\u00FCr "principal", "role", "attribute" und "credential" Mapping zu verwenden sind.
mapping.add=F\u00FCgt eine Mapping-Konfiguration hinzu.
mapping.remove=Entfernt eine Mapping-Konfiguration.
mapping.mapping-modules=Liste von Modulen, die Principal, Rolle und Berechtigungsnachweise zuordnen
mapping.mapping-modules.code=Klassenname des zu instantiierenden Moduls. 
mapping.mapping-modules.type=Art des Mappings, das dieses Module durchf\u00FChrt. Zul\u00E4ssige Werte sind 'principal', 'role', 'attribute' und 'credential'.
mapping.mapping-modules.module-options=Liste von Moduloptionen bestehend aus Name/Wert-Paaren.
audit=Auditing-Konfiguration. Konfiguriert eine Liste von zu verwendenden Provider-Modulen. 
audit.add=F\u00FCgt eine Audit-Konfiguration hinzu
audit.remove=Entfernt eine Audit-Konfiguration
audit.provider-modules=Liste von Provider-Modulen
audit.provider-modules.code=Klassenname des zu instantiierenden Moduls. 
audit.provider-modules.flag=Das Flag steuert, wie das Modul in dem gesamten Vorgang mitwirkt. Zul\u00E4ssige Werte sind 'requisite', 'required', 'sufficient' und 'optional'.
audit.provider-modules.module=Name des JBoss Moduls, in dem sich der Audit-Provider-Modulcode befindet.
audit.provider-modules.module-options=Liste von Moduloptionen bestehend aus Name/Wert-Paaren.
authentication-jaspi=JASPI-Authentifikationskonfiguration. Entweder dies oder 'authentication' muss vorhanden sein, aber nicht beides.
acl=Zugriffskontrolllisten- (ACL-) Konfiguration. Konfiguriert eine Liste der zu verwendenden ACL-Module.
acl.add=F\u00FCgt eine ACL-Konfiguration hinzu
acl.remove=Entfernt eine ACL-Konfiguration
acl.acl-modules=Liste von acl-Modulen
acl.acl-modules.code=Klassenname des zu instantiierenden Moduls. 
acl.acl-modules.flag=Das Flag steuert, wie das Modul in dem gesamten Vorgang mitwirkt. Zul\u00E4ssige Werte sind 'requisite', 'required', 'sufficient' und 'optional'.
acl.acl-modules.module=Name des JBoss Moduls, in dem sich der ACL-Provider-Modulcode befindet.
acl.acl-modules.module-options=Liste von Moduloptionen bestehend aus Name/Wert-Paaren.
type=Art des Mappings, das dieses Module durchf\u00FChrt. Zul\u00E4ssige Werte sind 'principal', 'role', 'attribute' und 'credential'.
identity-trust=Identit\u00E4ts-Trust-Konfiguration. Konfiguriert eine Liste von zu verwendenden Trust-Modulen. 
identity-trust.add=F\u00FCgt eine Identit\u00E4ts-Trust-Konfiguration hinzu.
identity-trust.remove=Entfernt eine Identit\u00E4ts-Trust-Konfiguration.
identity-trust.trust-modules=Liste von Trust-Modulen
identity-trust.trust-modules.code=Klassenname des zu instantiierenden Moduls. 
identity-trust.trust-modules.flag=Das Flag steuert, wie das Modul in dem gesamten Vorgang mitwirkt. Zul\u00E4ssige Werte sind 'requisite', 'required', 'sufficient' und 'optional'.
identity-trust.trust-modules.module=Name des JBoss Moduls, in dem sich der Identity-Trust-Modulcode befindet.
identity-trust.trust-modules.module-options=Liste von Moduloptionen bestehend aus Name/Wert-Paaren.
login-module-stack=Liste "benannter" Login-Module, die von jaspi-Authentifizierungsmodulen verwendet werden.
login-module-stack.add=F\u00FCgt eine benannte Login-Modulstapel-Konfiguration hinzu.
login-module-stack.remove=Entfernt eine benannte Login-Modulstapel-Konfiguration.
login-module-stack.login-modules=Liste von Authentifizierungsmodulen
login-module-stack.login-modules.code=Klassenname des zu instantiierenden Moduls. 
login-module-stack.login-modules.flag=Das Flag steuert, wie das Modul in dem gesamten Vorgang mitwirkt. Zul\u00E4ssige Werte sind 'requisite', 'required', 'sufficient' und 'optional'.
login-module-stack.login-modules.module=Name des JBoss Moduls, in dem sich das Login-Modul befindet.
login-module-stack.login-modules.module-options=Liste von Moduloptionen bestehend aus Name/Wert-Paaren.
authentication.jaspi.add=F\u00FCgt eine JASPI-Authentifizierungskonfiguration hinzu
authentication.jaspi.remove=Entfernt eine JASPI-Authentifizierungskonfiguration
authentication.jaspi.auth-modules=Liste von zu verwendenden Authentifizierungsmodulen.
authentication.jaspi.auth-modules.code=Klassenname des zu instantiierenden Moduls. 
authentication.jaspi.auth-modules.module=Name des JBoss Moduls, in dem sich der Auth-Modulcode befindet.
authentication.jaspi.auth-modules.module-options=Liste von Moduloptionen bestehend aus Name/Wert-Paaren.
authentication.jaspi.auth-modules.login-module-stack-ref=Referenz auf einen Login-Modulstapelnamen, der vorher in derselben Sicherheits-Domain konfiguriert wurde.
jsse=JSSE-Konfiguration. Konfiguriert Attribute f\u00FCr Keystores, die zum Einrichten von SSL verwendet werden k\u00F6nnen.
jsse.add=F\u00FCgt eine JSSE-Konfiguration hinzu
jsse.remove=Entfernt eine JSSE-Konfiguration.
jsse.truststore=Konfiguriert einen JSSE-Truststore
jsse.truststore.password=Legt das Passwort f\u00FCr den Truststore fest. Entweder dies oder 'keystore-password' muss vorhanden sein, andernfalls ist die Sicherheitsdomain nutzlos.
jsse.truststore.type=Typ des Truststores. Falls nicht spezifiziert, ist der Typ standardm\u00E4\u00DFig 'JKS'.
jsse.truststore.url=URL des Truststores.
jsse.truststore.provider=Bei Erstellung des Truststores zu verwendender Provider-Klassenname
jsse.truststore.provider-argument=Bei Instantiierung an den Truststore Provider-Constructor zu \u00FCbergebender String-Parameter.
jsse.keystore=Konfiguriert einen JSSE-Keystore
jsse.keystore.password=Legt das Passwort f\u00FCr den Keystore fest. Entweder dies oder 'truststore-password' muss vorhanden sein, andernfalls ist die Sicherheitsdomain nutzlos.
jsse.keystore.type=Typ des Keystores. Falls nicht spezifiziert, ist der Typ standardm\u00E4\u00DFig 'JKS'.
jsse.keystore.url=URL des Keystore.
jsse.keystore.provider=Bei Erstellung des Keystores zu verwendender Provider-Klassenname
jsse.keystore.provider-argument=Bei Instantiierung an den Keystore Provider-Constructor zu \u00FCbergebender String-Parameter.
jsse.key-manager=JSEE Key-Manager-Factory
jsse.key-manager.provider=Bei Erstellung der KeyManagerFactory zu verwendender Provider-Klassenname.
jsse.key-manager.algorithm=Bei Erstellung der KeyManagerFactory zu verwendender Algorithmus.
jsse.trust-manager=JSEE Trust-Manager-Factory
jsse.trust-manager.provider=Bei Erstellung der TrustManagerFactory zu verwendender Provider-Klassenname.
jsse.trust-manager.algorithm=Bei Erstellung der TrustManagerFactory zu verwendender Algorithmus.
jsse.client-alias=Bevorzugter Alias zur Verwendung, wenn KeyManager den Client-Alias w\u00E4hlt.
jsse.server-alias=Bevorzugter Alias zur Verwendung, wenn KeyManager den Server-Alias w\u00E4hlt.
jsse.client-auth=Boolesche Variable, die anzeigt, ob Client-Zertifikate ebenfalls auf Server-Seite authentifiziert werden sollen.
jsse.service-auth-token=Token zum Abrufen von PrivateKeys vom KeyStore.
jsse.cipher-suites=Kommagetrennte Liste von Cipher Suites zur Aktivierung auf SSLSockets.
jsse.protocols=Kommagetrennte Liste von Protokollen zur Aktivierung auf SSLSockets.
jsse.additional-properties=Zus\u00E4tzliche Eigenschaften, die zur Konfiguration von JSSE n\u00F6tig sein k\u00F6nnen.
list-cached-principals=Listet die im Authentifizierungs-Cache f\u00FCr diese Sicherheitsdomain gespeicherten Principals auf.
flush-cache=Entfernt die im Authentifizierungs-Cache f\u00FCr diese Sicherheitsdomain gespeicherten Eintr\u00E4ge. Ein einzelner Eintrag kann gel\u00F6scht werden, indem der Principal-Parameter mit dem Benutzernamen als Wert verwendet wird. Falls kein Parameter an die Operation \u00FCbergeben wird, werden alle Eintr\u00E4ge gel\u00F6scht.
vault=Security Vault f\u00FCr Attribute.
vault.add=F\u00FCgt eine Security-Vault-Konfiguration hinzu
vault.remove=Entfernt eine Security-Vault-Konfiguration
vault.code=Vollst\u00E4ndiger Name der Security Vault Implementierung.
vault.options=Security Vault Optionen.
