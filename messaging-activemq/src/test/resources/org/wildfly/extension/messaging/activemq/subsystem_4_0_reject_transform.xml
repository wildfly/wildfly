<subsystem xmlns="urn:jboss:domain:messaging-activemq:4.0">
    <global-client thread-pool-max-size="${global.client.thread-pool-max-size:32}"
                   scheduled-thread-pool-max-size="${global.client.scheduled.thread-pool-max-size:54}" />

    <http-connector name="client-http"
                    socket-binding="http"
                    endpoint="http"
                    server-name="=foo">
        <param name="batch-delay" value="${batch.delay:50}"/>
    </http-connector>

    <remote-connector name="client-netty-throughput"
                      socket-binding="messaging-throughput">
        <param name="batch-delay" value="${batch.delay:50}"/>
    </remote-connector>

    <in-vm-connector name="in-vm-client"
                     server-id="${my.server-id:0}"/>

    <connector name="myconnector-client"
               factory-class="org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnectorFactory">
        <param name="host" value="192.168.1.2"/>
        <param name="port" value="5445"/>
        <param name="key-store-path" value="path/to/server.jks"/>
        <param name="key-store-password" value="${VAULT::server-key::key-store-password::sharedKey}"/>
    </connector>

    <discovery-group name="client-discovery-group-1"
                     socket-binding="group-t-binding"/>

    <connection-factory name="InVmConnectionFactory"
                        connectors="in-vm-client"
                        entries="${connection-factory.entries.entry:java:/ClientConnectionFactory}" />

    <pooled-connection-factory name="hornetq-ra-local"
                                   transaction="local"
                                   user="alice"
                                   password="alicepassword"
                                   use-auto-recovery="${use.auto.recovery:true}"
                                   connectors="in-vm-client"
                                   entries="java:/JmsLocal"/>

    <external-jms-queue name="testQueue"
                   entries="${jms-queue.entry:queue/client-test}"/>
    <external-jms-queue name="testQueue2"
                   entries="java:/global/queue/test java:/global/queue/client-test2"/>
    <external-jms-topic name="testTopic"
                   entries="${jms-topic.entry:topic/client-test}"/>

    <server name="default">

        <security elytron-domain="elytronDomain"/>
        <cluster user="testuser">
            <credential-reference store="cs1" alias="testuser"/>
        </cluster>
        <journal datasource="fooDS"
                 database="mysql"
                 jdbc-lock-expiration="891"
                 jdbc-lock-renew-period="892"
                 jdbc-network-timeout="4567"
                 messages-table="MY_MESSAGES"
                 bindings-table="MY_BINDINGS"
                 jms-bindings-table="MY_JMS_BINDINGS"
                 large-messages-table="MY_LARGE_MESSAGES"
                 node-manager-store-table="MY_NODE_MANAGER_STORE"
                 page-store-table="MY_PAGE_STORE" />

        <replication-colocated>
            <master />
        </replication-colocated>

        <address-setting name="#"
                         auto-create-queues="true"
                         auto-delete-queues="true"
                         auto-create-addresses="false"
                         auto-delete-addresses="false" />
        <remote-connector name="netty"
                                           socket-binding="messaging-throughput">
            <param name="batch-delay" value="${batch.delay:50}"/>
        </remote-connector>

        <in-vm-connector name="in-vm" server-id="${my.server-id:0}"/>

        <http-connector name="http"
                        socket-binding="http"
                        endpoint="http"
                        server-name="=foo">
            <param name="batch-delay" value="${batch.delay:50}"/>
        </http-connector>

        <cluster-connection name="cc1"
                            address="${address:cc1-address}"
                            connector-name="netty"
                            producer-window-size="${producer.windows.size:5678}"
                            static-connectors="in-vm netty" />

        <bridge name="bridge1"
                queue-name="${queue.name:coreQueueA}"
                forwarding-address="${forwarding.address:forwardingaddress1}"
                producer-window-size="${producer.windows.size:5678}"
                static-connectors="in-vm netty"
                user="${user:Brian}">
            <credential-reference clear-text="secret1"/>
        </bridge>
        <bridge name="bridge2"
                queue-name="${queue.name:coreQueueA}"
                forwarding-address="${forwarding.address:forwardingaddress1}"
                producer-window-size="${producer.windows.size:5678}"
                static-connectors="in-vm netty"
                user="${user:Brian}"
                password="${password:secret}">
        </bridge>

        <connection-factory name="otherConnectionFactory"
                            discovery-group="groupC"
                            entries="otherConnectionFactory"
                            deserialization-black-list="org.foo.Bar org.foo.Baz"
                            deserialization-white-list="org.bar.Bar org.baz.Baz"
                            initial-message-packet-size="${initial.message.packet.size:12345}"/>

        <pooled-connection-factory name="hornetq-ra-local"
                                   transaction="local"
                                   user="alice"
                                   password="alicepassword"
                                   connectors="in-vm"
                                   entries="java:/JmsLocal"
                                   statistics-enabled="true">
            <inbound-config
                    rebalance-connections="true" />
            <outbound-config
                    allow-local-transactions="true" />

        </pooled-connection-factory>
        <pooled-connection-factory name="pcf-with-credential-reference"
                                   entries="java:/JmsLocal2"
                                   connectors="in-vm"
                                   user="foo"
                                   deserialization-black-list="org.foo.Bar org.foo.Baz"
                                   deserialization-white-list="org.bar.Bar org.baz.Baz">
            <credential-reference clear-text="passwordOut!"/>
        </pooled-connection-factory>

        <broadcast-group name="groupT"
                         jgroups-channel="ee"
                         jgroups-cluster="activemq-cluster"
                         connectors="http"/>

        <discovery-group name="groupU"
                         jgroups-channel="ee"
                         jgroups-cluster="activemq-cluster"/>
    </server>
    <server name="other">
        <replication-master />
    </server>
</subsystem>
