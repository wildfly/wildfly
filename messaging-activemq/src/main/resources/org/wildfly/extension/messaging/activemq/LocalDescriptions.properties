acceptor.add.params=A set of key-value pairs understood by the acceptor factory-class and used to configure it.
acceptor.add=Operation adding an acceptor
acceptor.factory-class=Class name of the factory class that can instantiate the acceptor.
acceptor.http-listener=The Undertow's http-listener that handles HTTP upgrade requests.
acceptor.params=A key-value pair understood by the acceptor factory-class and used to configure it.
acceptor.remote=A remote acceptor
acceptor.remove=Operation adding an acceptor
acceptor.server-id=The server id.
acceptor.socket-binding=The socket binding that the acceptor will use to accept connections.
acceptor.start=Starts the acceptor.
acceptor.started=Whether this acceptor is started.
acceptor.stop=Stops the acceptor.
acceptor=An acceptor defines a way in which connections can be made to the ActiveMQ server.
acceptor.upgrade-legacy=Also accepts to upgrade HTTP request from legacy (HornetQ) clients.
address-setting.add=Operation adding an address-setting
address-setting.address-full-policy=Determines what happens when an address where max-size-bytes is specified becomes full. (PAGE, DROP or BLOCK)
address-setting.auto-create-jms-queues=Determines whether ActiveMQ should automatically create a JMS queue corresponding to the address-settings match when a JMS producer or a consumer is tries to use such a queue.
address-setting.auto-create-jms-queues.deprecated=This attribute is no longer supported by ActiveMQ.
address-setting.auto-delete-jms-queues=Determines Whether ActiveMQ should automatically delete auto-created JMS queues when they have no consumers and no messages.
address-setting.auto-delete-jms-queues.deprecated=This attribute is no longer supported by ActiveMQ.
address-setting.auto-create-addresses=Determines whether ActiveMQ should automatically create an addresses corresponding to the address-settings match when a producer or a consumer is tries to use such a queue.
address-setting.auto-delete-addresses=Determines Whether ActiveMQ should automatically delete auto-created addresses when they have no consumers and no messages.
address-setting.auto-create-queues=Determines whether ActiveMQ should automatically create a queue corresponding to the address-settings match when a producer or a consumer is tries to use such a queue.
address-setting.auto-delete-queues=Determines Whether ActiveMQ should automatically delete auto-created queues when they have no consumers and no messages.
address-setting.dead-letter-address=The dead letter address
address-setting.expiry-address=Defines where to send a message that has expired.
address-setting.expiry-delay=Defines the expiration time that will be used for messages using the default expiration time
address-setting.last-value-queue=Defines whether a queue only uses last values or not
address-setting.max-delivery-attempts=Defines how many time a cancelled message can be redelivered before sending to the dead-letter-address
address-setting.max-redelivery-delay=Maximum value for the redelivery-delay (in ms).
address-setting.max-size-bytes=The max bytes size.
address-setting.message-counter-history-day-limit=Day limit for the message counter history.
address-setting.page-max-cache-size=The number of page files to keep in memory to optimize IO during paging navigation.
address-setting.page-size-bytes=The paging size.
address-setting.redelivery-delay=Defines how long to wait before attempting redelivery of a cancelled message
address-setting.redelivery-multiplier=Multiplier to apply to the redelivery-delay parameter
address-setting.redistribution-delay=Defines how long to wait when the last consumer is closed on a queue before redistributing any messages
address-setting.remove=Operation removing an existing address-setting
address-setting.send-to-dla-on-no-route=If this parameter is set to true for that address, if the message is not routed to any queues it will instead be sent to the dead letter address (DLA) for that address, if it exists.
address-setting.slow-consumer-check-period=How often to check for slow consumers on a particular queue.
address-setting.slow-consumer-policy=Determine what happens when a slow consumer is identified.
address-setting.slow-consumer-threshold=The minimum rate of message consumption allowed before a consumer is considered slow.
address-setting=An address setting defines some attributes that are defined against an address wildcard rather than a specific queue.
bindings-directory.path=The directory in which the bindings journal lives. The default is ${jboss.server.data.dir}/messagingbindings.
bridge.add=Operation adding a bridge.
bridge.check-period=The period (in milliseconds) between client failure check.
bridge.confirmation-window-size=The confirmation-window-size to use for the connection used to forward messages to the target node.
bridge.connection-ttl=The maximum time (in milliseconds) for which the connections used by the bridges are considered alive (in the absence of heartbeat).
bridge.credential-reference=Credential (from Credential Store) to authenticate the bridge
bridge.credential-reference.store=The name of the credential store holding the alias to credential
bridge.credential-reference.type=The type of credential this reference is denoting
bridge.credential-reference.alias=The alias which denotes stored secret or credential in the store
bridge.credential-reference.clear-text=Secret specified using clear text (check credential store way of supplying credential/secrets to services)
bridge.discovery-group=The name of the discovery group used by this bridge. Must be undefined (null) if 'static-connectors' is defined.
bridge.failover-on-server-shutdown.deprecated=Deprecated. Has no runtime effect and a warning will be issued if an attempt is made to set the value of this attribute.
bridge.failover-on-server-shutdown=Deprecated. Has no runtime effect and a warning will be issued if an attempt is made to set the value of this attribute.
bridge.filter=An optional filter string. If specified then only messages which match the filter expression specified will be forwarded. The filter string follows the ActiveMQ filter expression syntax described in the ActiveMQ documentation.
bridge.forwarding-address=The address on the target server that the message will be forwarded to. If a forwarding address is not specified then the original destination of the message will be retained.
bridge.ha=Whether or not this bridge should support high availability. True means it will connect to any available server in a cluster and support failover.
bridge.initial-connect-attempts=The number of attempts to connect initially with this bridge.
bridge.max-retry-interval=The maximum interval of time used to retry connections
bridge.min-large-message-size=The minimum size (in bytes) for a message before it is considered as a large message.
bridge.password=The password to use when creating the bridge connection to the remote server. If it is not specified the default cluster password specified by the cluster-password attribute in the root messaging subsystem resource will be used.
bridge.producer-window-size=Producer flow control size on the bridge.
bridge.queue-name=The unique name of the local queue that the bridge consumes from.
bridge.reconnect-attempts-on-same-node=The total number of reconnect attempts on the same node the bridge will make before giving up and shutting down. A value of -1 signifies an unlimited number of attempts.
bridge.reconnect-attempts=The total number of reconnect attempts the bridge will make before giving up and shutting down. A value of -1 signifies an unlimited number of attempts.
bridge.remove=Operation removing a bridge.
bridge.retry-interval-multiplier=A multiplier to apply to the time since the last retry to compute the time to the next retry. This allows you to implement an exponential backoff between retry attempts.
bridge.retry-interval=The period in milliseconds between subsequent reconnection attempts, if the connection to the target server has failed.
bridge.start=Starts the bridge.
bridge.started=Whether the bridge is started.
bridge.static-connectors=A list of names of statically defined connectors used by this bridge. Must be undefined (null) if 'discovery-group-name' is defined.
bridge.stop=Stops the bridge.
bridge.transformer-class-name=The name of a user-defined class which implements the org.apache.activemq.artemis.core.server.cluster.Transformer interface.
bridge.use-duplicate-detection=Whether the bridge will automatically insert a duplicate id property into each message that it forwards.
bridge.user=The user name to use when creating the bridge connection to the remote server. If it is not specified the default cluster user specified by the cluster-user attribute in the root messaging subsystem resource will be used.
bridge=The function of a bridge is to consume messages from a source queue, and forward them to a target address, typically on a different ActiveMQ server.
broadcast-group.add=Add a broadcast group.
broadcast-group.broadcast-period=The period in milliseconds between consecutive broadcasts.
broadcast-group.connectors=Specifies the names of connectors that will be broadcast.
broadcast-group.get-connector-pairs-as-json=Returns the pairs of live-backup connectors that are broadcasted by this broadcast group using JSON serialization.
broadcast-group.group-address.deprecated=Use instead a socket-binding to specify the broadcast group's group address.
broadcast-group.group-address=Deprecated. The multicast address to which the data will be broadcast. It is a class D IP address in the range 224.0.0.0 to 239.255.255.255, inclusive. The address 224.0.0.0 is reserved and is not available for use.
broadcast-group.group-port.deprecated=Use instead a socket-binding to specify the broadcast group's group port.
broadcast-group.group-port=Deprecated. The UDP port number used for broadcasting.
broadcast-group.jgroups-cluster=The logical cluster name.
broadcast-group.jgroups-channel=References the name of a JGroups channel.  If undefined, the default channel will be used.
broadcast-group.jgroups-stack=References the name of a JGroups channel factory.
broadcast-group.jgroups-stack.deprecated=Deprecated. Use jgroups-channel instead.
broadcast-group.local-bind-address.deprecated=Use instead a socket-binding to specify the broadcast group's local bind address.
broadcast-group.local-bind-address=Deprecated. The local bind address that the datagram socket is bound to. If you have multiple network interfaces on your server, you would specify which one you wish to use for broadcasts by setting this attribute. If this attribute is not specified then the socket will be bound to the wildcard address, an IP address chosen by the kernel.
broadcast-group.local-bind-port.deprecated=Use instead a socket-binding to specify the broadcast group's local bind port.
broadcast-group.local-bind-port=Deprecated. The local port to which the datagram socket is bound. Normally you would just use the default value of -1 which signifies that an anonymous port should be used. This parameter is always specified in conjunction with local-bind-address.
broadcast-group.remove=Remove a broadcast group.
broadcast-group.socket-binding=The broadcast group socket binding.
broadcast-group.start=Starts the broadcast group.
broadcast-group.started=Whether the broadcast group is started.
broadcast-group.stop=Stops the broadcast group.
broadcast-group=A broadcast group is the means by which a server broadcasts connectors over the network.
cluster-connection.add=Operation adding a cluster connection
cluster-connection.allow-direct-connections-only=Whether, if a node learns of the existence of a node that is more than 1 hop away, we do not create a bridge for direct cluster connection. Only relevant if 'static-connectors' is defined.
cluster-connection.call-failover-timeout=The timeout to use when fail over is in process (in ms) for remote calls made by the cluster connection.
cluster-connection.call-timeout=The timeout (in ms) for remote calls made by the cluster connection.
cluster-connection.check-period=The period (in milliseconds) between client failure check.
cluster-connection.cluster-connection-address=Each cluster connection only applies to messages sent to an address that starts with this value.
cluster-connection.confirmation-window-size=The confirmation-window-size to use for the connection used to forward messages to a target node.
cluster-connection.connection-ttl=The maximum time (in milliseconds) for which the connections used by the cluster connections are considered alive (in the absence of heartbeat).
cluster-connection.connector-name=The name of connector to use for live connection
cluster-connection.discovery-group=The discovery group used to obtain the list of other servers in the cluster to which this cluster connection will make connections. Must be undefined (null) if 'static-connectors' is defined.
cluster-connection.message-load-balancing-type=The type of message load balancing provided by the cluster connection.
cluster-connection.get-nodes.reply=A map where keys are node IDs and values are the addresses used to connect to the nodes.
cluster-connection.get-nodes=Returns a map of the nodes connected to this cluster connection, where keys are node IDs and values are the addresses used to connect to the nodes.
cluster-connection.get-static-connectors-as-json=Returns the list of static connectors as a string in JSON format.
cluster-connection.initial-connect-attempts=The number of attempts to connect initially with this cluster connection.
cluster-connection.max-hops=The maximum number of times a message can be forwarded. ActiveMQ can be configured to also load balance messages to nodes which might be connected to it only indirectly with other ActiveMQ servers as intermediates in a chain.
cluster-connection.max-retry-interval=The maximum interval of time used to retry connections
cluster-connection.min-large-message-size=The minimum size (in bytes) for a message before it is considered as a large message.
cluster-connection.node-id=The node ID used by this cluster connection.
cluster-connection.notification-attempts=How many times the cluster connection will broadcast itself
cluster-connection.notification-interval=How often the cluster connection will broadcast itself
cluster-connection.producer-window-size=Producer flow control size on the cluster connection.
cluster-connection.reconnect-attempts=The total number of reconnect attempts the bridge will make before giving up and shutting down. A value of -1 signifies an unlimited number of attempts.
cluster-connection.remove=Operation removing a cluster connection
cluster-connection.retry-interval-multiplier=A multiplier to apply to the time since the last retry to compute the time to the next retry. This allows you to implement an exponential backoff between retry attempts.
cluster-connection.retry-interval=The period in milliseconds between subsequent attempts to reconnect to a target server, if the connection to the target server has failed.
cluster-connection.start=Starts the cluster connection.
cluster-connection.started=Whether the cluster connection is started.
cluster-connection.static-connectors=The statically defined list of connectors to which this cluster connection will make connections. Must be undefined (null) if 'discovery-group-name' is defined.
cluster-connection.stop=Stops the cluster connection.
cluster-connection.topology=The topology of the nodes that this cluster connection is aware of.
cluster-connection.use-duplicate-detection=Whether the bridge will automatically insert a duplicate id property into each message that it forwards.
cluster-connection=Cluster connections group servers into clusters so that messages can be load balanced between the nodes of the cluster.
configuration=Configuration
connection-factory.add-jndi.jndi-binding=Jndi binding
connection-factory.add-jndi=Adds the factory to another JNDI binding
connection-factory.add=Adds a connection factory.
connection-factory.auto-group=Whether or not message grouping is automatically used
connection-factory.block-on-acknowledge=True to set block on acknowledge.
connection-factory.block-on-durable-send=True to set block on durable send.
connection-factory.block-on-non-durable-send=True to set block on non durable send.
connection-factory.cache-large-message-client=True to cache large messages.
connection-factory.call-failover-timeout=The timeout to use when fail over is in process (in ms).
connection-factory.call-timeout=The call time out.
connection-factory.client-failure-check-period=The client failure check period.
connection-factory.client-id=The client id.
connection-factory.compress-large-messages=Whether large messages should be compressed.
connection-factory.confirmation-window-size=The confirmation window size.
connection-factory.connection-factory=Defines a connection factory.
connection-factory.connection-load-balancing-policy-class-name=Name of a class implementing a client-side load balancing policy that a client can use to load balance sessions across different nodes in a cluster.
connection-factory.connection-ttl=The connection ttl.
connection-factory.connectors=Defines the connectors. These are stored in a map by connector name (with an undefined value). It is possible to pass a list of connector names when writing this attribute.
connection-factory.consumer-max-rate=The consumer max rate.
connection-factory.consumer-window-size=The consumer window size.
connection-factory.deserialization-black-list=A list of class names (separated by whitespaces) that are black-listed to be used in serialization of JMS ObjectMessage.
connection-factory.deserialization-white-list=A list of class names (separated by whitespaces) that are white-listed to be used in serialization of JMS ObjectMessage.
connection-factory.discovery-group=The discovery group name.
connection-factory.discovery-jgroups-channel=The name of JGroups channel used for discovery by the legacy connection factory.
connection-factory.discovery-socket-binding=The socket binding used for discovery by the legacy connection factory.
connection-factory.discovery-initial-wait-timeout.deprecated=Has no runtime effect and a warning will be issued if an attempt is made to set the value of this attribute.
connection-factory.discovery-initial-wait-timeout=The discovery initial wait time out.
connection-factory.discovery-refresh-timeout=Period the discovery group waits after receiving the last broadcast from a particular server before removing that server's connector pair entry from its list.
connection-factory.dups-ok-batch-size=The dups ok batch size.
connection-factory.entries=The jndi names the connection factory should be bound to.
connection-factory.factory-type=The type of connection factory.
connection-factory.failover-on-initial-connection=True to fail over on initial connection.
connection-factory.failover-on-server-shutdown.deprecated=Deprecated. Has no runtime effect and a warning will be issued if an attempt is made to set the value of this attribute.
connection-factory.failover-on-server-shutdown=True to fail over on server shutdown.
connection-factory.group-id=The group id.
connection-factory.ha=Whether the connection factory supports High Availability.
connection-factory.initial-connect-attempts=The number of attempts for the initial connection to the server.
connection-factory.initial-message-packet-size=The initial size of messages created through this factory.
connection-factory.max-retry-interval=The max retry interval.
connection-factory.min-large-message-size=The min large message size.
connection-factory.pre-acknowledge=True to pre-acknowledge.
connection-factory.producer-max-rate=The producer max rate.
connection-factory.producer-window-size=The producer window size.
connection-factory.protocol-manager-factory=The protocol manager factory used by this connection factory (it must implement org.apache.activemq.artemis.spi.core.remoting.ClientProtocolManagerFactory).
connection-factory.reconnect-attempts=The reconnect attempts.
connection-factory.remove-jndi.jndi-binding=Jndi binding
connection-factory.remove-jndi=Removes the JNDI binding
connection-factory.remove=Removes a connection factory.
connection-factory.retry-interval-multiplier=The retry interval multiplier.
connection-factory.retry-interval=The retry interval.
connection-factory.scheduled-thread-pool-max-size=The scheduled thread pool max size.
connection-factory.thread-pool-max-size=The thread pool max size.
connection-factory.transaction-batch-size=The transaction batch size.
connection-factory.use-global-pools=True to use global pools.
connection-factory=Defines a connection factory.
connector-service.add=Operation adding a connector service
connector-service.factory-class=Class name of the factory class that can instantiate the connector service.
connector-service.params=A key/value pair understood by the connector service's factory-class
connector-service.remove=Operation removing a connector service
connector-service=A connector service allows to integrate external components with Apache ActiveMQ Artemis to send and receive messages.
connector.add.params=A set of key-value pairs understood by the connector factory-class and used to configure it.
connector.add=Operation adding a connector
connector.endpoint=The http-acceptor that serves as the endpoint of this http-connector.
connector.server-name=The name of the ActiveMQ Artemis server that will be connected to on the remote server. If undefined, the name of the parent ActiveMQ Artemis server will be used (suitable if the http-connector is used to connect to the parent server)
connector.factory-class=Class name of the factory class that can instantiate the connector.
connector.params=A key-value pair understood by the connector factory-class and used to configure it.
connector.remove=Operation removing a connector
connector.server-id=The server id.
connector.socket-binding=The socket binding that the connector will use to create connections.
connector=A connector can be used by a client to define how it connects to a server.
core-address.binding-names=The names of all bindings (both queues and diverts) bound to this address.
core-address.get-roles-as-json.reply=A string JSON format.
core-address.get-roles-as-json=Returns the roles (name and permissions) associated to this address using JSON serialization.
core-address.number-of-bytes-per-page=The number of bytes used by each page for this address.
core-address.number-of-pages=The number of pages used by this address.
core-address.queue-names=The names of the queues associated with the address.
core-address.roles.consume=Whether the role has permission to consume from the address.
core-address.roles.create-durable-queue=Whether the role has permission to create a durable queue.
core-address.roles.create-non-durable-queue=Whether the role has permission to create a non-durable queue.
core-address.roles.delete-durable-queue=Whether the role has permission to delete a durable queue.
core-address.roles.delete-non-durable-queue=Whether the role has permission to delete a non-durable queue.
core-address.roles.deprecated=Attribute is deprecated in favor of xyz (todo real reason)
core-address.roles.manage=Whether the role has permission to manage the address.
core-address.roles.name=The name of the security role.
core-address.roles.role=A security role associated with the address.
core-address.roles.send=Whether the role has permission to send to the address.
core-address.roles=Deprecated (use the role children instead). A list of the security roles (name and permissions) associated with the address.
core-address=A runtime-only resource representing a ActiveMQ "address". Zero or more queues can be bound to a single address. When a message is routed, it is routed to the set of queues bound to the message's address.
deployed=Runtime resources exposed by messaging resources included in this deployment.
discovery-group.add=Add a discovery group.
discovery-group.group-address.deprecated=Use instead a socket-binding to specify the discovery group's group address.
discovery-group.group-address=(Deprecated) Multicast IP address of the group to listen on.
discovery-group.group-port.deprecated=Use instead a socket-binding to specify the discovery group's group port.
discovery-group.group-port=(Deprecated) UDP port of the multicast group.
discovery-group.initial-wait-timeout=Period, in ms, to wait for an initial broadcast to give us at least one node in the cluster.
discovery-group.jgroups-cluster=The logical cluster name.
discovery-group.jgroups-channel=References the name of a JGroups channel.  If undefined, the default channel will be used.
discovery-group.jgroups-stack=References the name of a JGroups channel factory.
discovery-group.jgroups-stack.deprecated=Deprecated. Use jgroups-channel instead.
discovery-group.local-bind-address.deprecated=Use instead a socket-binding to specify the discovery group's local bind address.
discovery-group.local-bind-address=(Deprecated) The local bind address that the datagram socket is bound to.
discovery-group.refresh-timeout=Period the discovery group waits after receiving the last broadcast from a particular server before removing that server's connector pair entry from its list.
discovery-group.remove=Remove a discovery group.
discovery-group.socket-binding=The discovery group socket binding.
discovery-group=Multicast group to listen to receive broadcast from other servers announcing their connectors.
divert.add=Operation adding a divert
divert.divert-address=Address to divert from
divert.exclusive=Whether the divert is exclusive, meaning that the message is diverted to the new address, and does not go to the old address at all.
divert.filter=An optional filter string. If specified then only messages which match the filter expression specified will be diverted. The filter string follows the ActiveMQ filter expression syntax described in the ActiveMQ documentation.
divert.forwarding-address=Address to divert to
divert.remove=Operation removing a divert
divert.routing-name=Routing name of the divert
divert.transformer-class-name=The name of a class used to transform the message's body or properties before it is diverted.
divert=A messaging resource that allows you to transparently divert messages routed to one address to some other address, without making any changes to any client application logic.
factory-class=The factory class.
grouping-handler.add=Operation adding the grouping handler. Only one grouping handler is allowed.
grouping-handler.group-timeout=How long a group binding will be used, -1 means for ever. Bindings are removed after this wait elapses (valid for both LOCAL and REMOTE handlers).
grouping-handler.grouping-handler-address=A reference to a cluster connection and the address it uses.
grouping-handler.reaper-period=How often the reaper will be run to check for timed out group bindings (only valid for LOCAL handlers).
grouping-handler.remove=Operation removing the grouping handler.
grouping-handler.timeout=How long to wait for a handling decision to be made; an exception will be thrown during the send if this timeout is reached, ensuring that strict ordering is kept.
grouping-handler.type=Whether the handler is the single "Local" handler for the cluster, which makes handling decisions, or a "Remote" handler which converses with the local handler.
grouping-handler=Makes decisions about which node in a cluster should handle a message with a group id assigned.
ha-policy.add=Add an HA Policy to configure high availability for this ActiveMQ server.
ha-policy.allow-failback=Whether a server will automatically stop when a another places a request to take over its place. The use case is when a regular server stops and its backup takes over its duties, later the main server restarts and requests the server (the former backup) to stop operating.
ha-policy.backup-port-offset=The offset to use for the Connectors and Acceptors when creating a new backup server.
ha-policy.backup-request-retries=How many times the live server will try to request a backup, -1 means for ever.
ha-policy.backup-request-retry-interval=How long (in ms) to wait for retries between attempts to request a backup server.
ha-policy.check-for-live-server=Whether to check the cluster for another server using the same server ID when starting up.
ha-policy.cluster-name=Name of the cluster used for replication. If it is undefined, the name of the first cluster connection defined in the configuration will be used.
ha-policy.excluded-connectors=The connectors that must not have their port offset.
ha-policy.failover-on-server-shutdown=Whether the server must failover when it is normally shutdown.
ha-policy.group-name=If set, backup servers will only pair with live servers with matching group-name.
ha-policy.initial-replication-sync-timeout=How long to wait until the initiation replication is synchronized.
ha-policy.max-backups=Whether or not this live server will accept backup requests from other live servers.
ha-policy.max-saved-replicated-journal-size=This specifies how many times a replicated backup server can restart after moving its files on start. Once there are this number of backup journal files the server will stop permanently after if fails back.
ha-policy.remove=Remove the HA Policy.
ha-policy.request-backup=If true then the server will request a backup on another node.
ha-policy.restart-backup=Will this server, if a backup, restart once it has been stopped because of failback or scaling down.
ha-policy.scale-down-cluster-name=Name of the cluster used to scale down.
ha-policy.scale-down-connectors=List of connectors used to form the scale-down cluster.
ha-policy.scale-down-discovery-group=Name of the discovery group used to build the scale-down cluster
ha-policy.scale-down-group-name=Name of the group used to scale down.
ha-policy.scale-down=Configure whether this server send its messages to another live server in the scale-down cluster when it is shutdown cleanly.
ha-policy=A messaging resource that allows you to configure High Availability for the ActiveMQ server (the value of ha-policy can be live-only, replication-master, replication-slave, or replication-colocated).
legacy-connection-factory=Connection Factory resource used by legacy HornetQ clients to connect to the messaging-activemq subsystem.
messaging-activemq.global-client-scheduled-thread-pool-max-size=Maximum size of the pool of threads used by all ActiveMQ clients running inside this server. If the attribute is undefined (by default), ActiveMQ will configure it to be 8 x the number of available processors.
messaging-activemq.global-client-thread-pool-max-size=Maximum size of the pool of scheduled threads used by all ActiveMQ clients running inside this server.
server.active=Whether the server is active (and accepting connections) or passive (in backup mode, waiting for failover).
server.add=Operation adding a ActiveMQ server.
server.allow-failback=Whether this server will automatically shutdown if the original live server comes back up.
server.async-connection-execution-enabled=Whether incoming packets on the server should be handed off to a thread from the thread pool for processing. False if they should be handled on the remoting thread.
server.backup-group-name=The name of a set of live/backups that should replicate with each other
server.backup=Whether this server is a backup server.
server.check-for-live-server=If a replicated live server should check the current cluster to see if there is already a live server with the same node id
server.close-connections-for-address.ip-address=An IP address in string format.
server.close-connections-for-address.reply=True if any connections were closed, false otherwise.
server.close-connections-for-address=Closes all the connections of clients connected to this server whose remote address contains the specified IP address.
server.close-connections-for-user=Closes all the connections of clients connected to this server under the specified user name.
server.close-connections-for-user.reply=True if any connections were closed, false otherwise.
server.close-connections-for-user.user=An user name.
server.close-consumer-connections-for-address=Closes all the connections of consumers that are consuming from queues bound to the specified address.
server.close-consumer-connections-for-address.reply=True if any connections were closed, false otherwise.
server.close-consumer-connections-for-address.address-match=An ActiveMQ address match.
server.cluster-password=The password used by cluster connections to communicate between the clustered nodes.
server.cluster-user=The user used by cluster connections to communicate between the clustered nodes.
server.cluster-credential-reference=Credential (from Credential Store) to authenticate to cluster
server.cluster-credential-reference.store=The name of the credential store holding the alias to credential
server.cluster-credential-reference.type=The type of credential this reference is denoting
server.cluster-credential-reference.alias=The alias which denotes stored secret or credential in the store
server.cluster-credential-reference.clear-text=Secret specified using clear text (check credential store way of supplying credential/secrets to services)
server.clustered.deprecated=To create a clustered ActiveMQ server, define at least one cluster-connection.
server.clustered=Whether the server is clustered.
server.commit-prepared-transaction.reply=True if the transaction was successfully committed, false otherwise.
server.commit-prepared-transaction.transaction-as-base-64=The Base64 representation of a transaction XID.
server.commit-prepared-transaction=Heuristically commits a prepared transaction.
server.connection-ttl-override=If set, this will override how long (in ms) to keep a connection alive without receiving a ping.
server.create-bindings-dir=Whether the server should create the bindings directory on start up.
server.create-journal-dir=Whether the server should create the journal directory on start up.
server.export-journal=Export the journal to a XML file
server.failback-delay=How long to wait before failback occurs on live server restart.
server.failover-on-shutdown=Whether this backup server (if it is a backup server) should come live on a normal server shutdown.
server.force-failover=Force the messaging server to stop and notify clients to failover.
server.get-address-settings-as-json.address-match=An address match.
server.get-address-settings-as-json.reply=A JSON string containing an array of address settings details.
server.get-address-settings-as-json=Returns the address settings as a JSON string for an address match.
server.get-connectors-as-json.reply=A JSON string containing the connectors information.
server.get-connectors-as-json=Returns the connectors configured for this server in a JSON string containing the connectors information.
server.get-last-sent-message-id.address-name=The name of the address.
server.get-last-sent-message-id.reply=The message id.
server.get-last-sent-message-id.session-id=The session id.
server.get-last-sent-message-id=Returns the ID of the last message sent from the given session to the given address.
server.get-roles-as-json.address-match=An address match.
server.get-roles-as-json.reply=A JSON string containing a list, each element of which is a set of properties describing a security role.
server.get-roles-as-json=Gets the roles (as a JSON string) for a specific address match.
server.get-roles.address-match=An address match.
server.get-roles.consume=Whether the role has permission to consume from the matching addresses.
server.get-roles.create-durable-queue=Whether the role has permission to create a durable queue for the matching addresses.
server.get-roles.create-non-durable-queue=Whether the role has permission to create a non-durable queue for the matching addresses.
server.get-roles.delete-durable-queue=Whether the role has permission to delete a durable queue for the matching addresses.
server.get-roles.delete-non-durable-queue=Whether the role has permission to delete a non-durable queue for the matching addresses.
server.get-roles.manage=Whether the role has permission to manage the matching addresses.
server.get-roles.name=The name of the role.
server.get-roles.reply=A list, each element of which is a set of properties describing a security role.
server.get-roles.send=Whether the role has permission to send to the matching addresses.
server.get-roles=Get the security roles for a specific address match.
server.get-session-creation-time.reply=The creation time, represented as a string showing the number of milliseconds since the epoch.
server.get-session-creation-time.session-id=The session id.
server.get-session-creation-time=Gets the session's creation time.
server.id-cache-size=The size of the cache for pre-creating message IDs.
server.import-journal=Import an XML file to the journal
server.import-journal.file=The XML file to import in the journal
server.import-journal.legacy-prefixes=Do not remove prefixes from legacy (Artemis 1.x) imports
server.incoming-interceptors=The list of incoming interceptor classes used by this server.
server.incoming-interceptors.name=The name of the interceptor class.
server.incoming-interceptors.module=The name of the module that provides the interceptor class.
server.jmx-domain=The JMX domain used to register internal ActiveMQ MBeans in the MBeanServer.
server.jmx-management-enabled=Whether ActiveMQ should expose its internal management API via JMX. This is not recommended, as accessing these MBeans can lead to inconsistent configuration.
server.journal-bindings-table=Name of the JDBC table to store the bindings.
server.journal-jms-bindings-table=Name of the JDBC table to store the JMS bindings.
server.journal-jms-bindings-table.deprecated=Artemis 2 no longer stores JMS bindings in its journal.
server.journal-buffer-size=The size of the internal buffer on the journal.
server.journal-buffer-timeout=The timeout (in nanoseconds) used to flush internal buffers on the journal.
server.journal-compact-min-files=The minimal number of journal data files before we can start compacting.
server.journal-compact-percentage=The percentage of live data on which we consider compacting the journal.
server.journal-datasource=Name of the DataSource for the JDBC store.
server.journal-database=Type of the database (can be used to customize SQL statements). If this attribute is not specified, the type of the database will be determined based on the DataSource metadata.
server.journal-file-size=The size (in bytes) of each journal file.
server.journal-jdbc-lock-expiration=The time the HA lock is considered valid without keeping it alive.
server.journal-jdbc-lock-renew-period=The renewal period for the HA lock to keep it alive.
server.journal-jdbc-network-timeout=The timeout used by the JDBC connection to detect network issues.
server.journal-large-messages-table=Name of the JDBC table to store the large messages.
server.journal-max-io=The maximum number of write requests that can be in the AIO queue at any one time.
server.journal-messages-table=Name of the JDBC table to store the messages.
server.journal-min-files=How many journal files to pre-create.
server.journal-node-manager-store-table=Name of the JDBC table to store the node manager.
server.journal-page-store-table=Name of the JDBC table to store pages.
server.journal-pool-files=The number of journal files that can be reused. ActiveMQ will create as many files as needed however when reclaiming files it will shrink back to the value (-1 means no limit).
server.journal-sync-non-transactional=Whether to wait for non transaction data to be synced to the journal before returning a response to the client.
server.journal-sync-transactional=Whether to wait for transaction data to be synchronized to the journal before returning a response to the client.
server.journal-type=The type of journal to use.
server.list-all-consumers-as-json.reply=A JSON string containing an array of JMSConsumerInfo objects.
server.list-all-consumers-as-json=Lists all the consumers.
server.list-connection-ids.reply=A list of strings, where each string is a connection ID.
server.list-connection-ids=Lists the IDs of all the connections connected to this server.
server.list-connections-as-json.reply=A JSON string containing an array of JMSConnectionInfo objects.
server.list-connections-as-json=Lists all JMS connections.
server.list-consumers-as-json.connection-id=The connection id.
server.list-consumers-as-json.reply=A JSON string containing an array of JMSConsumerInfo objects.
server.list-consumers-as-json=Lists all the consumers which belongs to the JMS Connection specified by the connection id.
server.list-heuristic-committed-transactions.reply=A list of strings. The Strings are Base-64 representation of the transaction XID.
server.list-heuristic-committed-transactions=Lists transactions which have been heuristically committed.
server.list-heuristic-rolled-back-transactions.reply=A list of strings. The Strings are Base-64 representation of the transaction XID.
server.list-heuristic-rolled-back-transactions=Lists transactions which have been heuristically rolled back.
server.list-prepared-transaction-details-as-html.reply=A HTML string containing a table of transaction details.
server.list-prepared-transaction-details-as-html=Lists all the prepared transaction, sorted by date, oldest first, with details, in HTML format.
server.list-prepared-transaction-details-as-json.reply=A JSON string containing an array of transaction details.
server.list-prepared-transaction-details-as-json=Lists all the prepared transaction, sorted by date, oldest first, with details, in JSON format.
server.list-prepared-transaction-jms-details-as-html.reply=The returned String is an HTML string containing a table of transaction details.
server.list-prepared-transaction-jms-details-as-html=Lists all the prepared transactions, sorted by date, oldest first, in a HTML format.
server.list-prepared-transaction-jms-details-as-json.reply=The returned String is a JSON string containing an array of transaction details.
server.list-prepared-transaction-jms-details-as-json=Lists all the prepared transactions, sorted by date, oldest first, in a JSON format.
server.list-prepared-transactions.reply=A list of strings. The Strings are Base-64 representation of the transaction XID and can be used to heuristically commit or rollback the transactions.
server.list-prepared-transactions=Lists all the prepared transaction, sorted by date, oldest first.
server.list-producers-info-as-json.reply=A JSON string containing an array of producer details.
server.list-producers-info-as-json=For all sessions, lists information about message producers using JSON serialization.
server.list-remote-addresses.ip-address=An IP address in string format.
server.list-remote-addresses.reply=A list of strings, where the strings are remote client addresses.
server.list-remote-addresses=Lists the addresses of all the clients connected to the given address. If an ip-address argument is supplied, only those clients whose remote address string includes the given ip-address string will be returned.
server.list-sessions-as-json.connection-id=The connection id.
server.list-sessions-as-json.reply=A JSON string containing an array of session ids.
server.list-sessions-as-json=Lists all the sessions IDs for the specified connection id.
server.list-sessions.connection-id=The connection id.
server.list-sessions.reply=A list of strings, where each string is a session ID.
server.list-sessions=Lists all the sessions IDs for the specified connection ID.
server.list-target-destinations.reply=A JSON string containing an array of address names.
server.list-target-destinations.session-id=The session id.
server.list-target-destinations=Lists all addresses to which the designated session has sent messages.
server.live-connector-ref.deprecated=Has no runtime effect and a warning will be issued if an attempt is made to set the value of this attribute.
server.live-connector-ref=The name of the connector used to connect to the live connector. If this server is not a backup that uses shared nothing HA, it's value is "undefined".
server.log-journal-write-rate=Whether to periodically log the journal's write rate and flush rate.
server.management-address=Address to send management messages to.
server.management-notification-address=The name of the address that consumers bind to  to receive management notifications.
server.max-saved-replicated-journal-size=The maximum number of backup journals to keep after failback occurs.
server.memory-measure-interval=Frequency to sample JVM memory in ms (or -1 to disable memory sampling)
server.memory-warning-threshold=Percentage of available memory which if exceeded results in a warning log
server.message-counter-enabled.deprecated=Deprecated. Use statistics-enabled.
server.message-counter-enabled=Whether message counters are enabled.
server.message-counter-max-day-history=How many days to keep message counter history.
server.message-counter-sample-period=The sample period (in ms) to use for message counters.
server.message-expiry-scan-period=How often (in ms) to scan for expired messages.
server.message-expiry-thread-priority=The priority of the thread expiring messages.
server.name=Not used.
server.override-in-vm-security=Whether the ActiveMQ server will override security credentials for in-vm connections.
server.outgoing-interceptors=The list of outgoing interceptor classes used by this server.
server.outgoing-interceptors.name=The name of the interceptor class.
server.outgoing-interceptors.module=The name of the module that provides the interceptor class.
server.page-max-concurrent-io=The maximum number of concurrent reads allowed on paging
server.perf-blast-pages=Number of pages to add to check the journal performance (only meant to be used to test performance of pages).
server.perf-blast-pages.deprecated=Artemis 2 no longer supports this attribute.
server.persist-delivery-count-before-delivery=Whether the delivery count is persisted before delivery. False means that this only happens after a message has been cancelled.
server.persist-id-cache=Whether IDs are persisted to the journal.
server.persistence-enabled=Whether the server will use the file based journal for persistence.
server.remove=Operation removing a ActiveMQ server.
server.replication-clustername=The name of the cluster connection to replicate from if more than one cluster connection is configured
server.reset-all-message-counter-histories=Resets all message counters history.
server.reset-all-message-counters=Resets all message counters.
server.resolve-address-setting.address-full-policy=Determines what happens when an address where max-size-bytes is specified becomes full. (PAGE, DROP or BLOCK)
server.resolve-address-setting.auto-create-jms-queues=Determines whether ActiveMQ should automatically create a JMS queue corresponding to the address-settings match when a JMS producer or a consumer is tries to use such a queue.
server.resolve-address-setting.auto-create-jms-queues.deprecated=This attribute is no longer supported by ActiveMQ.
server.resolve-address-setting.auto-delete-jms-queues=Determines Whether ActiveMQ should automatically delete auto-created JMS queues when they have no consumers and no messages.
server.resolve-address-setting.auto-delete-jms-queues.deprecated=This attribute is no longer supported by ActiveMQ.
server.resolve-address-setting.auto-create-addresses=Determines whether ActiveMQ should automatically create an addresses corresponding to the address-settings match when a producer or a consumer is tries to use such a queue.
server.resolve-address-setting.auto-delete-addresses=Determines Whether ActiveMQ should automatically delete auto-created addresses when they have no consumers and no messages.
server.resolve-address-setting.auto-create-queues=Determines whether ActiveMQ should automatically create a queue corresponding to the address-settings match when a producer or a consumer is tries to use such a queue.
server.resolve-address-setting.auto-delete-queues=Determines Whether ActiveMQ should automatically delete auto-created queues when they have no consumers and no messages.
server.resolve-address-setting.activemq-address=The address to resolve.
server.resolve-address-setting.dead-letter-address=The dead letter address
server.resolve-address-setting.expiry-address=Defines where to send a message that has expired.
server.resolve-address-setting.expiry-delay=Defines the expiration time that will be used for messages using the default expiration time
server.resolve-address-setting.last-value-queue=Defines whether a queue only uses last values or not
server.resolve-address-setting.max-delivery-attempts=Defines how many time a cancelled message can be redelivered before sending to the dead-letter-address
server.resolve-address-setting.max-redelivery-delay=Maximum value for the redelivery-delay (in ms).
server.resolve-address-setting.max-size-bytes=The max bytes size.
server.resolve-address-setting.message-counter-history-day-limit=Day limit for the message counter history.
server.resolve-address-setting.page-max-cache-size=The number of page files to keep in memory to optimize IO during paging navigation.
server.resolve-address-setting.page-size-bytes=The paging size.
server.resolve-address-setting.redelivery-delay=Defines how long to wait before attempting redelivery of a cancelled message
server.resolve-address-setting.redelivery-multiplier=Multiplier to apply to the redelivery-delay parameter
server.resolve-address-setting.redistribution-delay=Defines how long to wait when the last consumer is closed on a queue before redistributing any messages
server.resolve-address-setting.send-to-dla-on-no-route=If this parameter is set to true for that address, if the message is not routed to any queues it will instead be sent to the dead letter address (DLA) for that address, if it exists.
server.resolve-address-setting.slow-consumer-check-period=How often to check for slow consumers on a particular queue.
server.resolve-address-setting.slow-consumer-policy=Determine what happens when a slow consumer is identified.
server.resolve-address-setting.slow-consumer-threshold=The minimum rate of message consumption allowed before a consumer is considered slow.
server.resolve-address-setting=Resolve the address settings using ActiveMQ hierarchy of address settings.
server.rollback-prepared-transaction.reply=True if the transaction was successfully rolled back, false otherwise.
server.rollback-prepared-transaction.transaction-as-base-64=The Base64 representation of a transaction XID.
server.rollback-prepared-transaction=Heuristically rolls back a prepared transaction.
server.run-sync-speed-test=Whether on startup to perform a diagnostic test on how fast your disk can sync. Useful when determining performance issues.
server.run-sync-speed-test.deprecated=Artemis 2 no longer supports this attribute.
server.scheduled-thread-pool-max-size=The number of threads that the main scheduled thread pool has.
server.elytron-domain=The name of the Elytron security domain used to verify user and role information.
server.security-domain=The security domain to use to verify user and role information.
server.security-domain.deprecated=Deprecated. Replaced by the elytron-domain attribute to use a security domain configured by Elytron.
server.security-enabled=Whether security is enabled.
server.security-invalidation-interval=How long (in ms) to wait before invalidating the security cache.
server.server-dump-interval=How often to dump basic runtime information to the server log. A value less than 1 disables this feature.
server.shared-store=Whether this server is using a shared store for failover.
server.started=Whether this server is started.
server.statistics-enabled=Whether gathering of statistics such as message counters are enabled.
server.thread-pool-max-size=The number of threads that the main thread pool has. -1 means no limit.
server.transaction-timeout-scan-period=How often (in ms) to scan for timeout transactions.
server.transaction-timeout=How long (in ms) before a transaction can be removed from the resource manager after create time.
server.version=The server's version.
server.wild-card-routing-enabled=Whether the server supports wild card routing.
server=An ActiveMQ server instance.
statistics=Statistics for this pooled-connection-factory resource (available only when statistics-enabled is true).
host=The host of the HTTP connector.
http-acceptor=Defines a way in which remote connections can be made to the ActiveMQ server over HTTP.
http-connector=Used by a remote client to define how it connects to a server over HTTP.
http-listener=The Undertow's http-listener that handles HTTP upgrade requests.
in-vm-acceptor=Defines a way in which in-VM connections can be made to the ActiveMQ server.
in-vm-connector=Used by an in-VM client to define how it connects to a server.
jms-bridge.add-messageID-in-header=If true, then the original message's message ID will be appended in the message sent to the destination in the header AMQ_BRIDGE_MSG_ID_LIST. If the message is bridged more than once, each message ID will be appended.
jms-bridge.add=Add a new JMS bridge.
jms-bridge.client-id=The JMS client ID to use when creating/looking up the subscription if it is durable and the source destination is a topic.
jms-bridge.failure-retry-interval=The amount of time in milliseconds to wait between trying to recreate connections to the source or target servers when the bridge has detected they have failed.
jms-bridge.max-batch-size=The maximum number of messages to consume from the source destination before sending them in a batch to the target destination. Its value must >= 1.
jms-bridge.max-batch-time=The maximum number of milliseconds to wait before sending a batch to target, even if the number of messages consumed has not reached max-batch-size. Its value must be -1 to represent 'wait forever', or >= 1 to specify an actual time.
jms-bridge.max-retries=The number of times to attempt to recreate connections to the source or target servers when the bridge has detected they have failed. The bridge will give up after trying this number of times. -1 represents 'try forever'.
jms-bridge.module=The name of AS7 module containing the resources required to lookup source and target JMS resources.
jms-bridge.pause=Pause the JMS bridge.
jms-bridge.paused=Whether the JMS bridge is paused.
jms-bridge.quality-of-service=The desired quality of service mode (AT_MOST_ONCE, DUPLICATES_OK or ONCE_AND_ONLY_ONCE).
jms-bridge.remove=Remove an existing JMS bridge.
jms-bridge.resume=Resume the JMS bridge.
jms-bridge.selector=A JMS selector expression used for consuming messages from the source destination. Only messages that match the selector expression will be bridged from the source to the target destination.
jms-bridge.source-connection-factory=The name of the source connection factory to lookup on the source messaging server.
jms-bridge.source-context=The properties used to configure the source JNDI initial context.
jms-bridge.source-destination=The name of the source destination to lookup on the source messaging server.
jms-bridge.source-password=The password for creating the source connection.
jms-bridge.source-user=The name of the user for creating the source connection.
jms-bridge.source-credential-reference=Credential (from Credential Store) to authenticate source connection
jms-bridge.source-credential-reference.store=The name of the credential store holding the alias to credential
jms-bridge.source-credential-reference.type=The type of credential this reference is denoting
jms-bridge.source-credential-reference.alias=The alias which denotes stored secret or credential in the store
jms-bridge.source-credential-reference.clear-text=Secret specified using clear text (check credential store way of supplying credential/secrets to services)
jms-bridge.start=Start the JMS bridge.
jms-bridge.started=Whether the JMS bridge is started.
jms-bridge.stop=Stop the JMS bridge.
jms-bridge.subscription-name=The name of the subscription if it is durable and the source destination is a topic.
jms-bridge.target-connection-factory=The name of the target connection factory to lookup on the target messaging server.
jms-bridge.target-context=The properties used to configure the target JNDI initial context.
jms-bridge.target-destination=The name of the target destination to lookup on the target messaging server.
jms-bridge.target-password=The password for creating the target connection.
jms-bridge.target-user=The name of the user for creating the target connection.
jms-bridge.target-credential-reference=Credential (from Credential Store) to authenticate target connection
jms-bridge.target-credential-reference.store=The name of the credential store holding the alias to credential
jms-bridge.target-credential-reference.type=The type of credential this reference is denoting
jms-bridge.target-credential-reference.alias=The alias which denotes stored secret or credential in the store
jms-bridge.target-credential-reference.clear-text=Secret specified using clear text (check credential store way of supplying credential/secrets to services)
jms-bridge=A JMS bridge instance.
jms-queue.add-jndi.jndi-binding=Jndi binding
jms-queue.add-jndi=Adds the queue to another JNDI binding
jms-queue.add=Add a JMS queue.
jms-queue.consumer-count=The number of consumers consuming messages from this queue.
jms-queue.dead-letter-address=The address to send dead messages to.
jms-queue.delivering-count=The number of messages that this queue is currently delivering to its consumers.
jms-queue.durable=Whether the queue is durable or not.
jms-queue.elements.JMSPriority=The message's priority.
jms-queue.elements.JMSTimestamp=The message's timestamp, in ms since the epoch.
jms-queue.elements.JMSExpiration=The message's expiration time.
jms-queue.elements.JMSDeliveryMode=The delivery mode for the message, PERSISTENT or NON_PERSISTENT.
jms-queue.elements.JMSMessageID=The message's id.
jms-queue.entries=The jndi names the queue will be bound to.
jms-queue.expiry-address=The address to send expired messages to.
jms-queue.legacy-entries=The jndi names the queue will be bound to.
jms-queue.list-delivering-messages.consumerName=The name of the consumer that the messages are delivered to.
jms-queue.list-delivering-messages.elements=The delivering messages.
jms-queue.list-delivering-messages.reply=A list where each element is a map of message properties to their value.
jms-queue.list-delivering-messages=List the messages are currently being delivered.
jms-queue.list-delivering-messages-as-json.reply=A string in JSON format representing a list where each element is a map of message properties to their value.
jms-queue.list-delivering-messages-as-json=List the messages are currently being delivered as a string in JSON format
jms-queue.list-messages.JMSDeliveryMode=The delivery mode for the message, PERSISTENT or NON_PERSISTENT.
jms-queue.list-messages.JMSExpiration=The message's expiration time.
jms-queue.list-messages.JMSMessageID=The message ID.
jms-queue.list-messages.JMSPriority=The message's priority.
jms-queue.list-messages.JMSTimestamp=The message's timestamp, in ms since the epoch.
jms-queue.list-messages.filter=A message filter. An undefined or empty filter will match all messages.
jms-queue.list-messages=List all messages in the queue that match the filter
jms-queue.list-scheduled-messages-as-json.reply=A string in JSON format representing a list where each element is a map of message properties to their value.
jms-queue.list-scheduled-messages-as-json=List the messages scheduled for delivery as a string in JSON format.
jms-queue.list-scheduled-messages.JMSDeliveryMode=The delivery mode for the message, PERSISTENT or NON_PERSISTENT.
jms-queue.list-scheduled-messages.JMSExpiration=The message's expiration time.
jms-queue.list-scheduled-messages.JMSMessageID=The message ID.
jms-queue.list-scheduled-messages.JMSPriority=The message's priority.
jms-queue.list-scheduled-messages.JMSTimestamp=The message's timestamp, in ms since the epoch.
jms-queue.list-scheduled-messages.reply=A list where each element is a map of message properties to their value.
jms-queue.list-scheduled-messages=List the messages scheduled for delivery.
jms-queue.message-count=The number of messages currently in this queue.
jms-queue.message.JMSDeliveryMode=The delivery mode for the message, PERSISTENT or NON_PERSISTENT.
jms-queue.message.JMSExpiration=The message's expiration time.
jms-queue.message.JMSMessageID=The message ID.
jms-queue.message.JMSPriority=The message's priority.
jms-queue.message.JMSTimestamp=The message's timestamp, in ms since the epoch.
jms-queue.messages-added=The number of messages added to this queue since it was created.
jms-queue.paused=Whether the queue is paused.
jms-queue.queue-address=The queue address defines what address is used for routing messages.
jms-queue.remove-jndi.jndi-binding=Jndi binding
jms-queue.remove-jndi=Removes the JNDI binding
jms-queue.remove=Remove a JMS queue.
jms-queue.reset-message-counter=Reset the message counters.
jms-queue.scheduled-count=The number of scheduled messages in this queue.
jms-queue.selector=The queue selector.
jms-queue.temporary=Whether the queue is temporary.
jms-queue=Defines a JMS queue.
jms-topic.add-jndi.jndi-binding=Jndi binding
jms-topic.add-jndi=Adds the queue to another JNDI binding
jms-topic.add=Add a JMS topic.
jms-topic.client-id=The client ID.
jms-topic.consumers.browseOnly=Whether the consumer is only browsing the queue.
jms-topic.consumers.connectionID= The connection id.
jms-topic.consumers.consumerID=The consumer ID.
jms-topic.consumers.creationTime=Time when the consumer was created, in ms since the epoch.
jms-topic.consumers.sessionID=The consumer's session id.
jms-topic.count-messages-for-subscription.client-id=The client ID.
jms-topic.count-messages-for-subscription.filter==A message filter. An undefined or empty filter will match all messages.
jms-topic.count-messages-for-subscription.subscription-name=The name of the durable subscription.
jms-topic.count-messages-for-subscription=Count the number of messages matching the filter for the given subscription.
jms-topic.delivering-count=The number of messages that this queue is currently delivering to its consumers.
jms-topic.drop-all-subscriptions=Drop all subscriptions from this topic.
jms-topic.drop-durable-subscription.client-id=The client ID.
jms-topic.drop-durable-subscription.filter==A message filter. An undefined or empty filter will match all messages.
jms-topic.drop-durable-subscription.subscription-name=The name of the durable subscription.
jms-topic.drop-durable-subscription=Drop a durable subscription
jms-topic.durable-message-count=The number of messages for all durable subscribers for this topic.
jms-topic.durable-subscription-count=The number of durable subscribers for this topic.
jms-topic.entries=The jndi names the topic will be bound to.
jms-topic.filter=A JMS message filter.
jms-topic.legacy-entries=The legacy jndi names the topic will be bound to.
jms-topic.list-all-subscriptions-as-json.reply=A JSON formatted string.
jms-topic.list-all-subscriptions-as-json=List all subscriptions as a string in JSON format.
jms-topic.list-all-subscriptions.clientID=The client id.
jms-topic.list-all-subscriptions.consumers=The queue consumers.
jms-topic.list-all-subscriptions.deliveringCount=The number of messages that this queue is currently delivering to its consumers.
jms-topic.list-all-subscriptions.durable=Whether the queue is durable or not.
jms-topic.list-all-subscriptions.messageCount=The number of messages currently in this queue.
jms-topic.list-all-subscriptions.name=The name of the queue.
jms-topic.list-all-subscriptions.queueName=The full name of the queue.
jms-topic.list-all-subscriptions.reply=A list, each of whose elements describes a single subscription.
jms-topic.list-all-subscriptions.selector=The queue selector.
jms-topic.list-all-subscriptions=List all subscriptions.
jms-topic.list-durable-subscriptions-as-json=List only the durable subscriptions, as a string in JSON format.
jms-topic.list-durable-subscriptions.clientID=The client id.
jms-topic.list-durable-subscriptions.consumers=The queue consumers.
jms-topic.list-durable-subscriptions.deliveringCount=The number of messages that this queue is currently delivering to its consumers.
jms-topic.list-durable-subscriptions.durable=Whether the queue is durable or not.
jms-topic.list-durable-subscriptions.messageCount=The number of messages currently in this queue.
jms-topic.list-durable-subscriptions.name=The name of the queue.
jms-topic.list-durable-subscriptions.queueName=The full name of the queue.
jms-topic.list-durable-subscriptions.reply=A list, each of whose elements describes a single subscription.
jms-topic.list-durable-subscriptions.selector=The queue selector.
jms-topic.list-durable-subscriptions=List only the durable subscriptions.
jms-topic.list-messages-for-subscription-as-json.queue-name=The name of the queue representing a subscription
jms-topic.list-messages-for-subscription-as-json=List all the messages for the given subscription as a string in JSON format.
jms-topic.list-messages-for-subscription.JMSDeliveryMode=The delivery mode for the message, PERSISTENT or NON_PERSISTENT.
jms-topic.list-messages-for-subscription.JMSExpiration=The message's expiration time.
jms-topic.list-messages-for-subscription.JMSMessageID=The message ID.
jms-topic.list-messages-for-subscription.JMSPriority=The message's priority.
jms-topic.list-messages-for-subscription.JMSTimestamp=The message's timestamp, in ms since the epoch.
jms-topic.list-messages-for-subscription.queue-name=The name of the queue representing a subscription
jms-topic.list-messages-for-subscription.reply=A list where each element is a map of message properties to their value.
jms-topic.list-messages-for-subscription=List all the messages for the given subscription.
jms-topic.list-non-durable-subscriptions-as-json=List only the non-durable subscriptions, as a string in JSON format.
jms-topic.list-non-durable-subscriptions.clientID=The client id.
jms-topic.list-non-durable-subscriptions.consumers=The queue consumers.
jms-topic.list-non-durable-subscriptions.deliveringCount=The number of messages that this queue is currently delivering to its consumers.
jms-topic.list-non-durable-subscriptions.durable=Whether the queue is durable or not.
jms-topic.list-non-durable-subscriptions.messageCount=The number of messages currently in this queue.
jms-topic.list-non-durable-subscriptions.name=The name of the queue.
jms-topic.list-non-durable-subscriptions.queueName=The full name of the queue.
jms-topic.list-non-durable-subscriptions.reply=A list, each of whose elements describes a single subscription.
jms-topic.list-non-durable-subscriptions.selector=The queue selector.
jms-topic.list-non-durable-subscriptions=List only the non-durable subscriptions.
jms-topic.list-subscriptions.clientID=The client id.
jms-topic.list-subscriptions.consumers=The queue consumers.
jms-topic.list-subscriptions.deliveringCount=The number of messages that this queue is currently delivering to its consumers.
jms-topic.list-subscriptions.durable=Whether the queue is durable or not.
jms-topic.list-subscriptions.messageCount=The number of messages currently in this queue.
jms-topic.list-subscriptions.name=The name of the queue.
jms-topic.list-subscriptions.queueName=The full name of the queue.
jms-topic.list-subscriptions.selector=The queue selector.
jms-topic.message-count=The number of messages currently in this queue.
jms-topic.messages-added=The number of messages added to this queue since it was created.
jms-topic.non-durable-message-count=The number of messages for all non-durable subscribers for this topic.
jms-topic.non-durable-subscription-count=The number of non-durable subscribers for this topic.
jms-topic.remove-jndi.jndi-binding=Jndi binding
jms-topic.remove-jndi=Removes the JNDI binding
jms-topic.remove-messages.filter=A message filter. An undefined or empty filter will match all messages.
jms-topic.remove-messages.reply=The number of removed messages.
jms-topic.remove-messages=Remove messages matching the given filter from the topic.
jms-topic.remove=Remove a JMS topic.
jms-topic.subscription-count=The number of (durable and non-durable) subscribers for this topic.
jms-topic.subscription-name=The name of the durable subscription.
jms-topic.temporary=Whether the topic is temporary.
jms-topic.topic-address=The address the topic points to.
jms-topic=Defines a JMS topic.
jndi-binding=The name of the binding for JNDI
journal-directory.path=The directory in which the message journal lives. The default is ${jboss.server.data.dir}/messagingjournal.
large-messages-directory.path=The directory in which large messages are stored. The default is ${jboss.server.data.dir}/messaginglargemessages.
messaging-activemq.add=Operation adding the messaging-activemq subsystem
messaging-activemq.remove=Operation removing the messaging-activemq subsystem
messaging-activemq=The messaging-activemq subsystem.
paging-directory.path=The directory where page files are stored. The default is ${jboss.server.data.dir}/messagingpaging.
path.add=Add a file system path.
path.path=The actual filesystem path. Treated as an absolute path, unless the 'relative-to' attribute is specified, in which case the value is treated as relative to that path. If treated as an absolute path, the actual runtime pathname specified by the value of this attribute will be determined as follows: If this value is already absolute, then the value is directly used.  Otherwise the runtime pathname is resolved in a system-dependent way.  On UNIX systems, a relative pathname is made absolute by resolving it against the current user directory. On Microsoft Windows systems, a relative pathname is made absolute by resolving it against the current directory of the drive named by the pathname, if any; if not, it is resolved against the current user directory.
path.relative-to=The name of another previously named path, or of one of the standard paths provided by the system. If 'relative-to' is provided, the value of the 'path' attribute is treated as relative to the path specified by this attribute. The standard paths provided by the system include: jboss.home - the root directory of the JBoss AS distribution, user.home - user's home directory, user.dir - user's current working directory, java.home - java installation directory, jboss.server.base.dir - root directory for an individual server instance, jboss.server.data.dir - directory the server will use for persistent data file storage, jboss.server.log.dir - directory the server will use for log file storage, jboss.server.tmp.dir - directory the server will use for temporary file storage, and jboss.domain.servers.dir - directory under which a host controller will create the working area for individual server instances.
path.remove=Remove a path.
path=A filesystem path pointing to one of the locations where ActiveMQ stores persistent data.
pooled-connection-factory.add=Adds a managed connection factory.
pooled-connection-factory.allow-local-transactions=Allow local transactions for outbond JMS Sessions (it does not apply to JMSContext that explicitly disallows it).
pooled-connection-factory.auto-group=The autogroup.
pooled-connection-factory.block-on-acknowledge=True to set block on acknowledge.
pooled-connection-factory.block-on-durable-send=True to set block on durable send.
pooled-connection-factory.block-on-non-durable-send=True to set block on non durable send.
pooled-connection-factory.cache-large-message-client=True to cache large messages.
pooled-connection-factory.call-failover-timeout=The timeout to use when fail over is in process (in ms).
pooled-connection-factory.call-timeout=The call time out.
pooled-connection-factory.client-failure-check-period=The client failure check period.
pooled-connection-factory.client-id=The client id.
pooled-connection-factory.compress-large-messages=Whether large messages should be compressed.
pooled-connection-factory.confirmation-window-size=The confirmation window size.
pooled-connection-factory.connection-factory=Defines a connection factory.
pooled-connection-factory.connection-load-balancing-policy-class-name=Name of a class implementing a client-side load balancing policy that a client can use to load balance sessions across different nodes in a cluster.
pooled-connection-factory.connection-ttl=The connection ttl.
pooled-connection-factory.connectors=Defines the connectors. These are stored in a map by connector name (with an undefined value). It is possible to pass a list of connector names when writing this attribute.
pooled-connection-factory.consumer-max-rate=The consumer max rate.
pooled-connection-factory.consumer-window-size=The consumer window size.
pooled-connection-factory.credential-reference=Credential (from Credential Store) to authenticate the pooled connection factory
pooled-connection-factory.credential-reference.store=The name of the credential store holding the alias to credential
pooled-connection-factory.credential-reference.type=The type of credential this reference is denoting
pooled-connection-factory.credential-reference.alias=The alias which denotes stored secret or credential in the store
pooled-connection-factory.credential-reference.clear-text=Secret specified using clear text (check credential store way of supplying credential/secrets to services)
pooled-connection-factory.deserialization-black-list=A list of class names (separated by whitespaces) that are black-listed to be used in serialization of JMS ObjectMessage.
pooled-connection-factory.deserialization-white-list=A list of class names (separated by whitespaces) that are white-listed to be used in serialization of JMS ObjectMessage.
pooled-connection-factory.discovery-group=The discovery group name.
pooled-connection-factory.discovery-initial-wait-timeout.deprecated=Has no runtime effect and a warning will be issued if an attempt is made to set the value of this attribute.
pooled-connection-factory.discovery-initial-wait-timeout=The discovery initial wait time out.
pooled-connection-factory.dups-ok-batch-size=The dups ok batch size.
pooled-connection-factory.enlistment-trace=Enables IronJacamar to record enlistment traces for this pooled-connection-factory. This attribute is undefined by default and the behaviour is driven by the presence of the ironjacamar.disable_enlistment_trace system property.
pooled-connection-factory.entries=The jndi names the connection factory should be bound to.
pooled-connection-factory.failover-on-initial-connection=True to fail over on initial connection.
pooled-connection-factory.failover-on-server-shutdown.deprecated=Deprecated. Has no runtime effect and a warning will be issued if an attempt is made to set the value of this attribute.
pooled-connection-factory.failover-on-server-shutdown=True to fail over on server shutdown.
pooled-connection-factory.group-id=The group id.
pooled-connection-factory.ha=Whether the connection factory supports High Availability.
pooled-connection-factory.initial-connect-attempts=The number of attempts to connect initially with this factory.
pooled-connection-factory.initial-message-packet-size=The initial size of messages created through this factory.
pooled-connection-factory.jndi-params=The JNDI params to use for locating the destination for incoming connections.
pooled-connection-factory.managed-connection-pool=The class name of the managed connection pool used by this pooled-connection-factory.
pooled-connection-factory.max-pool-size=The maximum size for the pool
pooled-connection-factory.max-retry-interval=The max retry interval.
pooled-connection-factory.min-large-message-size=The min large message size.
pooled-connection-factory.min-pool-size=The minimum size for the pool
pooled-connection-factory.password=The default password to use with this connection factory. This is only needed when pointing the connection factory to a remote host.
pooled-connection-factory.pre-acknowledge=True to pre-acknowledge.
pooled-connection-factory.producer-max-rate=The producer max rate.
pooled-connection-factory.producer-window-size=The producer window size.
pooled-connection-factory.protocol-manager-factory=The protocol manager factory used by this pooled connection factory.
pooled-connection-factory.rebalance-connections=Rebalance inbound connections when cluster topology changes.
pooled-connection-factory.reconnect-attempts=The reconnect attempts. By default, a pooled connection factory will try to reconnect infinitely to the messaging server(s).
pooled-connection-factory.remove=Removes managed a connection factory.
pooled-connection-factory.retry-interval-multiplier=The retry interval multiplier.
pooled-connection-factory.retry-interval=The retry interval.
pooled-connection-factory.scheduled-thread-pool-max-size=The scheduled thread pool max size.
pooled-connection-factory.setup-attempts=The number of times to set up an MDB endpoint
pooled-connection-factory.setup-interval=The interval between attempts at setting up an MDB endpoint.
pooled-connection-factory.statistics-enabled=Define whether runtime statistics are enabled.
pooled-connection-factory.thread-pool-max-size=The thread pool max size.
pooled-connection-factory.transaction-batch-size=The transaction batch size.
pooled-connection-factory.transaction=The type of transaction supported by this pooled connection factory (can be LOCAL, NONE or XA, default is XA).
pooled-connection-factory.use-auto-recovery=True to use auto recovery.
pooled-connection-factory.use-global-pools=True to use global pools.
pooled-connection-factory.use-jndi=Use JNDI to locate the destination for incoming connections
pooled-connection-factory.use-local-tx=Use a local transaction for incoming sessions
pooled-connection-factory.user=The default username to use with this connection factory. This is only needed when pointing the connection factory to a remote host.
pooled-connection-factory=Defines a managed connection factory.
queue.add=Operation adding a core queue.
queue.change-message-priority.message-id=The message ID.
queue.change-message-priority.new-priority=The new priority (between 0 and 9).
queue.change-message-priority.reply=True if the message priority was changed, false otherwise.
queue.change-message-priority=Change the priority of the message corresponding to the given message-id.
queue.change-messages-priority.filter=A message filter. An undefined or empty filter will match all messages.
queue.change-messages-priority.new-priority=The new priority (between 0 and 9).
queue.change-messages-priority.reply=The number of changed messages.
queue.change-messages-priority=Change the priority of the messages corresponding to the given filter.
queue.consumer-count=The number of consumers consuming messages from this queue.
queue.count-messages.filter=A message filter. An undefined or empty filter will match all messages.
queue.count-messages=Returns the number of the messages in the queue matching the given filter.
queue.dead-letter-address=The address to send the queue's dead messages to.
queue.delivering-count=The number of messages that this queue is currently delivering to its consumers.
queue.durable=Defines whether the queue is durable.
queue.elements.address=Te address this message is sent to.
queue.elements.durable=Whether this message is durable or not.
queue.elements.expiration=The expiration time of this message.
queue.elements.messageID=The message ID.
queue.elements.priority=The message priority. Values range from 0 (less priority) to 9 (more priority) inclusive.
queue.elements.type=The message type. 0 = Default; 2 = Object; 3 = Text; 4 = Bytes; 5 = Map; 6 = Stream
queue.elements.userID=The userID - this is an optional user specified UUID that can be set to identify the message.
queue.expire-message.message-id=The message ID.
queue.expire-message.reply=True if the message was expired, false otherwise.
queue.expire-message=Expire the message corresponding to the given message-id.
queue.expire-messages.filter=A message filter. An undefined or empty filter will match all messages.
queue.expire-messages.reply=The number of expired messages.
queue.expire-messages=Expire the messages matching the given filter.
queue.expiry-address=The address to send the queue's expired messages to.
queue.filter=A queue message filter definition. An undefined or empty filter will match all messages.
queue.id=The id of the queue.
queue.list-consumers-as-json.reply=A string in JSON format with the list of all consumers
queue.list-consumers-as-json=List all the existing consumers on the queue as a string in JSON format.
queue.list-consumers.reply=A list, each of whose elements details a queue consumer.
queue.list-consumers=List all the existing consumers on the queue.
queue.list-delivering-messages-as-json.reply=A string in JSON format representing a list where each element is a map of message properties to their value.
queue.list-delivering-messages-as-json=List the messages are currently being delivered as a string in JSON format
queue.list-delivering-messages.consumerName=The name of the consumer that the messages are delivered to.
queue.list-delivering-messages.elements=The delivering messages.
queue.list-delivering-messages.reply=A list where each element is a map of message properties to their value.
queue.list-delivering-messages=List the messages are currently being delivered.
queue.list-message-counter-as-html.reply=A string in HTML format.
queue.list-message-counter-as-html=List the message counter as a string in HTML format.
queue.list-message-counter-as-json.reply=A string in JSON format.
queue.list-message-counter-as-json=List the message counter as a string in JSON format.
queue.list-message-counter-history-as-html.reply=A string in HTML format as a string in HTML format.
queue.list-message-counter-history-as-html=List the message counter history.
queue.list-message-counter-history-as-json.reply=A string in JSON format
queue.list-message-counter-history-as-json=List the message counter history as a string in JSON format.
queue.list-message-counter-history.reply=Details of the message counter history.
queue.list-message-counter-history=List the message counter history.
queue.list-message-counter.reply=Details of the message counter.
queue.list-message-counter=List the message counter details.
queue.list-messages-as-json.filter=A message filter. An undefined or empty filter will match all messages.
queue.list-messages-as-json.reply=A JSON string containing all the messages matching the filter.
queue.list-messages-as-json=List all messages in the queue that match the filter and return them as a string in JSON format.
queue.list-messages.address=Te address this message is sent to.
queue.list-messages.durable=Whether this message is durable or not.
queue.list-messages.expiration=The expiration time of this message.
queue.list-messages.filter=A message filter. An undefined or empty filter will match all messages.
queue.list-messages.messageID=The message ID.
queue.list-messages.priority=The message priority. Values range from 0 (less priority) to 9 (more priority) inclusive.
queue.list-messages.reply=A list where each element is a map of message properties to their value.
queue.list-messages.timestamp=The message timestamp. The timestamp corresponds to the time this message was handled by a ActiveMQ server.
queue.list-messages.type=The message type. 0 = Default; 2 = Object; 3 = Text; 4 = Bytes; 5 = Map; 6 = Stream
queue.list-messages.userID=The userID - this is an optional user specified UUID that can be set to identify the message.
queue.list-messages=List all messages in the queue that match the filter
queue.list-scheduled-messages-as-json.reply=A string in JSON format representing a list where each element is a map of message properties to their value.
queue.list-scheduled-messages-as-json=List the messages scheduled for delivery as a string in JSON format.
queue.list-scheduled-messages.address=Te address this message is sent to.
queue.list-scheduled-messages.durable=Whether this message is durable or not.
queue.list-scheduled-messages.expiration=The expiration time of this message.
queue.list-scheduled-messages.messageID=The message ID.
queue.list-scheduled-messages.priority=The message priority. Values range from 0 (less priority) to 9 (more priority) inclusive.
queue.list-scheduled-messages.reply=A list where each element is a map of message properties to their value.
queue.list-scheduled-messages.timestamp=The message timestamp. The timestamp corresponds to the time this message was handled by a ActiveMQ server.
queue.list-scheduled-messages.type=The message type. 0 = Default; 2 = Object; 3 = Text; 4 = Bytes; 5 = Map; 6 = Stream
queue.list-scheduled-messages.userID=The userID - this is an optional user specified UUID that can be set to identify the message.
queue.list-scheduled-messages=List the messages scheduled for delivery.
queue.message-count=The number of messages currently in this queue.
queue.message.address=Te address this message is sent to.
queue.message.durable=Whether this message is durable or not.
queue.message.expiration=The expiration time of this message.
queue.message.messageID=The message id.
queue.message.priority=The message priority. Values range from 0 (less priority) to 9 (more priority) inclusive.
queue.message.timestamp=The message timestamp. The timestamp corresponds to the time this message was handled by a ActiveMQ server.
queue.message.type=Tmessage type. 0 = Default; 2 = Object; 3 = Text; 4 = Bytes; 5 = Map; 6 = Stream
queue.message.userID=The userID - this is an optional user specified UUID that can be set to identify the message.
queue.messages-added=The number of messages added to this queue since it was created.
queue.move-message.message-id=The message ID.
queue.move-message.other-queue-name=The name of the queue to move the message to.
queue.move-message.reject-duplicates=Whether to reject messages identified as duplicate.
queue.move-message.reply=True if the message was moved, false otherwise
queue.move-message=Move the message corresponding to the given message-id to another queue
queue.move-messages.filter=A message filter. An undefined or empty filter will match all messages.
queue.move-messages.other-queue-name=The name of the queue to move the message to.
queue.move-messages.reject-duplicates=Whether to reject messages identified as duplicate.
queue.move-messages.reply=The number of moved messages.
queue.move-messages=Move the messages corresponding to the given filter to another queue.
queue.name=The unique queue name.
queue.pause=Pause the queue.
queue.paused=Whether the queue is paused.
queue.queue-address=The queue address defines what address is used for routing messages.
queue.remove-message.message-id=The message ID.
queue.remove-message.reply=True if the message was removed, false otherwise.
queue.remove-message=Remove the message corresponding to the given message-id.
queue.remove-messages.filter=A message filter. An undefined or empty filter will match all messages.
queue.remove-messages.reply=The number of removed messages.
queue.remove-messages=Remove messages matching the given filter from the queue.
queue.remove=Operation removing an existing queue.
queue.reset-message-counter=Reset the message counters.
queue.resume=Resume the queue.
queue.scheduled-count=The number of scheduled messages in this queue.
queue.send-message-to-dead-letter-address.message-id=The message ID.
queue.send-message-to-dead-letter-address.reply=True if the message was sent to the dead letter address, false otherwise.
queue.send-message-to-dead-letter-address=Send the message corresponding to the given message-id to this queue's Dead Letter Address.
queue.send-messages-to-dead-letter-address.filter=A message filter. An undefined or empty filter will match all messages.
queue.send-messages-to-dead-letter-address.reply=The number of sent messages.
queue.send-messages-to-dead-letter-address=Send the messages corresponding to the given filter to this queue's Dead Letter Address.
queue.temporary=Whether the queue is temporary.
queue=A Queue.
remote-acceptor=Defines a way in which remote connections can be made to the ActiveMQ server.
remote-connector=Used by a remote client to define how it connects to a server.
role.consume=This permission allows the user to consume a message from a queue bound to matching addresses.
role.create-durable-queue=This permission allows the user to create a durable queue.
role.create-non-durable-queue=This permission allows the user to create a temporary queue.
role.delete-durable-queue=This permission allows the user to delete a durable queue.
role.delete-non-durable-queue=This permission allows the user to delete a temporary queue.
role.manage=This permission allows the user to invoke management operations by sending management messages to the management address.
role.name=The name of a security role.
role.send= This permission allows the user to send a message to matching addresses.
role=A security role.
runtime-queue=A runtime queue.
security-role.add=Add new security role.
security-role.consume=This permission allows the user to consume a message from a queue bound to matching addresses.
security-role.create-durable-queue=This permission allows the user to create a durable queue.
security-role.create-non-durable-queue=This permission allows the user to create a temporary queue.
security-role.delete-durable-queue=This permission allows the user to delete a durable queue.
security-role.delete-non-durable-queue=This permission allows the user to delete a temporary queue.
security-role.manage=This permission allows the user to invoke management operations by sending management messages to the management address.
security-role.name=The name of a security role.
security-role.remove=Remove an existing security role.
security-role.send= This permission allows the user to send a message to matching addresses.
security-role=A security role.
security-setting.add=Add new security setting.
security-setting.remove=Remove an existing security setting.
security-setting.role=A security role.
security-setting=A security setting allows sets of permissions to be defined against queues based on their address.
server-id=The connector server ID.
socket-binding=The socket binding reference.
transport-config.param.add=Operation adding a new parameter
transport-config.param.optional=Optional parameters
transport-config.param.remove=Operation removing an existing parameter
transport-config.param.value=The parameter value
transport-config.param=A parameter
legacy=Legacy resource for HornetQ clients
