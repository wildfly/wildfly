commit c05c90ebc6930341fbf0efaee2053931a5206a62
Author: kabir <kkhan@redhat.com>
Date:   Sun Dec 18 22:11:41 2011 +0000

    Test (and some tweaks) for JDR subsystem

diff --git a/jdr/jboss-as-jdr/pom.xml b/jdr/jboss-as-jdr/pom.xml
index 3041154..f88c085 100644
--- a/jdr/jboss-as-jdr/pom.xml
+++ b/jdr/jboss-as-jdr/pom.xml
@@ -84,6 +84,11 @@
             <artifactId>jython-standalone</artifactId>
             <version>2.5.2</version>
         </dependency>
+        <dependency>
+            <groupId>org.jboss.as</groupId>
+            <artifactId>jboss-as-subsystem-test</artifactId>
+            <scope>test</scope>
+         </dependency>
     </dependencies>
     <build>
         <plugins>
diff --git a/jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrReportDescriptions.java b/jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrReportDescriptions.java
index 33e7e81..d21dad8 100644
--- a/jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrReportDescriptions.java
+++ b/jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrReportDescriptions.java
@@ -22,13 +22,21 @@
 
 package org.jboss.as.jdr;
 
-import org.jboss.dmr.ModelNode;
-import org.jboss.dmr.ModelType;
+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.CHILDREN;
+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.DESCRIPTION;
+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OPERATIONS;
+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OPERATION_NAME;
+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.REPLY_PROPERTIES;
+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.REQUEST_PROPERTIES;
+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.REQUIRED;
+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.TYPE;
+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.VALUE_TYPE;
 
 import java.util.Locale;
 import java.util.ResourceBundle;
 
-import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.*;
+import org.jboss.dmr.ModelNode;
+import org.jboss.dmr.ModelType;
 
 /**
  * Utility methods to generate detyped descriptions of JDR subsystem resources and operations.
@@ -77,15 +85,17 @@ public class JdrReportDescriptions {
         result.get(OPERATION_NAME).set(JdrReportRequestHandler.OPERATION_NAME);
         result.get(DESCRIPTION).set(bundle.getString("jdr.request"));
         result.get(REQUEST_PROPERTIES).setEmptyObject();
-        result.get(REPLY_PROPERTIES, "start-time", DESCRIPTION).set(bundle.getString("jdr.report.starttime"));
-        result.get(REPLY_PROPERTIES, "start-time", TYPE).set(ModelType.STRING);
-        result.get(REPLY_PROPERTIES, "start-time", REQUIRED).set(true);
-        result.get(REPLY_PROPERTIES, "end-time", DESCRIPTION).set(bundle.getString("jdr.report.endtime"));
-        result.get(REPLY_PROPERTIES, "end-time", TYPE).set(ModelType.STRING);
-        result.get(REPLY_PROPERTIES, "end-time", REQUIRED).set(true);
-        result.get(REPLY_PROPERTIES, "report-location", DESCRIPTION).set(bundle.getString("jdr.report.location"));
-        result.get(REPLY_PROPERTIES, "report-location", TYPE).set(ModelType.STRING);
-        result.get(REPLY_PROPERTIES, "report-location", REQUIRED).set(false);
+        result.get(REPLY_PROPERTIES, DESCRIPTION).set("jdr.report.return");
+        result.get(REPLY_PROPERTIES, TYPE).set(ModelType.OBJECT);
+        result.get(REPLY_PROPERTIES, VALUE_TYPE, "start-time", DESCRIPTION).set(bundle.getString("jdr.report.return.starttime"));
+        result.get(REPLY_PROPERTIES, VALUE_TYPE, "start-time", TYPE).set(ModelType.STRING);
+        result.get(REPLY_PROPERTIES, VALUE_TYPE, "start-time", REQUIRED).set(true);
+        result.get(REPLY_PROPERTIES, VALUE_TYPE, "end-time", DESCRIPTION).set(bundle.getString("jdr.report.return.endtime"));
+        result.get(REPLY_PROPERTIES, VALUE_TYPE, "end-time", TYPE).set(ModelType.STRING);
+        result.get(REPLY_PROPERTIES, VALUE_TYPE, "end-time", REQUIRED).set(true);
+        result.get(REPLY_PROPERTIES, VALUE_TYPE, "report-location", DESCRIPTION).set(bundle.getString("jdr.report.return.location"));
+        result.get(REPLY_PROPERTIES, VALUE_TYPE, "report-location", TYPE).set(ModelType.STRING);
+        result.get(REPLY_PROPERTIES, VALUE_TYPE, "report-location", REQUIRED).set(false);
 
         return result;
     }
diff --git a/jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrReportSubsystemAdd.java b/jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrReportSubsystemAdd.java
index e6801e8..a0981d4 100644
--- a/jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrReportSubsystemAdd.java
+++ b/jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrReportSubsystemAdd.java
@@ -22,6 +22,9 @@
 
 package org.jboss.as.jdr;
 
+import java.util.List;
+import java.util.Locale;
+
 import org.jboss.as.controller.AbstractAddStepHandler;
 import org.jboss.as.controller.OperationContext;
 import org.jboss.as.controller.OperationFailedException;
@@ -32,9 +35,6 @@ import org.jboss.as.controller.operations.validation.ParametersValidator;
 import org.jboss.dmr.ModelNode;
 import org.jboss.msc.service.ServiceController;
 
-import java.util.List;
-import java.util.Locale;
-
 /**
  * Adds the JDR subsystem.
  *
@@ -57,6 +57,7 @@ public class JdrReportSubsystemAdd extends AbstractAddStepHandler implements Des
     @Override
     protected void populateModel(ModelNode operation, ModelNode model) throws OperationFailedException {
         validator.validate(operation);
+        model.setEmptyObject();
         // TODO if there is any configuration data, store it in the model
     }
 
diff --git a/jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrReportSubsystemParser.java b/jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrReportSubsystemParser.java
index 428fc7e..e026124 100644
--- a/jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrReportSubsystemParser.java
+++ b/jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrReportSubsystemParser.java
@@ -22,6 +22,16 @@
 
 package org.jboss.as.jdr;
 
+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.ADD;
+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OP;
+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OP_ADDR;
+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.SUBSYSTEM;
+
+import java.util.List;
+
+import javax.xml.stream.XMLStreamConstants;
+import javax.xml.stream.XMLStreamException;
+
 import org.jboss.as.controller.parsing.ParseUtils;
 import org.jboss.as.controller.persistence.SubsystemMarshallingContext;
 import org.jboss.dmr.ModelNode;
@@ -30,12 +40,6 @@ import org.jboss.staxmapper.XMLElementWriter;
 import org.jboss.staxmapper.XMLExtendedStreamReader;
 import org.jboss.staxmapper.XMLExtendedStreamWriter;
 
-import javax.xml.stream.XMLStreamConstants;
-import javax.xml.stream.XMLStreamException;
-import java.util.List;
-
-import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.*;
-
 public final class JdrReportSubsystemParser implements XMLStreamConstants, XMLElementReader<List<ModelNode>>,
         XMLElementWriter<SubsystemMarshallingContext> {
 
@@ -67,7 +71,8 @@ public final class JdrReportSubsystemParser implements XMLStreamConstants, XMLEl
         context.startSubsystemElement(org.jboss.as.jdr.Namespace.CURRENT.getUriString(), false);
         ModelNode node = context.getModelNode();
         if (node.isDefined()) {
-            writeJdrElements(writer, node);
+            //FIXME There is no reference to these JDR elements in the parser, model or schema
+            //writeJdrElements(writer, node);
         }
         writer.writeEndElement();
     }
diff --git a/jdr/jboss-as-jdr/src/main/resources/org/jboss/as/jdr/LocalDescriptions.properties b/jdr/jboss-as-jdr/src/main/resources/org/jboss/as/jdr/LocalDescriptions.properties
index 4efa6b7..4db94c2 100644
--- a/jdr/jboss-as-jdr/src/main/resources/org/jboss/as/jdr/LocalDescriptions.properties
+++ b/jdr/jboss-as-jdr/src/main/resources/org/jboss/as/jdr/LocalDescriptions.properties
@@ -2,6 +2,7 @@ jdr.add=Adds the JDR subsystem.
 jdr.remove=Removes the JDR subsystem.
 jdr.request=Request the generation of a JDR report.
 jdr.subsystem=JBoss Diagnostic Reporter (JDR) Subsystem
-jdr.report.starttime=Time JDR report collection was initiated.
-jdr.report.endtime=Time JDR report collection was initiated.
-jdr.report.location=Location of the JDR report.
+jdr.report.return=Details of the JDR report.
+jdr.report.return.starttime=Time JDR report collection was initiated.
+jdr.report.return.endtime=Time JDR report collection was initiated.
+jdr.report.return.location=Location of the JDR report.
diff --git a/jdr/jboss-as-jdr/src/test/java/org/jboss/as/jdr/JdrSubsystemTestCase.java b/jdr/jboss-as-jdr/src/test/java/org/jboss/as/jdr/JdrSubsystemTestCase.java
new file mode 100644
index 0000000..d3fefa5
--- /dev/null
+++ b/jdr/jboss-as-jdr/src/test/java/org/jboss/as/jdr/JdrSubsystemTestCase.java
@@ -0,0 +1,43 @@
+/*
+* JBoss, Home of Professional Open Source.
+* Copyright 2011, Red Hat Middleware LLC, and individual contributors
+* as indicated by the @author tags. See the copyright.txt file in the
+* distribution for a full listing of individual contributors.
+*
+* This is free software; you can redistribute it and/or modify it
+* under the terms of the GNU Lesser General Public License as
+* published by the Free Software Foundation; either version 2.1 of
+* the License, or (at your option) any later version.
+*
+* This software is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+* Lesser General Public License for more details.
+*
+* You should have received a copy of the GNU Lesser General Public
+* License along with this software; if not, write to the Free
+* Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+* 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+*/
+package org.jboss.as.jdr;
+
+import java.io.IOException;
+
+import org.jboss.as.subsystem.test.AbstractSubsystemBaseTest;
+
+/**
+ *
+ * @author <a href="kabir.khan@jboss.com">Kabir Khan</a>
+ */
+public class JdrSubsystemTestCase extends AbstractSubsystemBaseTest {
+
+    public JdrSubsystemTestCase() {
+        super(JdrReportExtension.SUBSYSTEM_NAME, new JdrReportExtension());
+    }
+
+    @Override
+    protected String getSubsystemXml() throws IOException {
+        return "<subsystem xmlns=\"urn:jboss:domain:jdr:1.0\"/>";
+    }
+
+}
