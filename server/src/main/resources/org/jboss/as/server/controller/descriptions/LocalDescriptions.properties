# Server root
server=The root node of the server-level management model.
server.name=The name of this server. If not set, defaults to the runtime value of InetAddress.getLocalHost().getHostName().
server.extension=A list of extension modules.
server.path=A list of named filesystem paths.
server.core-services=Core services provided by the server.
server.management=Specifies the enabled management protocols for the server
server.profile=The name of the server's configuration profile.
server.subsystem=The subsystems that make up the server's profile.
server.interface=A list of named network interfaces available for use on the server.
server.socket-binding=A list of socket bindings available for use on the server.
server.system-properties=A list of system properties to set on the server.
server.system-property=A system property to set on the server.
server.deployment=A list of deployments available for use on the server.
server.state=The current state of the server controller; either STARTING, RUNNING or RESTART_REQUIRED
server.process-type=The type of process represented by this root resource. Always has a value of "Server" for a server resource.
server.launch-type=The manner in which the server process was launched. Either "DOMAIN" for a domain mode server launched by a Host Controller, "STANDALONE" for a standalone server launched from the command line, or "EMBEDDED" for a standalone server launched as an embedded part of an application running in the same virtual machine.
server.release-version=The version of the JBoss Application Server release this server is running.
server.release-codename=The codename of the JBoss Application Server release this server is running.

server.env=The server environment.
server.env.base-dir=The base directory for JBoss Application Server.
server.env.config-dir=The directory where the configurations are stored.
server.env.config-file=The configuration file used to launch JBoss Application Server.
server.env.data-dir=The data directory.
server.env.deploy-dir=The directory for deployments.
server.env.ext-dirs=A list of ext directories.
server.env.home-dir=The home directory for JBoss Application Server.
server.env.host-name=The host name.
server.env.launch-type=The type of the running server.
server.env.log-dir=The directory where log files are sent.
server.env.modules-dir=The directory where modules are found.
server.env.node-name=The name of the server node.
server.env.qualified-host-name=The qualified host name.
server.env.server-name=The name of the server.
server.env.temp-dir=The temporary directory.

# Management
core.management=The management services used to control a server.
core.management.security-realms=The security realms available for controlling access to the management services.
core.management.security-realm=A security realm that can be associated with a management interface and used to control access to the management services.
core.management.security-realm.add=Adds a security realm that can be associated with a management interface and used to control access to the management services.
core.management.outbound-connections=Configurations of connection factories that can be used by a security realm to access external source of authentication and authorization information (e.g. an LDAP server).
core.management.outbound-connection=A connection factory that can be used by a security realm to access external source of authentication and authorization information (e.g. an LDAP server).
core.management.outbound-connection.add=Adds a connection factory that can be used by a security realm to access external source of authentication and authorization information (e.g. an LDAP server).
core.management.management-interfaces=Interfaces exposed by the management services to allow external callers to perform management tasks.
core.management.native-interface=Configuration of the server's native management interface
core.management.native-interface.add=Adds the server's native management interface
core.management.native-interface.remove=Removes the server's native management interface
core.management.native-interface.interface=Deprecated -- use 'socket-binding'. The network interface on which the server's socket for native management communication should be opened. Must be 'undefined' if the 'socket-binding' attribute is set.
core.management.native-interface.port=Deprecated -- use 'socket-binding'. The port on which the server's socket for native management communication should be opened. Must be 'undefined' if the 'socket-binding' attribute is set.
core.management.native-interface.security-realm=The security realm to use for the native management interface.
core.management.native-interface.socket-binding=The name of the socket binding configuration to use for the native management interface's socket.
core.management.native-remoting-interface=Configuration of the server's native management interface using a connector from the remoting subsystem.
core.management.native-remoting-interface.add=Adds the server's native management interface using a connector from the remoting subsystem.
core.management.native-remoting-interface.removes=Removes the server's native management interface using a connector from the remoting subsystem.
core.management.http-interface=Configuration of the server's HTTP management interface
core.management.http-interface.add=Adds the configuration of the server's HTTP management interface
core.management.http-interface.remove=Adds the configuration of the server's HTTP management interface
core.management.http-interface.interface=Deprecated -- use 'socket-binding'. The network interface on which the server's socket for HTTP management communication should be opened. Must be 'undefined' if the 'socket-binding' or 'secure-socket-binding' attribute is set.
core.management.http-interface.port=Deprecated -- use 'socket-binding'. The port on which the server's socket for HTTP management communication should be opened. Must be 'undefined' if the 'socket-binding' attribute is set.
core.management.http-interface.secure-port=Deprecated -- use 'secure-socket-binding'. The port on which the server's socket for HTTPS management communication should be opened. Must be 'undefined' if the 'socket-binding' or 'secure-socket-binding' attribute is set.
core.management.http-interface.security-realm=The security realm to use for the HTTP management interface.
core.management.http-interface.socket-binding=The name of the socket binding configuration to use for the HTTP management interface's socket.
core.management.http-interface.secure-socket-binding=The name of the socket binding configuration to use for the HTTPS management interface's socket.
core.service-container=The central container that manages all services in a running standalone server or in a host controller in a management domain.


# Deployments
deployment.remove=Remove a deployment from the list of content available for use. If the deployment is currently deployed in the runtime it will first be undeployed.


# Operations
composite=An operation that executes a list of other operations as a unit.
composite.steps=A list, where each item in the list has the same structure as a simple operation request.
composite.result=A list, where each item in the list is the result for the equivalently positioned item in the 'steps' parameter list
shutdown=Shuts down the server via a call to System.exit(0)
reload=Reloads the server by shutting all its services and starting it again.
dump-services=Dumps all services running in the container, including their status and dependency information.
restart-required=Puts the server into a restart-required mode.
