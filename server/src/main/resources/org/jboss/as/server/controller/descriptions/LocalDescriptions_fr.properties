server=N\u0153ud root du mod\u00E8le de gestion de niveau serveur.
server.name=Nom de ce serveur. Si non d\u00E9fini, aura la valeur runtime par d\u00E9faut de InetAddress.getLocalHost().getHostName().
server.extension=Liste des modules d'extension.
server.path=Liste des chemins de syst\u00E8mes de fichiers nomm\u00E9s.
server.core-services=Services principaux fournis par le serveur.
server.management=Sp\u00E9cifie les protocoles de gestion activ\u00E9s pour le serveur
server.profile=Nom du profil de configuration du serveur.
server.subsystem=Sous-syst\u00E8mes composant le profil du serveur.
server.interface=Liste des interfaces r\u00E9seau nomm\u00E9es mises \u00E0 disponibilit\u00E9 pour une utilisation sur le serveur.
server.socket-binding=Liste des liaisons de sockets mises \u00E0 disponibilit\u00E9 pour une utilisation sur le serveur.
server.system-properties=Liste des propri\u00E9t\u00E9s syst\u00E8me \u00E0 d\u00E9finir sur le serveur.
server.system-property=Propri\u00E9t\u00E9 syst\u00E8me \u00E0 d\u00E9finir sur le serveur.
server.deployment=Liste des d\u00E9ploiements mis \u00E0 disponibilit\u00E9 pour une utilisation sur le serveur.
server.state=L'\u00E9tat actuel du contr\u00F4leur serveur\u00A0; soit STARTING, RUNNING ou RESTART_REQUIRED
server.running-mode=Mode d'ex\u00E9cution actuel du serveur. Soit NORMAL (op\u00E9rations normales), ou ADMIN_ONLY. Un serveur ADMIN_ONLY d\u00E9marrera toutes les interfaces de gestion configur\u00E9es et acceptera les requ\u00EAtes de gestion, mais il ne d\u00E9marrera pas les services utilis\u00E9s pour g\u00E9rer les requ\u00EAtes de l'utilisateur final.
server.process-type=Type de processus repr\u00E9sent\u00E9 par cette ressource root. Poss\u00E8de toujours une valeur "Server" pour les ressources serveur.
server.launch-type=Mani\u00E8re par laquelle le processus serveur a \u00E9t\u00E9 lanc\u00E9. "DOMAIN" pour un serveur en mode domaine lanc\u00E9 par un contr\u00F4leur h\u00F4te, "STANDALONE" pour un serveur autonome lanc\u00E9 depuis la ligne de commande, ou "EMBEDDED" pour un serveur autonome lanc\u00E9 \u00E9tant incorpor\u00E9 \u00E0 une application ex\u00E9cut\u00E9e sur la m\u00EAme machine virtuelle.
server.release-version=Version de JBoss Application Server ex\u00E9cut\u00E9e par ce serveur.
server.release-codename=Nom de code de la version de JBoss Application Server ex\u00E9cut\u00E9e par ce serveur.
server.product-name=Nom du produit bas\u00E9 JBoss AS ex\u00E9cut\u00E9 par ce serveur.
server.product-version=Version du produit bas\u00E9 JBoss AS ex\u00E9cut\u00E9 par ce serveur.
server.management-major-version=Version majeure de l'interface de gestion JBoss AS fournie par ce serveur. 
server.management-minor-version=Version mineure de l'interface de gestion JBoss AS fournie par ce serveur. 
server.env=L'environnement du serveur.
server.env.base-dir=R\u00E9pertoire de base de JBoss Application Server.
server.env.config-dir=R\u00E9pertoire o\u00F9 les configurations sont stock\u00E9es.
server.env.content-dir=R\u00E9pertoire o\u00F9 le contenu utilisateur (par exemple, les d\u00E9ploiements) g\u00E9r\u00E9 par le serveur est stock\u00E9.
server.env.config-file=Fichier de configuration utilis\u00E9 pour lancer JBoss Application Server.
server.env.data-dir=R\u00E9pertoire de donn\u00E9es.
server.env.deploy-dir=Variant d\u00E9pr\u00E9ci\u00E9e de 'content-dir'.
server.env.ext-dirs=Liste de r\u00E9pertoires ext.
server.env.home-dir=R\u00E9pertoire de base de  JBoss Application Server.
server.env.host-name=Nom d'h\u00F4te.
server.env.launch-type=Type du serveur en cours d'ex\u00E9cution.
server.env.log-dir=R\u00E9pertoire o\u00F9 les fichier log sont envoy\u00E9s.
server.env.modules-dir=R\u00E9pertoire o\u00F9 se trouvent les modules
server.env.node-name=Nom du noeud du serveur.
server.env.qualified-host-name=Nom d'h\u00F4te complet.
server.env.initial-running-mode=Le mode de fonctionnement actuel du serveur. LIVE (op\u00E9rations normales) ou ADMIN_ONLY. Un serveur ADMIN_ONLY d\u00E9marrera les interfaces de gestion configur\u00E9es et acceptera les demandes de gestion, mais il ne d\u00E9marrera pas les services utilis\u00E9s pour g\u00E9rer les requ\u00EAtes des utilisateurs finaux.
server.env.server-name=Le nom du serveur.
server.env.temp-dir=Le r\u00E9pertoire temporaire.
server.reload=Recharge le serveur en \u00E9teignant tous ses services et en les d\u00E9marrant \u00E0 nouveau. JVM n'est pas red\u00E9marr\u00E9.
server.reload.admin-only=Si le serveur doit d\u00E9marrer en mode de fonctionnement ADMIN_ONLY lorsqu'il red\u00E9marre. Un serveur ADMIN_ONLY lancera toutes les interfaces de gestion configur\u00E9es et acceptera les requ\u00EAtes de gestion, mais ne lancera pas les services utilis\u00E9s pour g\u00E9rer les requ\u00EAtes des utilisateurs finaux.
core.management=Services de gestion utilis\u00E9s pour contr\u00F4ler un serveur.
core.management.security-realms=Domaines de s\u00E9curit\u00E9 disponibles pour contr\u00F4ler l'acc\u00E8s aux services de gestion.
core.management.security-realm=Domaine de s\u00E9curit\u00E9 pouvant \u00EAtre associ\u00E9 \u00E0 une interface de gestion et utilis\u00E9 pour contr\u00F4ler l'acc\u00E8s aux services de gestion.
core.management.security-realm.add=Ajoute un domaine de s\u00E9curit\u00E9 pouvant \u00EAtre associ\u00E9 \u00E0 une interface de gestion et utilis\u00E9 pour contr\u00F4ler l'acc\u00E8s aux services de gestion.
core.management.outbound-connections=Configurations des fabriques de connexion pouvant \u00EAtre utilis\u00E9es par un domaine de s\u00E9curit\u00E9 pour acc\u00E9der \u00E0 une source externe d'authentification et \u00E0 des informations d'autorisation (par exemple, un serveur LDAP).
core.management.outbound-connection=Fabrique de connexions pouvant \u00EAtre utilis\u00E9e par un domaine de s\u00E9curit\u00E9 pour acc\u00E9der \u00E0 une source externe d'authentification et \u00E0 des informations d'autorisation (par exemple, un serveur LDAP).
core.management.outbound-connection.add=Ajoute une fabrique de connexions pouvant \u00EAtre utilis\u00E9e par un domaine de s\u00E9curit\u00E9 pour acc\u00E9der \u00E0 une source externe d'authentification et \u00E0 des informations d'autorisation (par exemple, un serveur LDAP).
core.management.management-interfaces=Interfaces expos\u00E9es par les services de gestion pour permettre aux appelants ext\u00E9rieurs d'effectuer les t\u00E2ches de gestion.
core.management.native-interface=Configuration de l'interface de gestion native du serveur.
core.management.native-interface.add=Ajoute l'interface de gestion native du serveur.
core.management.native-interface.remove=Supprime l'interface de gestion native du serveur.
core.management.native-interface.interface=Obsol\u00E8te -- utiliser 'socket-binding'. Interface r\u00E9seau sur laquelle le socket de communication native de gestion du serveur devra \u00EAtre ouvert. Doit \u00EAtre 'undefined' si l'attribut 'socket-binding' est d\u00E9fini.
core.management.native-interface.port=Obsol\u00E8te -- utiliser 'socket-binding'. Port sur lequel le socket de communication native de gestion du serveur devra \u00EAtre ouvert. Doit \u00EAtre 'undefined' si l'attribut 'socket-binding' est d\u00E9fini.
core.management.native-interface.security-realm=Domaine de s\u00E9curit\u00E9 \u00E0 utiliser pour l'interface de gestion native.
core.management.native-interface.socket-binding=Le nom de la configuration du \u00AB\u00A0socket binding\u00A0\u00BB \u00E0 utiliser pour le socket d'interface de gestion native.
core.management.native-remoting-interface=Configuration de l'interface de gestion native du serveur qui utilise un connecteur d'un sous-syst\u00E8me distant.
core.management.native-remoting-interface.add=Ajoute l'interface de gestion native du serveur \u00E0 l'aide d'un connecteur depuis le sous-syst\u00E8me distant.
core.management.native-remoting-interface.remove=Supprime l'interface de gestion native du serveur \u00E0 l'aide d'un connecteur depuis le sous-syst\u00E8me distant.
core.management.http-interface=Configuration de l'interface de gestion HTTP du serveur.
core.management.http-interface.add=Ajoute la configuration de l'interface de gestion HTTP du serveur.
core.management.http-interface.remove=Ajoute la configuration de l'interface de gestion HTTP du serveur.
core.management.http-interface.interface=Obsol\u00E8te -- utiliser 'socket-binding'. Interface de r\u00E9seau sur laquelle le socket de communication de gestion HTTP du serveur devra \u00EAtre ouvert. Doit \u00EAtre 'undefined' si l'attribut 'socket-binding' est d\u00E9fini.
core.management.http-interface.port=Obsol\u00E8te -- utiliser 'socket-binding'. Port sur lequel le socket de communication de gestion HTTP du serveur devra \u00EAtre ouvert. Doit \u00EAtre 'undefined' si l'attribut 'socket-binding' est d\u00E9fini.
core.management.http-interface.secure-port=Obsol\u00E8te -- utiliser 'socket-binding'. Port sur lequel le socket de communication de gestion HTTP du serveur devra \u00EAtre ouvert. Doit \u00EAtre 'undefined' si l'attribut 'socket-binding' est d\u00E9fini.
core.management.http-interface.security-realm=Le domaine de s\u00E9curit\u00E9 \u00E0 utiliser pour l'interface de gestion HTTP.
core.management.http-interface.socket-binding=Le nom de la configuration du \u00ABsocket binding\u00BB \u00E0 utiliser pour le socket d'interface de gestion HTTP.
core.management.http-interface.secure-socket-binding=Le nom de la configuration du \u00ABsocket binding\u00BB \u00E0 utiliser pour le socket d'interface de gestion HTTPS.
core.management.http-interface.console-enabled=Drapeau qui indique que la console admin est active
core.service-container=Le conteneur central qui g\u00E8re tous les services sur un serveur autonome ou sur un contr\u00F4leur d'h\u00F4te dans un domaine de gestion.
interface.resolve-internet-address=Prend un ensemble de crit\u00E8res de r\u00E9solution d'interface et trouve une adresse IP sur la machine locale qui correspond au crit\u00E8re, \u00E9choue si aucune adresse IP correspondante n'est trouv\u00E9e.
interface.resolve-internet-address.reply=Cha\u00EEne d'adresse IP sous pr\u00E9sentation textuelle.
deployment.remove=Supprimer un d\u00E9ploiement de la liste du contenu disponible \u00E0 utiliser. Si le d\u00E9ploiement est actuellement d\u00E9ploy\u00E9 dans le runtime, il sera le premier \u00E0 \u00EAtre retir\u00E9.
composite=Op\u00E9ration ex\u00E9cutant une liste d'autres op\u00E9rations en tant qu'unit\u00E9.
composite.steps=Liste dans laquelle chaque \u00E9l\u00E9ment poss\u00E8de la m\u00EAme structure, comme une simple requ\u00EAte d'op\u00E9ration.
composite.result=Liste dans laquelle chaque \u00E9l\u00E9ment est le r\u00E9sultat de l'\u00E9l\u00E9ment positionn\u00E9 de mani\u00E8re \u00E9quivalente dans la liste des param\u00E8tres 'steps'.
shutdown=Ferme le serveur via un appel vers System.exit(0)
shutdown.restart=Si true, une fois \u00E9teint, le serveur sera red\u00E9marr\u00E9
dump-services=Vide tous les services ex\u00E9cut\u00E9s dans le conteneur, y compris leurs informations de statut et de d\u00E9pendances.
restart-required=Place le serveur dans un mode requ\u00E9rant un red\u00E9marrage.
