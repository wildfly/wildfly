server=Der Root-Knoten des Management-Modells auf der Server-Ebene.
server.name=Der Name dieses Servers. Falls nicht festgelegt, wird standardm\u00E4\u00DFig der Laufzeitwert von InetAddress.getLocalHost().getHostName() verwendet.
server.extension=Eine Liste von Erweiterungsmodulen.
server.path=Eine Liste benannter Dateisystem-Pfade. 
server.core-services=Vom Server bereitgestellte Kerndienste.
server.management=Spezifiziert die aktivierten Management-Protokolle f\u00FCr den Server
server.profile=Der Name des Konfigurationsprofils des Servers.
server.subsystem=Die Untersysteme, aus denen das Server-Profil besteht.
server.interface=Eine Liste der auf dem Server verf\u00FCgbaren benannten Netzwerkschnittstellen.
server.socket-binding=Eine Liste der auf dem Server verf\u00FCgbaren Socket-Bindings.
server.system-properties=Eine Liste der auf dem Server einstellbaren Systemeigenschaften.
server.system-property=Eine auf diesem Server einzustellende Systemeigenschaft.
server.deployment=Eine Liste der auf dem Server verf\u00FCgbaren Deployments.
server.state=Der derzeitige Status des Server-Controllers; entweder STARTING, RUNNING oder RESTART_REQUIRED
server.running-mode=Der derzeitige Ausf\u00FChrungsmodus des Servers. Entweder NORMAL (normaler Betrieb) oder ADMIN_ONLY.  Ein ADMIN_ONLY Server startet s\u00E4mtliche konfigurierten Verwaltungsoberfl\u00E4chen und akzeptiert Verwaltungsanfragen, startet jedoch keine Dienste zur Handhabung von Endbenutzeranfragen.
server.process-type=Der Prozesstyp, der von dieser Root-Ressource repr\u00E4sentiert wird. Dies ist immer der Wert "Server" f\u00FCr eine Server-Ressource.
server.launch-type=Die Art, auf die der Server-Prozess gestartet wurde. Entweder "DOMAIN" f\u00FCr einen Server im Domain-Modus, gestartet von einem Host Controller, "STANDALONE" f\u00FCr einen eigenst\u00E4ndigen Server, gestartet von der Befehlszeile, oder "EMBEDDED" f\u00FCr einen eigenst\u00E4ndigen Server, gestartet als eingebetteter Teil einer Applikation, die in derselben virtuellen Maschine l\u00E4uft.
server.release-version=Die Version der JBoss Application Server Release, die auf diesem Server l\u00E4uft.
server.release-codename=Der Codename der JBoss Application Server Release, die auf diesem Server l\u00E4uft.
server.product-name=Der Name des auf JBoss AS basierenden Produkts, das auf diesem Server ausgef\u00FChrt wird.
server.product-version=Die Version der auf JBoss AS basierenden Produkt-Release, die auf diesem Server ausgef\u00FChrt wird.
server.management-major-version=Die Hauptversion des JBoss AS Management-Interface, das auf diesem Server bereitgestellt wird.
server.management-minor-version=Die Nebenversion des JBoss AS Management-Interface, das auf diesem Server bereitgestellt wird.
server.env=Die Server-Umgebung.
server.env.base-dir=Das Basis-Verzeichnis f\u00FCr JBoss Application Server.
server.env.config-dir=Das Verzeichnis, in dem Konfigurationen gespeichert werden.
server.env.content-dir=Das Verzeichnis, in dem vom Server verwaltete Benutzerinhalte (z.B. Deployments) gespeichert werden.
server.env.config-file=Die zum Start des JBoss Applikation Server verwendete Konfigurationsdatei.
server.env.data-dir=Das Datenverzeichnis.
server.env.deploy-dir=Veraltete Variante von 'content-dir'.
server.env.ext-dirs=Eine Liste von ext-Verzeichnissen. 
server.env.home-dir=Das Home-Verzeichnis f\u00FCr JBoss Application Server.
server.env.host-name=Der Host-Name.
server.env.launch-type=Der Typ des laufenden Servers.
server.env.log-dir=Das Verzeichnis, an das Protokolldateien geschickt werden.
server.env.modules-dir=Das Verzeichnis, in dem Module zu finden sind.
server.env.node-name=Der Name des Server-Knotens.
server.env.qualified-host-name=Der qualifizierte Hostname.
server.env.initial-running-mode=Der derzeitige Ausf\u00FChrungsmodus des Servers. Entweder LIVE (normaler Betrieb) oder ADMIN_ONLY.  Ein ADMIN_ONLY Server startet s\u00E4mtliche konfigurierten Verwaltungsoberfl\u00E4chen und akzeptiert Verwaltungsanfragen, startet jedoch keine Dienste zur Handhabung von Endbenutzeranfragen.
server.env.server-name=Der Name des Servers.
server.env.temp-dir=Das tempor\u00E4re Verzeichnis.
server.reload=L\u00E4dt den Server neu, indem alle seine Dienste beendet und neu gestartet werden. Die JVM selbst wird nicht neu gestartet.
server.reload.admin-only=Ob der Server nach dem Neustart im ADMIN_ONLY Modus starten soll. Ein ADMIN_ONLY Server startet s\u00E4mtliche konfigurierten Verwaltungsoberfl\u00E4chen und akzeptiert Verwaltungsanfragen, startet jedoch keine Dienste zur Handhabung von Endbenutzeranfragen.
core.management=Die Management-Dienste, die zur Steuerung eines Servers verwendet werden.
core.management.security-realms=Die Sicherheitsbereiche, die zur Steuerung des Zugriffs auf die Management-Dienste verf\u00FCgbar sind.
core.management.security-realm=Ein Sicherheitsbereich, der mit einem Management-Interface verkn\u00FCpft und zur Steuerung des Zugriffs auf die Management-Dienste verwendet werden kann.
core.management.security-realm.add=F\u00FCgt eine Sicherheitsbereich hinzu, der mit einem Management-Interface verkn\u00FCpft und zur Steuerung des Zugriffs auf die Management-Dienste verwendet werden kann.
core.management.outbound-connections=Konfigurationen f\u00FCr Connection-Factorys, die von einem Sicherheitsbereich verwendet werden k\u00F6nnen, um auf externe Quellen zur Authentifizierung und Autorisierung (z.B. ein LDAP-Server) zuzugreifen.
core.management.outbound-connection=Eine Connection-Factory, die von einem Sicherheitsbereich verwendet werden k\u00F6nnen, um auf externe Quellen zur Authentifizierung und Autorisierung (z.B. ein LDAP-Server) zuzugreifen.
core.management.outbound-connection.add=F\u00FCgt eine Connection-Factory hinzu, die von einem Sicherheitsbereich verwendet werden k\u00F6nnen, um auf externe Quellen zur Authentifizierung und Autorisierung (z.B. ein LDAP-Server) zuzugreifen.
core.management.management-interfaces=Von Management-Diensten bereitgestellte Schnittstellen, die externen Aufrufern das Ausf\u00FChren von Verwaltungsaufgaben erm\u00F6glichen.
core.management.native-interface=Konfiguration des nativen Management-Interface des Servers
core.management.native-interface.add=F\u00FCgt das native Management-Interface des Servers hinzu
core.management.native-interface.remove=Konfiguration des HTTP Management-Interface des Servers
core.management.native-interface.interface=Veraltet -- nutzen Sie stattdessen 'socket-binding'. Netzwerk-Interface, an dem das Socket des Servers f\u00FCr native Management-Kommunikation ge\u00F6ffnet werden sollte. Muss 'undefined' sein, wenn das 'socket-binding'-Attribut eingestellt ist.
core.management.native-interface.port=Veraltet -- nutzen Sie stattdessen 'socket-binding'. Port, an dem das Socket des Servers f\u00FCr native Management-Kommunikation ge\u00F6ffnet werden sollte. Muss 'undefined' sein, wenn das 'socket-binding'-Attribut eingestellt ist.
core.management.native-interface.security-realm=Der f\u00FCr das native Management-Interface zu verwendende Sicherheitsbereich.
core.management.native-interface.socket-binding=Der Name der Socket-Binding-Konfiguration zur Verwendung f\u00FCr den Socket des nativen Management-Interface.
core.management.native-remoting-interface=Konfiguration des nativen Management-Interface des Servers unter Verwendung eines Connectors vom Remoting-Untersystem.
core.management.native-remoting-interface.add=F\u00FCgt das native Management-Interface des Servers hinzu unter Verwendung eines Connectors vom Remoting-Untersystem.
core.management.native-remoting-interface.remove=Entfernt das native Management-Interface des Servers unter Verwendung eines Connectors vom Remoting-Untersystem.
core.management.http-interface=Konfiguration des HTTP Management-Interface des Servers
core.management.http-interface.add=F\u00FCgt die Konfiguration des HTTP Management-Interface des Servers hinzu
core.management.http-interface.remove=F\u00FCgt die Konfiguration des HTTP Management-Interface des Servers hinzu
core.management.http-interface.interface=Veraltet -- nutzen Sie stattdessen 'socket-binding'. Netzwerk-Interface, an dem das Socket des Servers f\u00FCr HTTP-Management-Kommunikation ge\u00F6ffnet werden sollte. Muss 'undefined' sein, wenn das 'socket-binding'-Attribut oder das 'secure-socket-binding'-Attribut eingestellt ist.
core.management.http-interface.port=Veraltet -- nutzen Sie stattdessen 'socket-binding'. Port, an dem das Socket des Servers f\u00FCr HTTP-Management-Kommunikation ge\u00F6ffnet werden sollte. Muss 'undefined' sein, wenn das 'socket-binding'-Attribut eingestellt ist.
core.management.http-interface.secure-port=Veraltet -- nutzen Sie stattdessen 'secure-socket-binding'. Port, an dem das Socket des Servers f\u00FCr HTTPS-Management-Kommunikation ge\u00F6ffnet werden sollte. Muss 'undefined' sein, wenn das 'socket-binding'-Attribut oder das 'secure-socket-binding'-Attribut eingestellt ist.
core.management.http-interface.security-realm=Der f\u00FCr das HTTP-Management-Interface zu verwendende Sicherheitsbereich.
core.management.http-interface.socket-binding=Der Name der Socket-Binding-Konfiguration zur Verwendung f\u00FCr den Socket des HTTP-Management-Interface.
core.management.http-interface.secure-socket-binding=Der Name der Socket-Binding-Konfiguration zur Verwendung f\u00FCr den Socket des HTTPS-Management-Interface.
core.management.http-interface.console-enabled=Dieses Flag zeigt an, dass die Admin-Konsole aktiviert ist
core.service-container=Der zentrale Container, der alle Dienste in einem laufenden, eigenst\u00E4ndigen Server oder in einem Host-Controller in einer Management-Domain verwaltet.
interface.resolve-internet-address=Sucht anhand einer Reihe von Kriterien zur Interface-Aufl\u00F6sung eine IP-Adresse auf der lokalen Maschine, die diesen Kriterien entspricht, oder schl\u00E4gt fehl, falls keine passende IP-Adresse gefunden werden kann.
interface.resolve-internet-address.reply=Der IP-Adress-String in Textdarstellung.
deployment.remove=Entfernen Sie ein Deployment von der Liste der verf\u00FCgbaren Inhalte. Falls das Deployment derzeit in Laufzeitsystemen bereitgestellt wird, wird diese Bereitstellung zun\u00E4chst zur\u00FCckgenommen.
composite=Eine Operation, die eine Liste anderer Operationen als Einheit ausf\u00FChrt.
composite.steps=Eine Liste, in der jedes Element dieselbe Struktur hat wie eine einfache Operationsanfrage.
composite.result=Eine Liste, in der jedes Element das Ergebnis eines Elements an der entsprechenden Position in der 'steps' Parameterliste ist.
shutdown=Beendet den Server mittels Aufruf von System.exit(0)
shutdown.restart=Falls 'true', wird der Server nach Beenden wieder neu gestartet
dump-services=Auszug aller im Container laufenden Dienste, einschlie\u00DFlich deren Status und Abh\u00E4ngigkeitsinformationen.
restart-required=Versetzt den Server in den Modus 'Neustart erforderlich'.
