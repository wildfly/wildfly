<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright The WildFly Authors
  ~ SPDX-License-Identifier: Apache-2.0
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-parent</artifactId>
        <!--
        Maintain separation between the artifact id and the version to help prevent
        merge conflicts between commits changing the GA and those changing the V.
        -->
        <version>32.0.0.Beta1-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <artifactId>wildfly-standard-test-expansion-bom</artifactId>
    <packaging>pom</packaging>

    <name>WildFly: Dependency Management (Expansion Test Dependencies)</name>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${ee.maven.groupId}</groupId>
                <artifactId>wildfly-standard-test-bom</artifactId>
                <version>${ee.maven.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.github.tomakehurst</groupId>
                <artifactId>wiremock</artifactId>
                <version>${version.com.github.tomakehurst.wiremock}</version>
                <scope>test</scope>
            </dependency>

            <!-- Microprofile TCK test dependencies -->
            <dependency>
                <groupId>org.eclipse.microprofile.config</groupId>
                <artifactId>microprofile-config-tck</artifactId>
                <version>${version.org.eclipse.microprofile.config.api}</version>
                <scope>test</scope>
                <!-- Don't exclude all TCK dependencies, only specific ones that cause problems -->
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile.fault-tolerance</groupId>
                <artifactId>microprofile-fault-tolerance-tck</artifactId>
                <version>${version.org.eclipse.microprofile.fault-tolerance.api}</version>
                <scope>test</scope>
                <!-- Don't exclude all TCK dependencies, only specific ones that cause problems -->
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile.health</groupId>
                <artifactId>microprofile-health-tck</artifactId>
                <version>${version.org.eclipse.microprofile.health.api}</version>
                <scope>test</scope>
                <!-- Don't exclude all TCK dependencies, only specific ones that cause problems -->
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile.jwt</groupId>
                <artifactId>microprofile-jwt-auth-tck</artifactId>
                <version>${version.org.eclipse.microprofile.jwt.api}</version>
                <scope>test</scope>
                <!-- Don't exclude all TCK dependencies, only specific ones that cause problems -->
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile.jwt</groupId>
                <artifactId>microprofile-jwt-auth-tck</artifactId>
                <version>${version.org.eclipse.microprofile.jwt.api}</version>
                <type>test-jar</type>
                <scope>test</scope>
                <!-- Don't exclude all TCK dependencies, only specific ones that cause problems -->
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile.lra</groupId>
                <artifactId>microprofile-lra-tck</artifactId>
                <version>${version.org.eclipse.microprofile.lra.api}</version>
                <scope>test</scope>
                <!-- Don't exclude all TCK dependencies, only specific ones that cause problems -->
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile.openapi</groupId>
                <artifactId>microprofile-openapi-tck</artifactId>
                <version>${version.org.eclipse.microprofile.openapi}</version>
                <scope>test</scope>
                <!-- Don't exclude all TCK dependencies, only specific ones that cause problems -->
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile.reactive-streams-operators</groupId>
                <artifactId>microprofile-reactive-streams-operators-tck</artifactId>
                <version>${version.org.eclipse.microprofile.reactive-streams-operators.api}</version>
                <scope>test</scope>
                <exclusions>
                    <!--
                        Depends on org.reactivestreams:reactive-streams-tck which in turn has a dependency
                        on an ancient version of this spi
                     -->
                    <exclusion>
                        <groupId>org.jboss.arquillian.test</groupId>
                        <artifactId>arquillian-test-spi</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile.reactive.messaging</groupId>
                <artifactId>microprofile-reactive-messaging-tck</artifactId>
                <version>${version.org.eclipse.microprofile.reactive-messaging.api}</version>
                <scope>test</scope>
                <!-- Don't exclude all TCK dependencies, only specific ones that cause problems -->
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile.rest.client</groupId>
                <artifactId>microprofile-rest-client-tck</artifactId>
                <version>${version.org.eclipse.microprofile.rest.client.api}</version>
                <scope>test</scope>
                <!-- Don't exclude all TCK dependencies, only specific ones that cause problems -->
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile.telemetry.tracing</groupId>
                <artifactId>microprofile-telemetry-tracing-tck</artifactId>
                <version>${version.org.eclipse.microprofile.telemetry}</version>
                <scope>test</scope>
                <!-- Don't exclude all TCK dependencies, only specific ones that cause problems -->
            </dependency>
            <!-- End Microprofile TCK test dependencies -->

            <!-- Required by Wiremock for the MicroProfile REST Client TCK -->
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-http</artifactId>
                <version>${version.org.eclipse.jetty}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-io</artifactId>
                <version>${version.org.eclipse.jetty}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${version.org.eclipse.jetty}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-util</artifactId>
                <version>${version.org.eclipse.jetty}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-servlet</artifactId>
                <version>${version.org.eclipse.jetty}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-servlets</artifactId>
                <version>${version.org.eclipse.jetty}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-webapp</artifactId>
                <version>${version.org.eclipse.jetty}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-proxy</artifactId>
                <version>${version.org.eclipse.jetty}</version>
                <scope>test</scope>
            </dependency>
            <!-- End requirement -->

            <dependency>
                <groupId>io.smallrye.reactive</groupId>
                <artifactId>smallrye-reactive-messaging-kafka-test-companion</artifactId>
                <version>${version.io.smallrye.smallrye-reactive-messaging}</version>
                <scope>test</scope>
            </dependency>

            <!--
                Needed by io.smallrye.reactive:smallrye-reactive-messaging-kafka-test-companion which doesn't pull
                this in automatically
            -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_2.13</artifactId>
                <version>${version.org.apache.kafka}</version>
                <scope>test</scope>
            </dependency>

            <!--
                Needed by io.smallrye.reactive:smallrye-reactive-messaging-kafka-test-companion which doesn't pull
                this in automatically
            -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-server-common</artifactId>
                <version>${version.org.apache.kafka}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${version.org.awaitility.awaitility}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>${version.org.hamcrest.legacy}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.arquillian.testng</groupId>
                <artifactId>arquillian-testng-container</artifactId>
                <version>${version.org.jboss.arquillian.core}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.weld.se</groupId>
                <artifactId>weld-se-core</artifactId>
                <version>${version.org.jboss.weld.weld}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.reactivestreams</groupId>
                <artifactId>reactive-streams-tck</artifactId>
                <version>${version.org.reactivestreams}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${version.org.testng}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
