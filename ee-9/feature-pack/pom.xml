<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2021 Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-ee-9-parent</artifactId>
        <!--
        Maintain separation between the artifact id and the version to help prevent
        merge conflicts between commits changing the GA and those changing the V.
        -->
        <version>27.0.0.Final-SNAPSHOT</version>
    </parent>
    
    <artifactId>wildfly-preview-feature-pack</artifactId>

    <name>WildFly Preview: Galleon Feature Pack</name>
    <description>Tech Preview Galleon feature pack providing possibly experimental functionality</description>
    <packaging>pom</packaging>

    <properties>
        <license.directory>${project.build.directory}/resources/content/docs/licenses</license.directory>
        <mp.galleon.common.resources.directory>${basedir}/../../microprofile/galleon-common/src/main/resources</mp.galleon.common.resources.directory>
        <oidc.galleon.common.resources.directory>${basedir}/../../elytron-oidc-client/galleon-common/src/main/resources</oidc.galleon.common.resources.directory>
        <full.common.resources.directory>${basedir}/../../ee-feature-pack/common/src/main/resources</full.common.resources.directory>
        <full.galleon-common.resources.directory>${basedir}/../../ee-feature-pack/galleon-common/src/main/resources</full.galleon-common.resources.directory>
        <servlet.common.resources.directory>${basedir}/../../servlet-feature-pack/common/src/main/resources</servlet.common.resources.directory>
        <servlet.galleon-common.resources.directory>${basedir}/../../servlet-feature-pack/galleon-common/src/main/resources</servlet.galleon-common.resources.directory>

        <!-- WildFly full and ee galleon contents -->
        <full.galleon-content.resources.directory>${basedir}/../../galleon-pack/galleon-content/src/main/resources</full.galleon-content.resources.directory>
        <ee.galleon-content.resources.directory>${basedir}/../../ee-feature-pack/galleon-content/src/main/resources</ee.galleon-content.resources.directory>

        <!-- WildFly Preview modules -->
        <ee-10-api.resources.directory>${basedir}/../../ee-feature-pack/ee-10-api/src/main/resources</ee-10-api.resources.directory>
        <common.resources.directory>${basedir}/../common/src/main/resources</common.resources.directory>
        <common-microprofile.resources.directory>${basedir}/../common-microprofile/src/main/resources</common-microprofile.resources.directory>
        <content.resources.directory>${basedir}/../galleon-content/src/main/resources</content.resources.directory>
        <content-microprofile.resources.directory>${basedir}/../galleon-content-microprofile/src/main/resources</content-microprofile.resources.directory>

        <!-- WildFly Preview vs standard WildFly GAV expression properties. -->
        <module.jakarta.classifier>::jakarta</module.jakarta.classifier>
        <module.jakarta.suffix>-jakarta</module.jakarta.suffix>
        <module.jms.suffix>jakarta</module.jms.suffix>
    </properties>

    <build>
        <finalName>${server.output.dir.prefix}-galleon-pack-${server.output.dir.version}</finalName>
        <plugins>
            <plugin>
                <!-- Feature pack generation is vulnerable to leftover files in the target
                     folder from previous builds, so always clean even if the clean lifecycle is not invoked -->
                <artifactId>maven-clean-plugin</artifactId>
                <executions>
                    <execution>
                        <id>auto-clean</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-core-common-feature-pack-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.wildfly.core</groupId>
                                    <artifactId>wildfly-core-feature-pack-common</artifactId>
                                    <type>zip</type>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.wildfly.core</groupId>
                                    <artifactId>wildfly-core-feature-pack-galleon-common</artifactId>
                                    <type>zip</type>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.wildfly.core</groupId>
                                    <artifactId>wildfly-core-feature-pack-ee-10-api</artifactId>
                                    <type>zip</type>
                                </artifactItem>
                            </artifactItems>
                            <!-- The feature pack build seems to ignore such things anyway, but to be
                                 robust exclude artifact metadata content -->
                            <excludes>**/pom.xml,META-INF,META-INF/**</excludes>
                            <outputDirectory>${basedir}/target/unpacked-wildfly-core-galleon-resources</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-unpacked-wildfly-core-galleon-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/resources</outputDirectory>
                            <escapeString>\</escapeString>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target/unpacked-wildfly-core-galleon-resources</directory>
                                    <excludes>
                                        <exclude>modules/**/module.xml</exclude>
                                    </excludes>
                                </resource>
                                <resource>
                                    <directory>${basedir}/target/unpacked-wildfly-core-galleon-resources</directory>
                                    <includes>
                                        <include>modules/**/module.xml</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-servlet-common-feature-pack-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/resources</outputDirectory>
                            <escapeString>\</escapeString>
                            <resources>
                                <resource>
                                    <directory>${servlet.common.resources.directory}</directory>
                                    <excludes>
                                        <exclude>modules/**/module.xml</exclude>
                                        <exclude>license/*.xml</exclude>
                                    </excludes>
                                </resource>
                                <resource>
                                    <directory>${servlet.common.resources.directory}</directory>
                                    <includes>
                                        <include>modules/**/module.xml</include>
                                        <include>license/*.xml</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-servlet-galleon-common-feature-pack-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${servlet.galleon-common.resources.directory}</directory>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-full-common-feature-pack-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/resources</outputDirectory>
                            <escapeString>\</escapeString>
                            <resources>
                                <resource>
                                    <directory>${full.common.resources.directory}</directory>
                                    <excludes>
                                        <exclude>modules/**/module.xml</exclude>
                                        <exclude>license/*.xml</exclude>
                                    </excludes>
                                </resource>
                                <resource>
                                    <directory>${full.common.resources.directory}</directory>
                                    <includes>
                                        <include>modules/**/module.xml</include>
                                        <include>license/*.xml</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-full-galleon-common-feature-pack-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${full.galleon-common.resources.directory}</directory>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-mp-galleon-feature-pack-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/resources</outputDirectory>
                            <escapeString>\</escapeString>
                            <resources>
                                <resource>
                                    <directory>${mp.galleon.common.resources.directory}</directory>
                                    <excludes>
                                        <exclude>modules/**/module.xml</exclude>
                                        <exclude>license/*.xml</exclude>
                                        <exclude>layers/standalone/jaxrs</exclude>
                                    </excludes>
                                </resource>
                                <resource>
                                    <directory>${mp.galleon.common.resources.directory}</directory>
                                    <includes>
                                        <include>modules/**/module.xml</include>
                                        <include>license/*.xml</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-oidc-galleon-feature-pack-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${oidc.galleon.common.resources.directory}</directory>
                                    <excludes>
                                        <exclude>modules/**/module.xml</exclude>
                                        <exclude>license/*.xml</exclude>
                                    </excludes>
                                </resource>
                                <resource>
                                    <directory>${oidc.galleon.common.resources.directory}</directory>
                                    <includes>
                                        <include>modules/**/module.xml</include>
                                        <include>license/*.xml</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <!-- WildFly preview feature pack common resources -->
                    <execution>
                        <id>copy-common-feature-pack-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${common.resources.directory}</directory>
                                    <excludes>
                                        <exclude>modules/**/module.xml</exclude>
                                        <exclude>license/*.xml</exclude>
                                    </excludes>
                                </resource>
                                <resource>
                                    <directory>${common.resources.directory}</directory>
                                    <includes>
                                        <include>modules/**/module.xml</include>
                                        <include>license/*.xml</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <!-- WildFly preview feature pack common MicroProfile Resources -->
                    <execution>
                        <id>copy-common-microprofile-feature-pack-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${common.resources.directory}</directory>
                                    <excludes>
                                        <exclude>modules/**/module.xml</exclude>
                                        <exclude>license/*.xml</exclude>
                                    </excludes>
                                </resource>
                                <resource>
                                    <directory>${common-microprofile.resources.directory}</directory>
                                    <includes>
                                        <include>modules/**/module.xml</include>
                                        <include>license/*.xml</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <!-- WildFly EE 10 API resources -->
                    <execution>
                        <id>copy-ee-10-api-feature-pack-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${ee-10-api.resources.directory}</directory>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>

                    <!-- WildFly EE Galleon Content -->
                    <execution>
                        <id>copy-ee.galleon-content-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${ee.galleon-content.resources.directory}</directory>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>

                    <!-- WildFly Preview Galleon Content -->
                    <execution>
                        <id>copy-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${content.resources.directory}</directory>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>

                    <!-- WildFly Preview MicroProfile Content -->
                    <execution>
                        <id>copy-content-microprofile-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${content-microprofile.resources.directory}</directory>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.wildfly.maven.plugins</groupId>
                <artifactId>licenses-plugin</artifactId>
                <inherited>false</inherited>
                <configuration>
                    <sortByGroupIdAndArtifactId>true</sortByGroupIdAndArtifactId>
                    <excludedGroups>org.wildfly.galleon-plugins</excludedGroups>
                    <excludedArtifacts>wildfly-ee-galleon-pack|wildfly-jar-boot|wildfly-core-feature-pack-common|wildfly-core-feature-pack-galleon-common|wildfly-ee-feature-pack-common|wildfly-ee-feature-pack-galleon-common|wildfly-ee-feature-pack-pruned|wildfly-elytron\z|wildfly-ee-feature-pack-ee-10-api|wildfly-preview-feature-pack-common|wildfly-preview-feature-pack-common-microprofile</excludedArtifacts>
                </configuration>
                <executions>
                    <execution>
                        <id>update-licenses-xml</id>
                        <goals>
                            <goal>insert-versions</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <licensesConfigFiles>
                                <licensesConfigFile>${basedir}/target/resources/license/core-feature-pack-common-licenses.xml</licensesConfigFile>
                                <licensesConfigFile>${basedir}/target/resources/license/servlet-feature-pack-common-licenses.xml</licensesConfigFile>
                                <licensesConfigFile>${basedir}/target/resources/license/ee-feature-pack-common-licenses.xml</licensesConfigFile>
                                <licensesConfigFile>${basedir}/target/resources/license/ee-feature-pack-ee-10-api-licenses.xml</licensesConfigFile>
                                <licensesConfigFile>${basedir}/target/resources/license/preview-feature-pack-licenses.xml</licensesConfigFile>
                                <licensesConfigFile>${basedir}/target/resources/license/elytron-oidc-feature-pack-licenses.xml</licensesConfigFile>
                                <licensesConfigFile>${basedir}/target/resources/license/microprofile-feature-pack-licenses.xml</licensesConfigFile>
                                <licensesConfigFile>${basedir}/target/resources/license/preview-feature-pack-common-licenses.xml</licensesConfigFile>
                                <licensesConfigFile>${basedir}/target/resources/license/preview-feature-pack-common-microprofile-licenses.xml</licensesConfigFile>
                            </licensesConfigFiles>
                            <licensesOutputFile>${license.directory}/microprofile-feature-pack-licenses.xml</licensesOutputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.wildfly.galleon-plugins</groupId>
                <artifactId>wildfly-galleon-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>feature-pack-build</id>
                        <goals>
                            <goal>build-feature-pack</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <release-name>${preview.dist.product.release.name}</release-name>
                            <fork-embedded>${galleon.fork.embedded}</fork-embedded>
                            <task-properties>
                                <product.release.version>${preview.dist.product.release.version}</product.release.version>
                            </task-properties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>

        <!-- feature pack dependencies -->

        <dependency>
            <groupId>org.wildfly.galleon-plugins</groupId>
            <artifactId>wildfly-galleon-plugins</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.galleon-plugins</groupId>
            <artifactId>wildfly-config-gen</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.galleon-plugins</groupId>
            <artifactId>transformer</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- module and copy artifact dependencies -->

        <!-- Deps from the source modules we copy in -->

        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-feature-pack-common</artifactId>
            <type>pom</type>
            <scope>provided</scope>
            <exclusions>
                <!-- Exclude deps that have been replaced with different artifacts in this FP.
                     TODO perhaps put these in a different maven module that we don't pull in -->
                <exclusion>
                    <groupId>org.jboss.invocation</groupId>
                    <artifactId>jboss-invocation</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.wildfly.security</groupId>
                    <artifactId>wildfly-elytron-jacc</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.wildfly.security</groupId>
                    <artifactId>wildfly-elytron-jaspi</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.wildfly.security</groupId>
                    <artifactId>wildfly-elytron-audit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.wildfly.security</groupId>
                    <artifactId>wildfly-elytron-client</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.wildfly.security</groupId>
                    <artifactId>wildfly-elytron-http-oidc</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.wildfly.security</groupId>
                    <artifactId>wildfly-elytron-json-util</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.wildfly.security</groupId>
                    <artifactId>wildfly-elytron-mechanism-oauth2</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.wildfly.security</groupId>
                    <artifactId>wildfly-elytron-realm-token</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.wildfly.security</groupId>
                    <artifactId>wildfly-elytron-tool</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.wildfly.security</groupId>
                    <artifactId>wildfly-elytron-x500-cert-acme</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-feature-pack-galleon-common</artifactId>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>${full.maven.groupId}</groupId>
            <artifactId>wildfly-mp-feature-pack-galleon-common</artifactId>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>${full.maven.groupId}</groupId>
            <artifactId>wildfly-oidc-feature-pack-galleon-common</artifactId>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>${ee.maven.groupId}</groupId>
            <artifactId>wildfly-ee-feature-pack-common</artifactId>
            <version>${ee.maven.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>

        <!-- Bring in all the WildFly EE 10 API deps in one go -->
        <dependency>
            <groupId>${ee.maven.groupId}</groupId>
            <artifactId>wildfly-ee-feature-pack-ee-10-api</artifactId>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>${ee.maven.groupId}</groupId>
            <artifactId>wildfly-ee-feature-pack-galleon-common</artifactId>
            <version>${ee.maven.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>${ee.maven.groupId}</groupId>
            <artifactId>wildfly-servlet-feature-pack-common</artifactId>
            <version>${ee.maven.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>${ee.maven.groupId}</groupId>
            <artifactId>wildfly-servlet-feature-pack-galleon-common</artifactId>
            <version>${ee.maven.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>

        <!-- Bring in all the WildFly preview feature pack common deps in one go -->
        <dependency>
            <groupId>${ee.maven.groupId}</groupId>
            <artifactId>wildfly-preview-feature-pack-common</artifactId>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>

        <!-- Bring in all the WildFly Preview Common MicroProfile deps in one go -->
        <dependency>
            <groupId>${ee.maven.groupId}</groupId>
            <artifactId>wildfly-preview-feature-pack-common-microprofile</artifactId>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <!-- This profile should only be activated to download licenses from remote URLs
                 instead of copying the license files from the src/main/resources/content/docs/licences
                 directory -->
            <id>download-licenses</id>
            <activation>
                <property>
                    <name>download-licenses</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>download-licenses</goal>
                                </goals>
                                <phase>prepare-package</phase>
                                <configuration>
                                    <licensesOutputDirectory>${basedir}/target/resources/content/docs/licenses</licensesOutputDirectory>
                                    <licensesOutputFile>${basedir}/target/resources/content/docs/licenses/licenses.xml</licensesOutputFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>enforce</id>
            <activation>
                <property>
                    <name>!skip-enforce</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>ban-transitive-deps</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <banTransitiveDependencies>
                                            <excludes>
                                                <!-- Ignore jdk jars because they are system scope -->
                                                <exclude>com.sun:tools</exclude>
                                                <exclude>sun.jdk:jconsole</exclude>
                                                <!-- Ignore the shared resource poms as those we want their
                                                     transitives. Those poms ban transitives at their level -->
                                                <exclude>org.wildfly.core:wildfly-core-feature-pack-common</exclude>
                                                <exclude>${full.maven.groupId}:wildfly-mp-feature-pack-galleon-common</exclude>
                                                <exclude>${full.maven.groupId}:wildfly-oidc-feature-pack-galleon-common</exclude>
                                                <exclude>${ee.maven.groupId}:wildfly-ee-feature-pack-common</exclude>
                                                <exclude>${ee.maven.groupId}:wildfly-servlet-feature-pack-common</exclude>
                                                <exclude>${ee.maven.groupId}:wildfly-ee-feature-pack-ee-10-api</exclude>
                                                <exclude>${ee.maven.groupId}:wildfly-preview-feature-pack-common</exclude>
                                                <exclude>${ee.maven.groupId}:wildfly-preview-feature-pack-common-microprofile</exclude>
                                            </excludes>
                                        </banTransitiveDependencies>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>

                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>enforce-product</id>
            <activation>
                <property>
                    <name>enforce-product</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>org.jboss.maven.plugins.enforcer.rules</groupId>
                                <artifactId>version-enforcer-rule</artifactId>
                                <version>1.0.0</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>ban-non-product-deps</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <rule implementation="org.jboss.maven.plugins.enforcer.rules.version.BanVersionDependenciesRule">
                                          <versionPattern>^((?!redhat).)*$</versionPattern>
                                        </rule>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>javadocDist</id>
            <properties>
                <javadoc.branding>WildFly public API - ${project.version}</javadoc.branding>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${version.javadoc.plugin}</version>
                        <executions>
                            <execution>
                                <id>javadocs-dist</id>
                                <goals>
                                    <goal>aggregate-jar</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration>
                                    <verbose>true</verbose>
                                    <maxmemory>2400m</maxmemory>
                                    <!-- To prevent problems with author names written in non-UTF-8:
                                    -->
                                    <encoding>ISO-8859-1</encoding>

                                    <windowtitle>${javadoc.branding} public API</windowtitle>
                                    <doctitle>${javadoc.branding} public API</doctitle>
                                    <header>${javadoc.branding}</header>
                                    <footer>${javadoc.branding}</footer>

                                    <includeDependencySources>true</includeDependencySources>
                                    <dependencySourceIncludes>
                                        <!-- Filled by a script during creation of Javadoc. -->
                                    </dependencySourceIncludes>

                                    <dependencySourceExcludes>
                                        <!-- Filled by a script during creation of Javadoc. -->
                                    </dependencySourceExcludes>

                                    <groups>
                                        <!-- Filled by a script during creation of Javadoc. -->
                                    </groups>

                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
