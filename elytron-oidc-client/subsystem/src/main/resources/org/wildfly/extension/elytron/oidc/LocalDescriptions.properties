elytron-oidc-client=WildFly Extension for Elytron OIDC
elytron-oidc-client.add=Add the Elytron OIDC subsystem
elytron-oidc-client.remove=Remove the Elytron OIDC subsystem
elytron-oidc-client.realm=A Keycloak realm
elytron-oidc-client.provider=An OpenID Connect provider
elytron-oidc-client.secure-deployment=A deployment secured by an OpenID Connect provider

elytron-oidc-client.realm.add=Add a realm definition to the subsystem
elytron-oidc-client.realm.remove=Remove a realm from the subsystem
elytron-oidc-client.realm.realm-public-key=Public key of the realm
elytron-oidc-client.realm.auth-server-url=Base URL of the Realm Auth Server
elytron-oidc-client.realm.provider-url=The provider URL
elytron-oidc-client.realm.disable-trust-manager=Adapter will not use a trust manager when making adapter HTTPS requests
elytron-oidc-client.realm.ssl-required=Whether communication with the OpenID provider should be over HTTPS. Valid values are: "all" - to always require HTTPS, "external" - to only require HTTPS for external requests, "none" - if HTTPS is not required. The default value is "external". This should be set to "all" in production environments.
elytron-oidc-client.realm.confidential-port=Specify the confidential port (SSL/TLS) used by the Realm Auth Server
elytron-oidc-client.realm.allow-any-hostname=If true, hostname verification will be skipped when communicating with the OpenID provider over HTTPS. The default value is false. This can be useful in testing environments. This should never be set to true in production environments.
elytron-oidc-client.realm.truststore=Truststore used for adapter client HTTPS requests
elytron-oidc-client.realm.truststore-password=Password of the Truststore
elytron-oidc-client.realm.connection-pool-size=Connection pool size for the client used by the adapter
elytron-oidc-client.realm.enable-cors=Enable Keycloak CORS support
elytron-oidc-client.realm.client-keystore=Path to the client keystore to be used when communicating with the OpenID provider over HTTPS. This is optional.
elytron-oidc-client.realm.client-keystore-password=Password for the client keystore. This is required if client-keystore has been specified.
elytron-oidc-client.realm.client-key-password=Password for the client key. This is required if client-keystore has been specified.
elytron-oidc-client.realm.cors-max-age=CORS max-age header
elytron-oidc-client.realm.cors-allowed-headers=CORS allowed headers
elytron-oidc-client.realm.cors-allowed-methods=CORS allowed methods
elytron-oidc-client.realm.cors-exposed-headers=CORS exposed headers
elytron-oidc-client.realm.expose-token=Enable secure URL that exposes access token
elytron-oidc-client.realm.auth-server-url-for-backend-requests=URL to use to make background calls to auth server
elytron-oidc-client.realm.always-refresh-token=Refresh token on every single web request
elytron-oidc-client.realm.register-node-at-startup=Cluster setting
elytron-oidc-client.realm.register-node-period=how often to re-register node
elytron-oidc-client.realm.token-store=cookie or session storage for auth session data
elytron-oidc-client.realm.principal-attribute=Indicates which claim value from the ID token to use as the principal for the identity
elytron-oidc-client.realm.autodetect-bearer-only=autodetect bearer-only requests
elytron-oidc-client.realm.ignore-oauth-query-parameter=disable query parameter parsing for access_token
elytron-oidc-client.realm.proxy-url=The URL for the HTTP proxy if one is used.
elytron-oidc-client.realm.verify-token-audience=If true, then during bearer-only authentication, the adapter will verify if token contains this client name (resource) as an audience
elytron-oidc-client.realm.socket-timeout-millis=Timeout for socket waiting for data in milliseconds
elytron-oidc-client.realm.connection-ttl-millis=Connection time to live in milliseconds
elytron-oidc-client.realm.connection-timeout-millis=Timeout for establishing the connection with the remote host in milliseconds
elytron-oidc-client.realm.token-signature-algorithm=The token signature algorithm used by the OpenID provider

elytron-oidc-client.provider.add=Add a realm definition to the subsystem
elytron-oidc-client.provider.remove=Remove a realm from the subsystem
elytron-oidc-client.provider.realm-public-key=Public key of the realm
elytron-oidc-client.provider.auth-server-url=Base URL of the Realm Auth Server
elytron-oidc-client.provider.provider-url=The provider URL
elytron-oidc-client.provider.disable-trust-manager=Adapter will not use a trust manager when making adapter HTTPS requests
elytron-oidc-client.provider.ssl-required=Whether communication with the OpenID provider should be over HTTPS. Valid values are: "all" - to always require HTTPS, "external" - to only require HTTPS for external requests, "none" - if HTTPS is not required. The default value is "external". This should be set to "all" in production environments.
elytron-oidc-client.provider.confidential-port=Specify the confidential port (SSL/TLS) used by the Realm Auth Server
elytron-oidc-client.provider.allow-any-hostname=If true, hostname verification will be skipped when communicating with the OpenID provider over HTTPS. The default value is false. This can be useful in testing environments. This should never be set to true in production environments.
elytron-oidc-client.provider.truststore=Truststore used for adapter client HTTPS requests
elytron-oidc-client.provider.truststore-password=Password of the Truststore
elytron-oidc-client.provider.connection-pool-size=Connection pool size for the client used by the adapter
elytron-oidc-client.provider.enable-cors=Enable Keycloak CORS support
elytron-oidc-client.provider.client-keystore=Path to the client keystore to be used when communicating with the OpenID provider over HTTPS. This is optional.
elytron-oidc-client.provider.client-keystore-password=Password for the client keystore. This is required if client-keystore has been specified.
elytron-oidc-client.provider.client-key-password=Password for the client key. This is required if client-keystore has been specified.
elytron-oidc-client.provider.cors-max-age=CORS max-age header
elytron-oidc-client.provider.cors-allowed-headers=CORS allowed headers
elytron-oidc-client.provider.cors-allowed-methods=CORS allowed methods
elytron-oidc-client.provider.cors-exposed-headers=CORS exposed headers
elytron-oidc-client.provider.expose-token=Enable secure URL that exposes access token
elytron-oidc-client.provider.auth-server-url-for-backend-requests=URL to use to make background calls to auth server
elytron-oidc-client.provider.always-refresh-token=Refresh token on every single web request
elytron-oidc-client.provider.register-node-at-startup=Cluster setting
elytron-oidc-client.provider.register-node-period=how often to re-register node
elytron-oidc-client.provider.token-store=cookie or session storage for auth session data
elytron-oidc-client.provider.principal-attribute=Indicates which claim value from the ID token to use as the principal for the identity
elytron-oidc-client.provider.autodetect-bearer-only=autodetect bearer-only requests
elytron-oidc-client.provider.ignore-oauth-query-parameter=disable query parameter parsing for access_token
elytron-oidc-client.provider.proxy-url=The URL for the HTTP proxy if one is used.
elytron-oidc-client.provider.verify-token-audience=If true, then during bearer-only authentication, the adapter will verify if token contains this client name (resource) as an audience
elytron-oidc-client.provider.socket-timeout-millis=Timeout for socket waiting for data in milliseconds
elytron-oidc-client.provider.connection-ttl-millis=Connection time to live in milliseconds
elytron-oidc-client.provider.connection-timeout-millis=Timeout for establishing the connection with the remote host in milliseconds
elytron-oidc-client.provider.token-signature-algorithm=The token signature algorithm used by the OpenID provider

elytron-oidc-client.secure-deployment.add=Add a deployment to be secured by an OpenID Connect provider
elytron-oidc-client.secure-deployment.remove=Remove a deployment to be secured by an OpenID Connect provider
elytron-oidc-client.secure-deployment.realm=Keycloak realm
elytron-oidc-client.secure-deployment.provider=OpenID provider
elytron-oidc-client.secure-deployment.realm-public-key=Public key of the realm
elytron-oidc-client.secure-deployment.auth-server-url=Base URL of the Realm Auth Server
elytron-oidc-client.secure-deployment.provider-url=The provider URL
elytron-oidc-client.secure-deployment.disable-trust-manager=Adapter will not use a trust manager when making adapter HTTPS requests
elytron-oidc-client.secure-deployment.ssl-required=Whether communication with the OpenID provider should be over HTTPS. Valid values are: "all" - to always require HTTPS, "external" - to only require HTTPS for external requests, "none" - if HTTPS is not required. The default value is "external". This should be set to "all" in production environments.
elytron-oidc-client.secure-deployment.confidential-port=Specify the confidential port (SSL/TLS) used by the Realm Auth Server
elytron-oidc-client.secure-deployment.allow-any-hostname=If true, hostname verification will be skipped when communicating with the OpenID provider over HTTPS. The default value is false. This can be useful in testing environments. This should never be set to true in production environments.
elytron-oidc-client.secure-deployment.truststore=Truststore used for adapter client HTTPS requests
elytron-oidc-client.secure-deployment.truststore-password=Password of the Truststore
elytron-oidc-client.secure-deployment.connection-pool-size=Connection pool size for the client used by the adapter
elytron-oidc-client.secure-deployment.resource=Application name
elytron-oidc-client.secure-deployment.client-id=Client ID
elytron-oidc-client.secure-deployment.use-realm-role-mappings=Use realm level permissions from token
elytron-oidc-client.secure-deployment.use-resource-role-mappings=Use resource level permissions from token
elytron-oidc-client.secure-deployment.redirect-rewrite-rule=Apply a rewrite rule for the redirect URI
elytron-oidc-client.secure-deployment.bearer-only=Bearer Token Auth only
elytron-oidc-client.secure-deployment.enable-basic-auth=Enable Basic Authentication
elytron-oidc-client.secure-deployment.public-client=Public client
elytron-oidc-client.secure-deployment.enable-cors=Enable Keycloak CORS support
elytron-oidc-client.secure-deployment.autodetect-bearer-only=autodetect bearer-only requests
elytron-oidc-client.secure-deployment.client-keystore=Path to the client keystore to be used when communicating with the OpenID provider over HTTPS. This is optional.
elytron-oidc-client.secure-deployment.client-keystore-password=Password for the client keystore. This is required if client-keystore has been specified.
elytron-oidc-client.secure-deployment.client-key-password=Password for the client key. This is required if client-keystore has been specified.
elytron-oidc-client.secure-deployment.cors-max-age=CORS max-age header
elytron-oidc-client.secure-deployment.cors-allowed-headers=CORS allowed headers
elytron-oidc-client.secure-deployment.cors-allowed-methods=CORS allowed methods
elytron-oidc-client.secure-deployment.cors-exposed-headers=CORS exposed headers
elytron-oidc-client.secure-deployment.expose-token=Enable secure URL that exposes access token
elytron-oidc-client.secure-deployment.auth-server-url-for-backend-requests=URL to use to make background calls to auth server
elytron-oidc-client.secure-deployment.always-refresh-token=Refresh token on every single web request
elytron-oidc-client.secure-deployment.register-node-at-startup=Cluster setting
elytron-oidc-client.secure-deployment.register-node-period=how often to re-register node
elytron-oidc-client.secure-deployment.token-store=cookie or session storage for auth session data
elytron-oidc-client.secure-deployment.principal-attribute=Indicates which claim value from the ID token to use as the principal for the identity
elytron-oidc-client.secure-deployment.turn-off-change-session-id-on-login=The session id is changed by default on a successful login.  Change this to true if you want to turn this off
elytron-oidc-client.secure-deployment.token-minimum-time-to-live=The adapter will refresh the token if the current token is expired OR will expire in 'token-minimum-time-to-live' seconds or less
elytron-oidc-client.secure-deployment.min-time-between-jwks-requests=If adapter recognize token signed by unknown public key, it will try to download new public key from elytron-oidc-client server. However it won't try to download if already tried it in less than 'min-time-between-jwks-requests' seconds
elytron-oidc-client.secure-deployment.public-key-cache-ttl=Maximum time the downloaded public keys are considered valid. When this time reach, the adapter is forced to download public keys from elytron-oidc-client server
elytron-oidc-client.secure-deployment.ignore-oauth-query-parameter=disable query parameter parsing for access_token
elytron-oidc-client.secure-deployment.proxy-url=The URL for the HTTP proxy if one is used.
elytron-oidc-client.secure-deployment.verify-token-audience=If true, then during bearer-only authentication, the adapter will verify if token contains this client name (resource) as an audience
elytron-oidc-client.secure-deployment.adapter-state-cookie-path=If set, defines the path used in cookies set by the adapter. Useful when deploying the application in the root context path.
elytron-oidc-client.secure-deployment.credential=Credential used to communicate with the OpenID Connect provider
elytron-oidc-client.secure-deployment.credential.add=Add credentials used to communicate with the OpenID Connect provider
elytron-oidc-client.secure-deployment.credential.remove=Remove credentials used to communicate with the OpenID Connect provider
elytron-oidc-client.secure-deployment.credential.client-key-password=Password for the client key. This is required if client-keystore-file has been specified.
elytron-oidc-client.secure-deployment.credential.client-keystore-password=Password for the client keystore. This is required if client-keystore-file has been specified.
elytron-oidc-client.secure-deployment.credential.client-keystore-file=Path to the client keystore. This is optional.
elytron-oidc-client.secure-deployment.credential.client-keystore-type=Client keystore type
elytron-oidc-client.secure-deployment.credential.client-key-alias=Client key alias
elytron-oidc-client.secure-deployment.credential.token-timeout=Token timeout
elytron-oidc-client.secure-deployment.credential.secret=Secret
elytron-oidc-client.secure-deployment.credential.algorithm=Algorithm for signed JWT
elytron-oidc-client.secure-deployment.redirect-rewrite-rule.add=Add a rewrite rule for the redirect URI
elytron-oidc-client.secure-deployment.redirect-rewrite-rule.remove=Remove a rewrite rule for the redirect URI
elytron-oidc-client.secure-deployment.redirect-rewrite-rule.replacement=The replacement string
elytron-oidc-client.secure-deployment.socket-timeout-millis=Timeout for socket waiting for data in milliseconds
elytron-oidc-client.secure-deployment.connection-ttl-millis=Connection time to live in milliseconds
elytron-oidc-client.secure-deployment.connection-timeout-millis=Timeout for establishing the connection with the remote host in milliseconds
elytron-oidc-client.secure-deployment.token-signature-algorithm=The token signature algorithm used by the OpenID provider


