{
    "model-description" => {
        "description" => "The configuration of the infinispan subsystem.",
        "attributes" => {},
        "operations" => undefined,
        "children" => {"cache-container" => {
            "description" => "The configuration of an infinispan cache container",
            "model-description" => undefined
        }}
    },
    "address" => [("subsystem" => "infinispan")],
    "children" => [{
        "model-description" => {
            "description" => "The configuration of an infinispan cache container",
            "attributes" => {
                "module" => {
                    "type" => STRING,
                    "description" => "The module whose class loader should be used when building this cache's configuration.",
                    "expressions-allowed" => true,
                    "nillable" => true,
                    "default" => "org.jboss.as.clustering.infinispan"
                },
                "start" => {
                    "type" => STRING,
                    "description" => "The cache start mode, which can be EAGER (immediate start) or LAZY (on-demand start).",
                    "expressions-allowed" => true,
                    "nillable" => true,
                    "default" => "LAZY",
                    "allowed" => [
                        "EAGER",
                        "LAZY"
                    ]
                },
                "jndi-name" => {
                    "type" => STRING,
                    "description" => "The jndi-name to which to bind this cache instance.",
                    "expressions-allowed" => true,
                    "nillable" => true,
                    "min-length" => 1L,
                    "max-length" => 2147483647L
                },
                "replication-queue-executor" => {
                    "type" => STRING,
                    "description" => "The executor used for asynchronous cache operations",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "min-length" => 1L,
                    "max-length" => 2147483647L
                },
                "default-cache" => {
                    "type" => STRING,
                    "description" => "The default infinispan cache",
                    "expressions-allowed" => true,
                    "nillable" => true,
                    "min-length" => 1L,
                    "max-length" => 2147483647L
                },
                "listener-executor" => {
                    "type" => STRING,
                    "description" => "The executor used for the replication queue",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "min-length" => 1L,
                    "max-length" => 2147483647L
                },
                "aliases" => {
                    "type" => LIST,
                    "description" => "The list of aliases for this cache container",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "value-type" => {"alias" => {
                        "type" => STRING,
                        "description" => "An alias for this cache container",
                        "expressions-allowed" => false,
                        "nillable" => true,
                        "min-length" => 1L,
                        "max-length" => 2147483647L
                    }}
                },
                "eviction-executor" => {
                    "type" => STRING,
                    "description" => "The scheduled executor used for eviction",
                    "expressions-allowed" => false,
                    "nillable" => true,
                    "min-length" => 1L,
                    "max-length" => 2147483647L
                }
            },
            "operations" => undefined,
            "children" => {
                "replicated-cache" => {
                    "description" => "A replicated cache child of the cache container.",
                    "model-description" => undefined
                },
                "invalidation-cache" => {
                    "description" => "An invalidation cache child of the cache container.",
                    "model-description" => undefined
                },
                "distributed-cache" => {
                    "description" => "A distributed cache child of the cache container.",
                    "model-description" => undefined
                },
                "local-cache" => {
                    "description" => "A replicated cache child of the cache container.",
                    "model-description" => undefined
                },
                "transport" => {
                    "description" => "The description of the transport used by this cache container",
                    "model-description" => undefined
                }
            }
        },
        "address" => [
            ("subsystem" => "infinispan"),
            ("cache-container" => "*")
        ],
        "children" => [
            {
                "model-description" => {
                    "description" => "A replicated cache",
                    "attributes" => {
                        "module" => {
                            "type" => STRING,
                            "description" => "The module whose class loader should be used when building this cache's configuration.",
                            "expressions-allowed" => true,
                            "nillable" => true
                        },
                        "indexing" => {
                            "type" => STRING,
                            "description" => "If enabled, entries will be indexed when they are added to the cache. Indexes will be updated as entries change or are removed.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => "NONE",
                            "allowed" => [
                                "NONE",
                                "LOCAL",
                                "ALL"
                            ]
                        },
                        "mode" => {
                            "type" => STRING,
                            "description" => "Sets the clustered cache mode, ASYNC for asynchronous operation, or SYNC for synchronous operation.",
                            "expressions-allowed" => true,
                            "nillable" => false,
                            "allowed" => [
                                "SYNC",
                                "ASYNC"
                            ]
                        },
                        "remote-timeout" => {
                            "type" => LONG,
                            "description" => "In SYNC mode, the timeout (in ms) used to wait for an acknowledgment when making a remote call, after which the call is aborted and an exception is thrown.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 17500,
                            "unit" => "MILLISECONDS"
                        },
                        "batching" => {
                            "type" => BOOLEAN,
                            "description" => "If enabled, the invocation batching API will be made available for this cache.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => false
                        },
                        "start" => {
                            "type" => STRING,
                            "description" => "The cache start mode, which can be EAGER (immediate start) or LAZY (on-demand start).",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => "LAZY",
                            "allowed" => [
                                "EAGER",
                                "LAZY"
                            ]
                        },
                        "jndi-name" => {
                            "type" => STRING,
                            "description" => "The jndi-name to which to bind this cache instance.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "queue-size" => {
                            "type" => INT,
                            "description" => "In ASYNC mode, this attribute can be used to trigger flushing of the queue when it reaches a specific threshold.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 0
                        },
                        "indexing-properties" => {
                            "type" => OBJECT,
                            "description" => "Properties to control indexing behaviour",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "value-type" => STRING
                        },
                        "async-marshalling" => {
                            "type" => BOOLEAN,
                            "description" => "If enabled, this will cause marshalling of entries to be performed asynchronously.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => false
                        },
                        "queue-flush-interval" => {
                            "type" => LONG,
                            "description" => "In ASYNC mode, this attribute controls how often the asynchronous thread used to flush the replication queue runs. This should be a positive integer which represents thread wakeup time in milliseconds.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 10,
                            "unit" => "MILLISECONDS"
                        }
                    },
                    "operations" => undefined,
                    "children" => {
                        "transaction" => {
                            "description" => "The cache transaction configuration.",
                            "model-description" => undefined
                        },
                        "expiration" => {
                            "description" => "The cache expiration configuration.",
                            "model-description" => undefined
                        },
                        "state-transfer" => {
                            "description" => "The state transfer configuration for distribution and replicated caches.",
                            "model-description" => undefined
                        },
                        "eviction" => {
                            "description" => "The cache eviction configuration.",
                            "model-description" => undefined
                        },
                        "locking" => {
                            "description" => "The locking configuration of the cache.",
                            "model-description" => undefined
                        },
                        "string-keyed-jdbc-store" => {
                            "description" => "The string keyed cache JDBC store configuration.",
                            "model-description" => undefined
                        },
                        "remote-store" => {
                            "description" => "The cache remote store configuration.",
                            "model-description" => undefined
                        },
                        "mixed-keyed-jdbc-store" => {
                            "description" => "The mixed keyed cache JDBC store configuration.",
                            "model-description" => undefined
                        },
                        "binary-keyed-jdbc-store" => {
                            "description" => "The binary keyed cache JDBC store configuration.",
                            "model-description" => undefined
                        },
                        "file-store" => {
                            "description" => "The cache file store configuration.",
                            "model-description" => undefined
                        },
                        "store" => {
                            "description" => "The cache store configuration.",
                            "model-description" => undefined
                        }
                    }
                },
                "address" => [
                    ("subsystem" => "infinispan"),
                    ("cache-container" => "*"),
                    ("replicated-cache" => "*")
                ],
                "children" => [
                    {
                        "model-description" => {
                            "description" => "The cache transaction configuration.",
                            "attributes" => {
                                "mode" => {
                                    "type" => STRING,
                                    "description" => "Sets the clustered cache mode, ASYNC for asynchronous operation, or SYNC for synchronous operation.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => "NONE",
                                    "allowed" => [
                                        "NONE",
                                        "NON_XA",
                                        "NON_DURABLE_XA",
                                        "FULL_XA"
                                    ]
                                },
                                "locking" => {
                                    "type" => STRING,
                                    "description" => "The locking configuration of the cache.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => "OPTIMISTIC",
                                    "allowed" => [
                                        "OPTIMISTIC",
                                        "PESSIMISTIC"
                                    ]
                                },
                                "stop-timeout" => {
                                    "type" => LONG,
                                    "description" => "If there are any ongoing transactions when a cache is stopped, Infinispan waits for ongoing remote and local transactions to finish. The amount of time to wait for is defined by the cache stop timeout.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 30000,
                                    "unit" => "MILLISECONDS"
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("replicated-cache" => "*"),
                            ("transaction" => "TRANSACTION")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache expiration configuration.",
                            "attributes" => {
                                "lifespan" => {
                                    "type" => LONG,
                                    "description" => "Maximum lifespan of a cache entry, after which the entry is expired cluster-wide, in milliseconds. -1 means the entries never expire.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => -1,
                                    "unit" => "MILLISECONDS"
                                },
                                "max-idle" => {
                                    "type" => LONG,
                                    "description" => "Maximum idle time a cache entry will be maintained in the cache, in milliseconds. If the idle time is exceeded, the entry will be expired cluster-wide. -1 means the entries never expire.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => -1,
                                    "unit" => "MILLISECONDS"
                                },
                                "interval" => {
                                    "type" => LONG,
                                    "description" => "Interval (in milliseconds) between subsequent runs to purge expired entries from memory and any cache stores. If you wish to disable the periodic eviction process altogether, set wakeupInterval to -1.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 60000,
                                    "unit" => "MILLISECONDS"
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("replicated-cache" => "*"),
                            ("expiration" => "EXPIRATION")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The state transfer configuration for distribution and replicated caches.",
                            "attributes" => {
                                "enabled" => {
                                    "type" => BOOLEAN,
                                    "description" => "If enabled, this will cause the cache to ask neighboring caches for state when it starts up, so the cache starts 'warm', although it will impact startup time.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "chunk-size" => {
                                    "type" => INT,
                                    "description" => "The size, in bytes, in which to batch the transfer of cache entries.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 10000
                                },
                                "timeout" => {
                                    "type" => LONG,
                                    "description" => "The maximum amount of time (ms) to wait for state from neighboring caches, before throwing an exception and aborting startup.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 60000,
                                    "unit" => "MILLISECONDS"
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("replicated-cache" => "*"),
                            ("state-transfer" => "STATE_TRANSFER")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache eviction configuration.",
                            "attributes" => {
                                "strategy" => {
                                    "type" => STRING,
                                    "description" => "Sets the cache eviction strategy. Available options are 'UNORDERED', 'FIFO', 'LRU', 'LIRS' and 'NONE' (to disable eviction).",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => "NONE",
                                    "allowed" => [
                                        "NONE",
                                        "UNORDERED",
                                        "FIFO",
                                        "LRU",
                                        "LIRS"
                                    ]
                                },
                                "max-entries" => {
                                    "type" => INT,
                                    "description" => "Maximum number of entries in a cache instance. If selected value is not a power of two the actual value will default to the least power of two larger than selected value. -1 means no limit.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => -1
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("replicated-cache" => "*"),
                            ("eviction" => "EVICTION")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The locking configuration of the cache.",
                            "attributes" => {
                                "acquire-timeout" => {
                                    "type" => LONG,
                                    "description" => "Maximum time to attempt a particular lock acquisition.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 15000,
                                    "unit" => "MILLISECONDS"
                                },
                                "isolation" => {
                                    "type" => STRING,
                                    "description" => "Sets the cache locking isolation level.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => "REPEATABLE_READ",
                                    "allowed" => [
                                        "NONE",
                                        "SERIALIZABLE",
                                        "REPEATABLE_READ",
                                        "READ_COMMITTED",
                                        "READ_UNCOMMITTED"
                                    ]
                                },
                                "striping" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, a pool of shared locks is maintained for all entries that need to be locked. Otherwise, a lock is created per entry in the cache. Lock striping helps control memory footprint but may reduce concurrency in the system.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "concurrency-level" => {
                                    "type" => INT,
                                    "description" => "Concurrency level for lock containers. Adjust this value according to the number of concurrent threads interacting with Infinispan.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 1000
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("replicated-cache" => "*"),
                            ("locking" => "LOCKING")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The string keyed cache JDBC store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "string-keyed-table" => {
                                    "type" => OBJECT,
                                    "description" => "The database table used to store cache entries.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "value-type" => {
                                        "prefix" => {
                                            "type" => STRING,
                                            "description" => "The prefix for the database table name.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "min-length" => 1L,
                                            "max-length" => 2147483647L
                                        },
                                        "batch-size" => {
                                            "type" => INT,
                                            "description" => "For DB inserts, the batch size determines how many inserts are batched together.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "fetch-size" => {
                                            "type" => INT,
                                            "description" => "For DB queries, the fetch size will be used to set the fetch size on ResultSets.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "id-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry ids.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "data-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry data.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "timestamp-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry timestamps.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        }
                                    }
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "datasource" => {
                                    "type" => STRING,
                                    "description" => "A datasource reference for this datastore.",
                                    "expressions-allowed" => true,
                                    "nillable" => false,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("replicated-cache" => "*"),
                            ("string-keyed-jdbc-store" => "STRING_KEYED_JDBC_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("replicated-cache" => "*"),
                                    ("string-keyed-jdbc-store" => "STRING_KEYED_JDBC_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("replicated-cache" => "*"),
                                    ("string-keyed-jdbc-store" => "STRING_KEYED_JDBC_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache remote store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "remote-servers" => {
                                    "type" => LIST,
                                    "description" => "A list of remote servers for this cache store.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "allowed" => ["outbound-socket-binding"],
                                    "value-type" => {"outbound-socket-binding" => {
                                        "type" => STRING,
                                        "description" => "An outbound socket binding for a remote server.",
                                        "expressions-allowed" => false,
                                        "nillable" => true,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }}
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "cache" => {
                                    "type" => STRING,
                                    "description" => "The name of the remote cache to use for this remote store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "tcp-no-delay" => {
                                    "type" => BOOLEAN,
                                    "description" => "A TCP_NODELAY value for remote cache communication.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "socket-timeout" => {
                                    "type" => LONG,
                                    "description" => "A socket timeout for remote cache communication.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 60000,
                                    "unit" => "MILLISECONDS"
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("replicated-cache" => "*"),
                            ("remote-store" => "REMOTE_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("replicated-cache" => "*"),
                                    ("remote-store" => "REMOTE_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("replicated-cache" => "*"),
                                    ("remote-store" => "REMOTE_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The mixed keyed cache JDBC store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "binary-keyed-table" => {
                                    "type" => OBJECT,
                                    "description" => "The database table used to store binary cache entries.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "value-type" => {
                                        "prefix" => {
                                            "type" => STRING,
                                            "description" => "The prefix for the database table name.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "min-length" => 1L,
                                            "max-length" => 2147483647L
                                        },
                                        "batch-size" => {
                                            "type" => INT,
                                            "description" => "For DB inserts, the batch size determines how many inserts are batched together.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "fetch-size" => {
                                            "type" => INT,
                                            "description" => "For DB queries, the fetch size will be used to set the fetch size on ResultSets.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "id-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry ids.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "data-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry data.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "timestamp-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry timestamps.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        }
                                    }
                                },
                                "string-keyed-table" => {
                                    "type" => OBJECT,
                                    "description" => "The database table used to store cache entries.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "value-type" => {
                                        "prefix" => {
                                            "type" => STRING,
                                            "description" => "The prefix for the database table name.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "min-length" => 1L,
                                            "max-length" => 2147483647L
                                        },
                                        "batch-size" => {
                                            "type" => INT,
                                            "description" => "For DB inserts, the batch size determines how many inserts are batched together.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "fetch-size" => {
                                            "type" => INT,
                                            "description" => "For DB queries, the fetch size will be used to set the fetch size on ResultSets.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "id-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry ids.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "data-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry data.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "timestamp-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry timestamps.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        }
                                    }
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "datasource" => {
                                    "type" => STRING,
                                    "description" => "A datasource reference for this datastore.",
                                    "expressions-allowed" => true,
                                    "nillable" => false,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("replicated-cache" => "*"),
                            ("mixed-keyed-jdbc-store" => "MIXED_KEYED_JDBC_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("replicated-cache" => "*"),
                                    ("mixed-keyed-jdbc-store" => "MIXED_KEYED_JDBC_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("replicated-cache" => "*"),
                                    ("mixed-keyed-jdbc-store" => "MIXED_KEYED_JDBC_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The binary keyed cache JDBC store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "binary-keyed-table" => {
                                    "type" => OBJECT,
                                    "description" => "The database table used to store binary cache entries.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "value-type" => {
                                        "prefix" => {
                                            "type" => STRING,
                                            "description" => "The prefix for the database table name.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "min-length" => 1L,
                                            "max-length" => 2147483647L
                                        },
                                        "batch-size" => {
                                            "type" => INT,
                                            "description" => "For DB inserts, the batch size determines how many inserts are batched together.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "fetch-size" => {
                                            "type" => INT,
                                            "description" => "For DB queries, the fetch size will be used to set the fetch size on ResultSets.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "id-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry ids.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "data-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry data.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "timestamp-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry timestamps.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        }
                                    }
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "datasource" => {
                                    "type" => STRING,
                                    "description" => "A datasource reference for this datastore.",
                                    "expressions-allowed" => true,
                                    "nillable" => false,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("replicated-cache" => "*"),
                            ("binary-keyed-jdbc-store" => "BINARY_KEYED_JDBC_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("replicated-cache" => "*"),
                                    ("binary-keyed-jdbc-store" => "BINARY_KEYED_JDBC_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("replicated-cache" => "*"),
                                    ("binary-keyed-jdbc-store" => "BINARY_KEYED_JDBC_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache file store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "relative-to" => {
                                    "type" => STRING,
                                    "description" => "Description",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "default" => "jboss.server.data.dir",
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                },
                                "path" => {
                                    "type" => STRING,
                                    "description" => "Description",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("replicated-cache" => "*"),
                            ("file-store" => "FILE_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("replicated-cache" => "*"),
                                    ("file-store" => "FILE_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("replicated-cache" => "*"),
                                    ("file-store" => "FILE_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "class" => {
                                    "type" => STRING,
                                    "description" => "The custom store implementation class to use for this cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => false,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("replicated-cache" => "*"),
                            ("store" => "STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("replicated-cache" => "*"),
                                    ("store" => "STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("replicated-cache" => "*"),
                                    ("store" => "STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "model-description" => {
                    "description" => "An invalidation cache",
                    "attributes" => {
                        "module" => {
                            "type" => STRING,
                            "description" => "The module whose class loader should be used when building this cache's configuration.",
                            "expressions-allowed" => true,
                            "nillable" => true
                        },
                        "indexing" => {
                            "type" => STRING,
                            "description" => "If enabled, entries will be indexed when they are added to the cache. Indexes will be updated as entries change or are removed.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => "NONE",
                            "allowed" => [
                                "NONE",
                                "LOCAL",
                                "ALL"
                            ]
                        },
                        "mode" => {
                            "type" => STRING,
                            "description" => "Sets the clustered cache mode, ASYNC for asynchronous operation, or SYNC for synchronous operation.",
                            "expressions-allowed" => true,
                            "nillable" => false,
                            "allowed" => [
                                "SYNC",
                                "ASYNC"
                            ]
                        },
                        "remote-timeout" => {
                            "type" => LONG,
                            "description" => "In SYNC mode, the timeout (in ms) used to wait for an acknowledgment when making a remote call, after which the call is aborted and an exception is thrown.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 17500,
                            "unit" => "MILLISECONDS"
                        },
                        "batching" => {
                            "type" => BOOLEAN,
                            "description" => "If enabled, the invocation batching API will be made available for this cache.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => false
                        },
                        "start" => {
                            "type" => STRING,
                            "description" => "The cache start mode, which can be EAGER (immediate start) or LAZY (on-demand start).",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => "LAZY",
                            "allowed" => [
                                "EAGER",
                                "LAZY"
                            ]
                        },
                        "jndi-name" => {
                            "type" => STRING,
                            "description" => "The jndi-name to which to bind this cache instance.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "queue-size" => {
                            "type" => INT,
                            "description" => "In ASYNC mode, this attribute can be used to trigger flushing of the queue when it reaches a specific threshold.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 0
                        },
                        "indexing-properties" => {
                            "type" => OBJECT,
                            "description" => "Properties to control indexing behaviour",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "value-type" => STRING
                        },
                        "async-marshalling" => {
                            "type" => BOOLEAN,
                            "description" => "If enabled, this will cause marshalling of entries to be performed asynchronously.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => false
                        },
                        "queue-flush-interval" => {
                            "type" => LONG,
                            "description" => "In ASYNC mode, this attribute controls how often the asynchronous thread used to flush the replication queue runs. This should be a positive integer which represents thread wakeup time in milliseconds.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 10,
                            "unit" => "MILLISECONDS"
                        }
                    },
                    "operations" => undefined,
                    "children" => {
                        "transaction" => {
                            "description" => "The cache transaction configuration.",
                            "model-description" => undefined
                        },
                        "expiration" => {
                            "description" => "The cache expiration configuration.",
                            "model-description" => undefined
                        },
                        "eviction" => {
                            "description" => "The cache eviction configuration.",
                            "model-description" => undefined
                        },
                        "locking" => {
                            "description" => "The locking configuration of the cache.",
                            "model-description" => undefined
                        },
                        "string-keyed-jdbc-store" => {
                            "description" => "The string keyed cache JDBC store configuration.",
                            "model-description" => undefined
                        },
                        "remote-store" => {
                            "description" => "The cache remote store configuration.",
                            "model-description" => undefined
                        },
                        "mixed-keyed-jdbc-store" => {
                            "description" => "The mixed keyed cache JDBC store configuration.",
                            "model-description" => undefined
                        },
                        "binary-keyed-jdbc-store" => {
                            "description" => "The binary keyed cache JDBC store configuration.",
                            "model-description" => undefined
                        },
                        "file-store" => {
                            "description" => "The cache file store configuration.",
                            "model-description" => undefined
                        },
                        "store" => {
                            "description" => "The cache store configuration.",
                            "model-description" => undefined
                        }
                    }
                },
                "address" => [
                    ("subsystem" => "infinispan"),
                    ("cache-container" => "*"),
                    ("invalidation-cache" => "*")
                ],
                "children" => [
                    {
                        "model-description" => {
                            "description" => "The cache transaction configuration.",
                            "attributes" => {
                                "mode" => {
                                    "type" => STRING,
                                    "description" => "Sets the clustered cache mode, ASYNC for asynchronous operation, or SYNC for synchronous operation.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => "NONE",
                                    "allowed" => [
                                        "NONE",
                                        "NON_XA",
                                        "NON_DURABLE_XA",
                                        "FULL_XA"
                                    ]
                                },
                                "locking" => {
                                    "type" => STRING,
                                    "description" => "The locking configuration of the cache.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => "OPTIMISTIC",
                                    "allowed" => [
                                        "OPTIMISTIC",
                                        "PESSIMISTIC"
                                    ]
                                },
                                "stop-timeout" => {
                                    "type" => LONG,
                                    "description" => "If there are any ongoing transactions when a cache is stopped, Infinispan waits for ongoing remote and local transactions to finish. The amount of time to wait for is defined by the cache stop timeout.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 30000,
                                    "unit" => "MILLISECONDS"
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("invalidation-cache" => "*"),
                            ("transaction" => "TRANSACTION")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache expiration configuration.",
                            "attributes" => {
                                "lifespan" => {
                                    "type" => LONG,
                                    "description" => "Maximum lifespan of a cache entry, after which the entry is expired cluster-wide, in milliseconds. -1 means the entries never expire.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => -1,
                                    "unit" => "MILLISECONDS"
                                },
                                "max-idle" => {
                                    "type" => LONG,
                                    "description" => "Maximum idle time a cache entry will be maintained in the cache, in milliseconds. If the idle time is exceeded, the entry will be expired cluster-wide. -1 means the entries never expire.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => -1,
                                    "unit" => "MILLISECONDS"
                                },
                                "interval" => {
                                    "type" => LONG,
                                    "description" => "Interval (in milliseconds) between subsequent runs to purge expired entries from memory and any cache stores. If you wish to disable the periodic eviction process altogether, set wakeupInterval to -1.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 60000,
                                    "unit" => "MILLISECONDS"
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("invalidation-cache" => "*"),
                            ("expiration" => "EXPIRATION")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache eviction configuration.",
                            "attributes" => {
                                "strategy" => {
                                    "type" => STRING,
                                    "description" => "Sets the cache eviction strategy. Available options are 'UNORDERED', 'FIFO', 'LRU', 'LIRS' and 'NONE' (to disable eviction).",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => "NONE",
                                    "allowed" => [
                                        "NONE",
                                        "UNORDERED",
                                        "FIFO",
                                        "LRU",
                                        "LIRS"
                                    ]
                                },
                                "max-entries" => {
                                    "type" => INT,
                                    "description" => "Maximum number of entries in a cache instance. If selected value is not a power of two the actual value will default to the least power of two larger than selected value. -1 means no limit.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => -1
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("invalidation-cache" => "*"),
                            ("eviction" => "EVICTION")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The locking configuration of the cache.",
                            "attributes" => {
                                "acquire-timeout" => {
                                    "type" => LONG,
                                    "description" => "Maximum time to attempt a particular lock acquisition.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 15000,
                                    "unit" => "MILLISECONDS"
                                },
                                "isolation" => {
                                    "type" => STRING,
                                    "description" => "Sets the cache locking isolation level.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => "REPEATABLE_READ",
                                    "allowed" => [
                                        "NONE",
                                        "SERIALIZABLE",
                                        "REPEATABLE_READ",
                                        "READ_COMMITTED",
                                        "READ_UNCOMMITTED"
                                    ]
                                },
                                "striping" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, a pool of shared locks is maintained for all entries that need to be locked. Otherwise, a lock is created per entry in the cache. Lock striping helps control memory footprint but may reduce concurrency in the system.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "concurrency-level" => {
                                    "type" => INT,
                                    "description" => "Concurrency level for lock containers. Adjust this value according to the number of concurrent threads interacting with Infinispan.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 1000
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("invalidation-cache" => "*"),
                            ("locking" => "LOCKING")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The string keyed cache JDBC store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "string-keyed-table" => {
                                    "type" => OBJECT,
                                    "description" => "The database table used to store cache entries.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "value-type" => {
                                        "prefix" => {
                                            "type" => STRING,
                                            "description" => "The prefix for the database table name.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "min-length" => 1L,
                                            "max-length" => 2147483647L
                                        },
                                        "batch-size" => {
                                            "type" => INT,
                                            "description" => "For DB inserts, the batch size determines how many inserts are batched together.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "fetch-size" => {
                                            "type" => INT,
                                            "description" => "For DB queries, the fetch size will be used to set the fetch size on ResultSets.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "id-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry ids.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "data-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry data.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "timestamp-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry timestamps.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        }
                                    }
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "datasource" => {
                                    "type" => STRING,
                                    "description" => "A datasource reference for this datastore.",
                                    "expressions-allowed" => true,
                                    "nillable" => false,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("invalidation-cache" => "*"),
                            ("string-keyed-jdbc-store" => "STRING_KEYED_JDBC_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("invalidation-cache" => "*"),
                                    ("string-keyed-jdbc-store" => "STRING_KEYED_JDBC_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("invalidation-cache" => "*"),
                                    ("string-keyed-jdbc-store" => "STRING_KEYED_JDBC_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache remote store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "remote-servers" => {
                                    "type" => LIST,
                                    "description" => "A list of remote servers for this cache store.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "allowed" => ["outbound-socket-binding"],
                                    "value-type" => {"outbound-socket-binding" => {
                                        "type" => STRING,
                                        "description" => "An outbound socket binding for a remote server.",
                                        "expressions-allowed" => false,
                                        "nillable" => true,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }}
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "cache" => {
                                    "type" => STRING,
                                    "description" => "The name of the remote cache to use for this remote store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "tcp-no-delay" => {
                                    "type" => BOOLEAN,
                                    "description" => "A TCP_NODELAY value for remote cache communication.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "socket-timeout" => {
                                    "type" => LONG,
                                    "description" => "A socket timeout for remote cache communication.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 60000,
                                    "unit" => "MILLISECONDS"
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("invalidation-cache" => "*"),
                            ("remote-store" => "REMOTE_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("invalidation-cache" => "*"),
                                    ("remote-store" => "REMOTE_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("invalidation-cache" => "*"),
                                    ("remote-store" => "REMOTE_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The mixed keyed cache JDBC store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "binary-keyed-table" => {
                                    "type" => OBJECT,
                                    "description" => "The database table used to store binary cache entries.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "value-type" => {
                                        "prefix" => {
                                            "type" => STRING,
                                            "description" => "The prefix for the database table name.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "min-length" => 1L,
                                            "max-length" => 2147483647L
                                        },
                                        "batch-size" => {
                                            "type" => INT,
                                            "description" => "For DB inserts, the batch size determines how many inserts are batched together.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "fetch-size" => {
                                            "type" => INT,
                                            "description" => "For DB queries, the fetch size will be used to set the fetch size on ResultSets.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "id-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry ids.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "data-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry data.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "timestamp-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry timestamps.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        }
                                    }
                                },
                                "string-keyed-table" => {
                                    "type" => OBJECT,
                                    "description" => "The database table used to store cache entries.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "value-type" => {
                                        "prefix" => {
                                            "type" => STRING,
                                            "description" => "The prefix for the database table name.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "min-length" => 1L,
                                            "max-length" => 2147483647L
                                        },
                                        "batch-size" => {
                                            "type" => INT,
                                            "description" => "For DB inserts, the batch size determines how many inserts are batched together.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "fetch-size" => {
                                            "type" => INT,
                                            "description" => "For DB queries, the fetch size will be used to set the fetch size on ResultSets.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "id-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry ids.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "data-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry data.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "timestamp-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry timestamps.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        }
                                    }
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "datasource" => {
                                    "type" => STRING,
                                    "description" => "A datasource reference for this datastore.",
                                    "expressions-allowed" => true,
                                    "nillable" => false,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("invalidation-cache" => "*"),
                            ("mixed-keyed-jdbc-store" => "MIXED_KEYED_JDBC_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("invalidation-cache" => "*"),
                                    ("mixed-keyed-jdbc-store" => "MIXED_KEYED_JDBC_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("invalidation-cache" => "*"),
                                    ("mixed-keyed-jdbc-store" => "MIXED_KEYED_JDBC_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The binary keyed cache JDBC store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "binary-keyed-table" => {
                                    "type" => OBJECT,
                                    "description" => "The database table used to store binary cache entries.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "value-type" => {
                                        "prefix" => {
                                            "type" => STRING,
                                            "description" => "The prefix for the database table name.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "min-length" => 1L,
                                            "max-length" => 2147483647L
                                        },
                                        "batch-size" => {
                                            "type" => INT,
                                            "description" => "For DB inserts, the batch size determines how many inserts are batched together.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "fetch-size" => {
                                            "type" => INT,
                                            "description" => "For DB queries, the fetch size will be used to set the fetch size on ResultSets.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "id-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry ids.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "data-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry data.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "timestamp-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry timestamps.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        }
                                    }
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "datasource" => {
                                    "type" => STRING,
                                    "description" => "A datasource reference for this datastore.",
                                    "expressions-allowed" => true,
                                    "nillable" => false,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("invalidation-cache" => "*"),
                            ("binary-keyed-jdbc-store" => "BINARY_KEYED_JDBC_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("invalidation-cache" => "*"),
                                    ("binary-keyed-jdbc-store" => "BINARY_KEYED_JDBC_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("invalidation-cache" => "*"),
                                    ("binary-keyed-jdbc-store" => "BINARY_KEYED_JDBC_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache file store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "relative-to" => {
                                    "type" => STRING,
                                    "description" => "Description",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "default" => "jboss.server.data.dir",
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                },
                                "path" => {
                                    "type" => STRING,
                                    "description" => "Description",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("invalidation-cache" => "*"),
                            ("file-store" => "FILE_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("invalidation-cache" => "*"),
                                    ("file-store" => "FILE_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("invalidation-cache" => "*"),
                                    ("file-store" => "FILE_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "class" => {
                                    "type" => STRING,
                                    "description" => "The custom store implementation class to use for this cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => false,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("invalidation-cache" => "*"),
                            ("store" => "STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("invalidation-cache" => "*"),
                                    ("store" => "STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("invalidation-cache" => "*"),
                                    ("store" => "STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "model-description" => {
                    "description" => "A distributed cache",
                    "attributes" => {
                        "module" => {
                            "type" => STRING,
                            "description" => "The module whose class loader should be used when building this cache's configuration.",
                            "expressions-allowed" => true,
                            "nillable" => true
                        },
                        "virtual-nodes" => {
                            "type" => INT,
                            "description" => "Deprecated. Has no effect.",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "default" => 1,
                            "alternatives" => ["segments"],
                            "deprecated" => {
                                "since" => "1.4.0",
                                "reason" => "Deprecated. Has no effect."
                            }
                        },
                        "segments" => {
                            "type" => INT,
                            "description" => "Controls the number of hash space segments which is the granularity for key distribution in the cluster. Value must be strictly positive.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 80,
                            "alternatives" => ["virtual-nodes"],
                            "min" => 1L,
                            "max" => 2147483647L
                        },
                        "indexing" => {
                            "type" => STRING,
                            "description" => "If enabled, entries will be indexed when they are added to the cache. Indexes will be updated as entries change or are removed.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => "NONE",
                            "allowed" => [
                                "NONE",
                                "LOCAL",
                                "ALL"
                            ]
                        },
                        "mode" => {
                            "type" => STRING,
                            "description" => "Sets the clustered cache mode, ASYNC for asynchronous operation, or SYNC for synchronous operation.",
                            "expressions-allowed" => true,
                            "nillable" => false,
                            "allowed" => [
                                "SYNC",
                                "ASYNC"
                            ]
                        },
                        "remote-timeout" => {
                            "type" => LONG,
                            "description" => "In SYNC mode, the timeout (in ms) used to wait for an acknowledgment when making a remote call, after which the call is aborted and an exception is thrown.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 17500,
                            "unit" => "MILLISECONDS"
                        },
                        "batching" => {
                            "type" => BOOLEAN,
                            "description" => "If enabled, the invocation batching API will be made available for this cache.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => false
                        },
                        "start" => {
                            "type" => STRING,
                            "description" => "The cache start mode, which can be EAGER (immediate start) or LAZY (on-demand start).",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => "LAZY",
                            "allowed" => [
                                "EAGER",
                                "LAZY"
                            ]
                        },
                        "l1-lifespan" => {
                            "type" => LONG,
                            "description" => "Maximum lifespan of an entry placed in the L1 cache. This element configures the L1 cache behavior in 'distributed' caches instances. In any other cache modes, this element is ignored.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 600000,
                            "unit" => "MILLISECONDS"
                        },
                        "jndi-name" => {
                            "type" => STRING,
                            "description" => "The jndi-name to which to bind this cache instance.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "queue-size" => {
                            "type" => INT,
                            "description" => "In ASYNC mode, this attribute can be used to trigger flushing of the queue when it reaches a specific threshold.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 0
                        },
                        "indexing-properties" => {
                            "type" => OBJECT,
                            "description" => "Properties to control indexing behaviour",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "value-type" => STRING
                        },
                        "async-marshalling" => {
                            "type" => BOOLEAN,
                            "description" => "If enabled, this will cause marshalling of entries to be performed asynchronously.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => false
                        },
                        "queue-flush-interval" => {
                            "type" => LONG,
                            "description" => "In ASYNC mode, this attribute controls how often the asynchronous thread used to flush the replication queue runs. This should be a positive integer which represents thread wakeup time in milliseconds.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 10,
                            "unit" => "MILLISECONDS"
                        },
                        "owners" => {
                            "type" => INT,
                            "description" => "Number of cluster-wide replicas for each cache entry.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 2,
                            "min" => 1L,
                            "max" => 2147483647L
                        }
                    },
                    "operations" => undefined,
                    "children" => {
                        "transaction" => {
                            "description" => "The cache transaction configuration.",
                            "model-description" => undefined
                        },
                        "expiration" => {
                            "description" => "The cache expiration configuration.",
                            "model-description" => undefined
                        },
                        "state-transfer" => {
                            "description" => "The state transfer configuration for distribution and replicated caches.",
                            "model-description" => undefined
                        },
                        "eviction" => {
                            "description" => "The cache eviction configuration.",
                            "model-description" => undefined
                        },
                        "locking" => {
                            "description" => "The locking configuration of the cache.",
                            "model-description" => undefined
                        },
                        "string-keyed-jdbc-store" => {
                            "description" => "The string keyed cache JDBC store configuration.",
                            "model-description" => undefined
                        },
                        "remote-store" => {
                            "description" => "The cache remote store configuration.",
                            "model-description" => undefined
                        },
                        "mixed-keyed-jdbc-store" => {
                            "description" => "The mixed keyed cache JDBC store configuration.",
                            "model-description" => undefined
                        },
                        "binary-keyed-jdbc-store" => {
                            "description" => "The binary keyed cache JDBC store configuration.",
                            "model-description" => undefined
                        },
                        "file-store" => {
                            "description" => "The cache file store configuration.",
                            "model-description" => undefined
                        },
                        "store" => {
                            "description" => "The cache store configuration.",
                            "model-description" => undefined
                        }
                    }
                },
                "address" => [
                    ("subsystem" => "infinispan"),
                    ("cache-container" => "*"),
                    ("distributed-cache" => "*")
                ],
                "children" => [
                    {
                        "model-description" => {
                            "description" => "The cache transaction configuration.",
                            "attributes" => {
                                "mode" => {
                                    "type" => STRING,
                                    "description" => "Sets the clustered cache mode, ASYNC for asynchronous operation, or SYNC for synchronous operation.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => "NONE",
                                    "allowed" => [
                                        "NONE",
                                        "NON_XA",
                                        "NON_DURABLE_XA",
                                        "FULL_XA"
                                    ]
                                },
                                "locking" => {
                                    "type" => STRING,
                                    "description" => "The locking configuration of the cache.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => "OPTIMISTIC",
                                    "allowed" => [
                                        "OPTIMISTIC",
                                        "PESSIMISTIC"
                                    ]
                                },
                                "stop-timeout" => {
                                    "type" => LONG,
                                    "description" => "If there are any ongoing transactions when a cache is stopped, Infinispan waits for ongoing remote and local transactions to finish. The amount of time to wait for is defined by the cache stop timeout.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 30000,
                                    "unit" => "MILLISECONDS"
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("distributed-cache" => "*"),
                            ("transaction" => "TRANSACTION")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache expiration configuration.",
                            "attributes" => {
                                "lifespan" => {
                                    "type" => LONG,
                                    "description" => "Maximum lifespan of a cache entry, after which the entry is expired cluster-wide, in milliseconds. -1 means the entries never expire.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => -1,
                                    "unit" => "MILLISECONDS"
                                },
                                "max-idle" => {
                                    "type" => LONG,
                                    "description" => "Maximum idle time a cache entry will be maintained in the cache, in milliseconds. If the idle time is exceeded, the entry will be expired cluster-wide. -1 means the entries never expire.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => -1,
                                    "unit" => "MILLISECONDS"
                                },
                                "interval" => {
                                    "type" => LONG,
                                    "description" => "Interval (in milliseconds) between subsequent runs to purge expired entries from memory and any cache stores. If you wish to disable the periodic eviction process altogether, set wakeupInterval to -1.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 60000,
                                    "unit" => "MILLISECONDS"
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("distributed-cache" => "*"),
                            ("expiration" => "EXPIRATION")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The state transfer configuration for distribution and replicated caches.",
                            "attributes" => {
                                "enabled" => {
                                    "type" => BOOLEAN,
                                    "description" => "If enabled, this will cause the cache to ask neighboring caches for state when it starts up, so the cache starts 'warm', although it will impact startup time.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "chunk-size" => {
                                    "type" => INT,
                                    "description" => "The size, in bytes, in which to batch the transfer of cache entries.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 10000
                                },
                                "timeout" => {
                                    "type" => LONG,
                                    "description" => "The maximum amount of time (ms) to wait for state from neighboring caches, before throwing an exception and aborting startup.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 60000,
                                    "unit" => "MILLISECONDS"
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("distributed-cache" => "*"),
                            ("state-transfer" => "STATE_TRANSFER")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache eviction configuration.",
                            "attributes" => {
                                "strategy" => {
                                    "type" => STRING,
                                    "description" => "Sets the cache eviction strategy. Available options are 'UNORDERED', 'FIFO', 'LRU', 'LIRS' and 'NONE' (to disable eviction).",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => "NONE",
                                    "allowed" => [
                                        "NONE",
                                        "UNORDERED",
                                        "FIFO",
                                        "LRU",
                                        "LIRS"
                                    ]
                                },
                                "max-entries" => {
                                    "type" => INT,
                                    "description" => "Maximum number of entries in a cache instance. If selected value is not a power of two the actual value will default to the least power of two larger than selected value. -1 means no limit.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => -1
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("distributed-cache" => "*"),
                            ("eviction" => "EVICTION")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The locking configuration of the cache.",
                            "attributes" => {
                                "acquire-timeout" => {
                                    "type" => LONG,
                                    "description" => "Maximum time to attempt a particular lock acquisition.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 15000,
                                    "unit" => "MILLISECONDS"
                                },
                                "isolation" => {
                                    "type" => STRING,
                                    "description" => "Sets the cache locking isolation level.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => "REPEATABLE_READ",
                                    "allowed" => [
                                        "NONE",
                                        "SERIALIZABLE",
                                        "REPEATABLE_READ",
                                        "READ_COMMITTED",
                                        "READ_UNCOMMITTED"
                                    ]
                                },
                                "striping" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, a pool of shared locks is maintained for all entries that need to be locked. Otherwise, a lock is created per entry in the cache. Lock striping helps control memory footprint but may reduce concurrency in the system.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "concurrency-level" => {
                                    "type" => INT,
                                    "description" => "Concurrency level for lock containers. Adjust this value according to the number of concurrent threads interacting with Infinispan.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 1000
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("distributed-cache" => "*"),
                            ("locking" => "LOCKING")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The string keyed cache JDBC store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "string-keyed-table" => {
                                    "type" => OBJECT,
                                    "description" => "The database table used to store cache entries.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "value-type" => {
                                        "prefix" => {
                                            "type" => STRING,
                                            "description" => "The prefix for the database table name.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "min-length" => 1L,
                                            "max-length" => 2147483647L
                                        },
                                        "batch-size" => {
                                            "type" => INT,
                                            "description" => "For DB inserts, the batch size determines how many inserts are batched together.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "fetch-size" => {
                                            "type" => INT,
                                            "description" => "For DB queries, the fetch size will be used to set the fetch size on ResultSets.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "id-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry ids.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "data-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry data.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "timestamp-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry timestamps.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        }
                                    }
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "datasource" => {
                                    "type" => STRING,
                                    "description" => "A datasource reference for this datastore.",
                                    "expressions-allowed" => true,
                                    "nillable" => false,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("distributed-cache" => "*"),
                            ("string-keyed-jdbc-store" => "STRING_KEYED_JDBC_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("distributed-cache" => "*"),
                                    ("string-keyed-jdbc-store" => "STRING_KEYED_JDBC_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("distributed-cache" => "*"),
                                    ("string-keyed-jdbc-store" => "STRING_KEYED_JDBC_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache remote store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "remote-servers" => {
                                    "type" => LIST,
                                    "description" => "A list of remote servers for this cache store.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "allowed" => ["outbound-socket-binding"],
                                    "value-type" => {"outbound-socket-binding" => {
                                        "type" => STRING,
                                        "description" => "An outbound socket binding for a remote server.",
                                        "expressions-allowed" => false,
                                        "nillable" => true,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }}
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "cache" => {
                                    "type" => STRING,
                                    "description" => "The name of the remote cache to use for this remote store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "tcp-no-delay" => {
                                    "type" => BOOLEAN,
                                    "description" => "A TCP_NODELAY value for remote cache communication.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "socket-timeout" => {
                                    "type" => LONG,
                                    "description" => "A socket timeout for remote cache communication.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 60000,
                                    "unit" => "MILLISECONDS"
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("distributed-cache" => "*"),
                            ("remote-store" => "REMOTE_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("distributed-cache" => "*"),
                                    ("remote-store" => "REMOTE_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("distributed-cache" => "*"),
                                    ("remote-store" => "REMOTE_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The mixed keyed cache JDBC store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "binary-keyed-table" => {
                                    "type" => OBJECT,
                                    "description" => "The database table used to store binary cache entries.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "value-type" => {
                                        "prefix" => {
                                            "type" => STRING,
                                            "description" => "The prefix for the database table name.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "min-length" => 1L,
                                            "max-length" => 2147483647L
                                        },
                                        "batch-size" => {
                                            "type" => INT,
                                            "description" => "For DB inserts, the batch size determines how many inserts are batched together.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "fetch-size" => {
                                            "type" => INT,
                                            "description" => "For DB queries, the fetch size will be used to set the fetch size on ResultSets.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "id-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry ids.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "data-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry data.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "timestamp-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry timestamps.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        }
                                    }
                                },
                                "string-keyed-table" => {
                                    "type" => OBJECT,
                                    "description" => "The database table used to store cache entries.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "value-type" => {
                                        "prefix" => {
                                            "type" => STRING,
                                            "description" => "The prefix for the database table name.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "min-length" => 1L,
                                            "max-length" => 2147483647L
                                        },
                                        "batch-size" => {
                                            "type" => INT,
                                            "description" => "For DB inserts, the batch size determines how many inserts are batched together.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "fetch-size" => {
                                            "type" => INT,
                                            "description" => "For DB queries, the fetch size will be used to set the fetch size on ResultSets.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "id-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry ids.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "data-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry data.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "timestamp-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry timestamps.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        }
                                    }
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "datasource" => {
                                    "type" => STRING,
                                    "description" => "A datasource reference for this datastore.",
                                    "expressions-allowed" => true,
                                    "nillable" => false,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("distributed-cache" => "*"),
                            ("mixed-keyed-jdbc-store" => "MIXED_KEYED_JDBC_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("distributed-cache" => "*"),
                                    ("mixed-keyed-jdbc-store" => "MIXED_KEYED_JDBC_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("distributed-cache" => "*"),
                                    ("mixed-keyed-jdbc-store" => "MIXED_KEYED_JDBC_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The binary keyed cache JDBC store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "binary-keyed-table" => {
                                    "type" => OBJECT,
                                    "description" => "The database table used to store binary cache entries.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "value-type" => {
                                        "prefix" => {
                                            "type" => STRING,
                                            "description" => "The prefix for the database table name.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "min-length" => 1L,
                                            "max-length" => 2147483647L
                                        },
                                        "batch-size" => {
                                            "type" => INT,
                                            "description" => "For DB inserts, the batch size determines how many inserts are batched together.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "fetch-size" => {
                                            "type" => INT,
                                            "description" => "For DB queries, the fetch size will be used to set the fetch size on ResultSets.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "id-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry ids.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "data-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry data.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "timestamp-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry timestamps.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        }
                                    }
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "datasource" => {
                                    "type" => STRING,
                                    "description" => "A datasource reference for this datastore.",
                                    "expressions-allowed" => true,
                                    "nillable" => false,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("distributed-cache" => "*"),
                            ("binary-keyed-jdbc-store" => "BINARY_KEYED_JDBC_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("distributed-cache" => "*"),
                                    ("binary-keyed-jdbc-store" => "BINARY_KEYED_JDBC_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("distributed-cache" => "*"),
                                    ("binary-keyed-jdbc-store" => "BINARY_KEYED_JDBC_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache file store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "relative-to" => {
                                    "type" => STRING,
                                    "description" => "Description",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "default" => "jboss.server.data.dir",
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                },
                                "path" => {
                                    "type" => STRING,
                                    "description" => "Description",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("distributed-cache" => "*"),
                            ("file-store" => "FILE_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("distributed-cache" => "*"),
                                    ("file-store" => "FILE_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("distributed-cache" => "*"),
                                    ("file-store" => "FILE_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "class" => {
                                    "type" => STRING,
                                    "description" => "The custom store implementation class to use for this cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => false,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("distributed-cache" => "*"),
                            ("store" => "STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("distributed-cache" => "*"),
                                    ("store" => "STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("distributed-cache" => "*"),
                                    ("store" => "STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "model-description" => {
                    "description" => "A local cache",
                    "attributes" => {
                        "module" => {
                            "type" => STRING,
                            "description" => "The module whose class loader should be used when building this cache's configuration.",
                            "expressions-allowed" => true,
                            "nillable" => true
                        },
                        "batching" => {
                            "type" => BOOLEAN,
                            "description" => "If enabled, the invocation batching API will be made available for this cache.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => false
                        },
                        "start" => {
                            "type" => STRING,
                            "description" => "The cache start mode, which can be EAGER (immediate start) or LAZY (on-demand start).",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => "LAZY",
                            "allowed" => [
                                "EAGER",
                                "LAZY"
                            ]
                        },
                        "indexing" => {
                            "type" => STRING,
                            "description" => "If enabled, entries will be indexed when they are added to the cache. Indexes will be updated as entries change or are removed.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => "NONE",
                            "allowed" => [
                                "NONE",
                                "LOCAL",
                                "ALL"
                            ]
                        },
                        "jndi-name" => {
                            "type" => STRING,
                            "description" => "The jndi-name to which to bind this cache instance.",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "indexing-properties" => {
                            "type" => OBJECT,
                            "description" => "Properties to control indexing behaviour",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "value-type" => STRING
                        }
                    },
                    "operations" => undefined,
                    "children" => {
                        "transaction" => {
                            "description" => "The cache transaction configuration.",
                            "model-description" => undefined
                        },
                        "expiration" => {
                            "description" => "The cache expiration configuration.",
                            "model-description" => undefined
                        },
                        "eviction" => {
                            "description" => "The cache eviction configuration.",
                            "model-description" => undefined
                        },
                        "locking" => {
                            "description" => "The locking configuration of the cache.",
                            "model-description" => undefined
                        },
                        "string-keyed-jdbc-store" => {
                            "description" => "The string keyed cache JDBC store configuration.",
                            "model-description" => undefined
                        },
                        "remote-store" => {
                            "description" => "The cache remote store configuration.",
                            "model-description" => undefined
                        },
                        "mixed-keyed-jdbc-store" => {
                            "description" => "The mixed keyed cache JDBC store configuration.",
                            "model-description" => undefined
                        },
                        "binary-keyed-jdbc-store" => {
                            "description" => "The binary keyed cache JDBC store configuration.",
                            "model-description" => undefined
                        },
                        "file-store" => {
                            "description" => "The cache file store configuration.",
                            "model-description" => undefined
                        },
                        "store" => {
                            "description" => "The cache store configuration.",
                            "model-description" => undefined
                        }
                    }
                },
                "address" => [
                    ("subsystem" => "infinispan"),
                    ("cache-container" => "*"),
                    ("local-cache" => "*")
                ],
                "children" => [
                    {
                        "model-description" => {
                            "description" => "The cache transaction configuration.",
                            "attributes" => {
                                "mode" => {
                                    "type" => STRING,
                                    "description" => "Sets the clustered cache mode, ASYNC for asynchronous operation, or SYNC for synchronous operation.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => "NONE",
                                    "allowed" => [
                                        "NONE",
                                        "NON_XA",
                                        "NON_DURABLE_XA",
                                        "FULL_XA"
                                    ]
                                },
                                "locking" => {
                                    "type" => STRING,
                                    "description" => "The locking configuration of the cache.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => "OPTIMISTIC",
                                    "allowed" => [
                                        "OPTIMISTIC",
                                        "PESSIMISTIC"
                                    ]
                                },
                                "stop-timeout" => {
                                    "type" => LONG,
                                    "description" => "If there are any ongoing transactions when a cache is stopped, Infinispan waits for ongoing remote and local transactions to finish. The amount of time to wait for is defined by the cache stop timeout.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 30000,
                                    "unit" => "MILLISECONDS"
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("local-cache" => "*"),
                            ("transaction" => "TRANSACTION")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache expiration configuration.",
                            "attributes" => {
                                "lifespan" => {
                                    "type" => LONG,
                                    "description" => "Maximum lifespan of a cache entry, after which the entry is expired cluster-wide, in milliseconds. -1 means the entries never expire.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => -1,
                                    "unit" => "MILLISECONDS"
                                },
                                "max-idle" => {
                                    "type" => LONG,
                                    "description" => "Maximum idle time a cache entry will be maintained in the cache, in milliseconds. If the idle time is exceeded, the entry will be expired cluster-wide. -1 means the entries never expire.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => -1,
                                    "unit" => "MILLISECONDS"
                                },
                                "interval" => {
                                    "type" => LONG,
                                    "description" => "Interval (in milliseconds) between subsequent runs to purge expired entries from memory and any cache stores. If you wish to disable the periodic eviction process altogether, set wakeupInterval to -1.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 60000,
                                    "unit" => "MILLISECONDS"
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("local-cache" => "*"),
                            ("expiration" => "EXPIRATION")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache eviction configuration.",
                            "attributes" => {
                                "strategy" => {
                                    "type" => STRING,
                                    "description" => "Sets the cache eviction strategy. Available options are 'UNORDERED', 'FIFO', 'LRU', 'LIRS' and 'NONE' (to disable eviction).",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => "NONE",
                                    "allowed" => [
                                        "NONE",
                                        "UNORDERED",
                                        "FIFO",
                                        "LRU",
                                        "LIRS"
                                    ]
                                },
                                "max-entries" => {
                                    "type" => INT,
                                    "description" => "Maximum number of entries in a cache instance. If selected value is not a power of two the actual value will default to the least power of two larger than selected value. -1 means no limit.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => -1
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("local-cache" => "*"),
                            ("eviction" => "EVICTION")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The locking configuration of the cache.",
                            "attributes" => {
                                "acquire-timeout" => {
                                    "type" => LONG,
                                    "description" => "Maximum time to attempt a particular lock acquisition.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 15000,
                                    "unit" => "MILLISECONDS"
                                },
                                "isolation" => {
                                    "type" => STRING,
                                    "description" => "Sets the cache locking isolation level.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => "REPEATABLE_READ",
                                    "allowed" => [
                                        "NONE",
                                        "SERIALIZABLE",
                                        "REPEATABLE_READ",
                                        "READ_COMMITTED",
                                        "READ_UNCOMMITTED"
                                    ]
                                },
                                "striping" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, a pool of shared locks is maintained for all entries that need to be locked. Otherwise, a lock is created per entry in the cache. Lock striping helps control memory footprint but may reduce concurrency in the system.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "concurrency-level" => {
                                    "type" => INT,
                                    "description" => "Concurrency level for lock containers. Adjust this value according to the number of concurrent threads interacting with Infinispan.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 1000
                                }
                            },
                            "operations" => undefined,
                            "children" => {}
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("local-cache" => "*"),
                            ("locking" => "LOCKING")
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The string keyed cache JDBC store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "string-keyed-table" => {
                                    "type" => OBJECT,
                                    "description" => "The database table used to store cache entries.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "value-type" => {
                                        "prefix" => {
                                            "type" => STRING,
                                            "description" => "The prefix for the database table name.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "min-length" => 1L,
                                            "max-length" => 2147483647L
                                        },
                                        "batch-size" => {
                                            "type" => INT,
                                            "description" => "For DB inserts, the batch size determines how many inserts are batched together.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "fetch-size" => {
                                            "type" => INT,
                                            "description" => "For DB queries, the fetch size will be used to set the fetch size on ResultSets.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "id-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry ids.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "data-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry data.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "timestamp-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry timestamps.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        }
                                    }
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "datasource" => {
                                    "type" => STRING,
                                    "description" => "A datasource reference for this datastore.",
                                    "expressions-allowed" => true,
                                    "nillable" => false,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("local-cache" => "*"),
                            ("string-keyed-jdbc-store" => "STRING_KEYED_JDBC_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("local-cache" => "*"),
                                    ("string-keyed-jdbc-store" => "STRING_KEYED_JDBC_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("local-cache" => "*"),
                                    ("string-keyed-jdbc-store" => "STRING_KEYED_JDBC_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache remote store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "remote-servers" => {
                                    "type" => LIST,
                                    "description" => "A list of remote servers for this cache store.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "allowed" => ["outbound-socket-binding"],
                                    "value-type" => {"outbound-socket-binding" => {
                                        "type" => STRING,
                                        "description" => "An outbound socket binding for a remote server.",
                                        "expressions-allowed" => false,
                                        "nillable" => true,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }}
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "cache" => {
                                    "type" => STRING,
                                    "description" => "The name of the remote cache to use for this remote store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "tcp-no-delay" => {
                                    "type" => BOOLEAN,
                                    "description" => "A TCP_NODELAY value for remote cache communication.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "socket-timeout" => {
                                    "type" => LONG,
                                    "description" => "A socket timeout for remote cache communication.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => 60000,
                                    "unit" => "MILLISECONDS"
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("local-cache" => "*"),
                            ("remote-store" => "REMOTE_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("local-cache" => "*"),
                                    ("remote-store" => "REMOTE_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("local-cache" => "*"),
                                    ("remote-store" => "REMOTE_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The mixed keyed cache JDBC store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "binary-keyed-table" => {
                                    "type" => OBJECT,
                                    "description" => "The database table used to store binary cache entries.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "value-type" => {
                                        "prefix" => {
                                            "type" => STRING,
                                            "description" => "The prefix for the database table name.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "min-length" => 1L,
                                            "max-length" => 2147483647L
                                        },
                                        "batch-size" => {
                                            "type" => INT,
                                            "description" => "For DB inserts, the batch size determines how many inserts are batched together.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "fetch-size" => {
                                            "type" => INT,
                                            "description" => "For DB queries, the fetch size will be used to set the fetch size on ResultSets.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "id-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry ids.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "data-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry data.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "timestamp-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry timestamps.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        }
                                    }
                                },
                                "string-keyed-table" => {
                                    "type" => OBJECT,
                                    "description" => "The database table used to store cache entries.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "value-type" => {
                                        "prefix" => {
                                            "type" => STRING,
                                            "description" => "The prefix for the database table name.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "min-length" => 1L,
                                            "max-length" => 2147483647L
                                        },
                                        "batch-size" => {
                                            "type" => INT,
                                            "description" => "For DB inserts, the batch size determines how many inserts are batched together.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "fetch-size" => {
                                            "type" => INT,
                                            "description" => "For DB queries, the fetch size will be used to set the fetch size on ResultSets.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "id-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry ids.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "data-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry data.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "timestamp-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry timestamps.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        }
                                    }
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "datasource" => {
                                    "type" => STRING,
                                    "description" => "A datasource reference for this datastore.",
                                    "expressions-allowed" => true,
                                    "nillable" => false,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("local-cache" => "*"),
                            ("mixed-keyed-jdbc-store" => "MIXED_KEYED_JDBC_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("local-cache" => "*"),
                                    ("mixed-keyed-jdbc-store" => "MIXED_KEYED_JDBC_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("local-cache" => "*"),
                                    ("mixed-keyed-jdbc-store" => "MIXED_KEYED_JDBC_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The binary keyed cache JDBC store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "binary-keyed-table" => {
                                    "type" => OBJECT,
                                    "description" => "The database table used to store binary cache entries.",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "value-type" => {
                                        "prefix" => {
                                            "type" => STRING,
                                            "description" => "The prefix for the database table name.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "min-length" => 1L,
                                            "max-length" => 2147483647L
                                        },
                                        "batch-size" => {
                                            "type" => INT,
                                            "description" => "For DB inserts, the batch size determines how many inserts are batched together.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "fetch-size" => {
                                            "type" => INT,
                                            "description" => "For DB queries, the fetch size will be used to set the fetch size on ResultSets.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 100
                                        },
                                        "id-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry ids.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "data-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry data.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        },
                                        "timestamp-column" => {
                                            "type" => OBJECT,
                                            "description" => "A database column to hold cache entry timestamps.",
                                            "expressions-allowed" => false,
                                            "nillable" => true,
                                            "value-type" => {
                                                "name" => {
                                                    "type" => STRING,
                                                    "description" => "The name of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "name",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                },
                                                "type" => {
                                                    "type" => STRING,
                                                    "description" => "The type of the database column.",
                                                    "expressions-allowed" => true,
                                                    "nillable" => true,
                                                    "default" => "type",
                                                    "min-length" => 1L,
                                                    "max-length" => 2147483647L
                                                }
                                            }
                                        }
                                    }
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "datasource" => {
                                    "type" => STRING,
                                    "description" => "A datasource reference for this datastore.",
                                    "expressions-allowed" => true,
                                    "nillable" => false,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("local-cache" => "*"),
                            ("binary-keyed-jdbc-store" => "BINARY_KEYED_JDBC_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("local-cache" => "*"),
                                    ("binary-keyed-jdbc-store" => "BINARY_KEYED_JDBC_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("local-cache" => "*"),
                                    ("binary-keyed-jdbc-store" => "BINARY_KEYED_JDBC_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache file store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "relative-to" => {
                                    "type" => STRING,
                                    "description" => "Description",
                                    "expressions-allowed" => false,
                                    "nillable" => true,
                                    "default" => "jboss.server.data.dir",
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                },
                                "path" => {
                                    "type" => STRING,
                                    "description" => "Description",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("local-cache" => "*"),
                            ("file-store" => "FILE_STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("local-cache" => "*"),
                                    ("file-store" => "FILE_STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("local-cache" => "*"),
                                    ("file-store" => "FILE_STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    },
                    {
                        "model-description" => {
                            "description" => "The cache store configuration.",
                            "attributes" => {
                                "shared" => {
                                    "type" => BOOLEAN,
                                    "description" => "This setting should be set to true when multiple cache instances share the same cache store (e.g., multiple nodes in a cluster using a JDBC-based CacheStore pointing to the same, shared database.) Setting this to true avoids multiple cache instances writing the same modification multiple times. If enabled, only the node where the modification originated will write to the cache store. If disabled, each individual cache reacts to a potential remote update by storing the data to the cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "passivation" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, data is only written to the cache store when it is evicted from memory, a phenomenon known as 'passivation'. Next time the data is requested, it will be 'activated' which means that data will be brought back to memory and removed from the persistent store. f false, the cache store contains a copy of the contents in memory, so writes to cache result in cache store writes. This essentially gives you a 'write-through' configuration.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "fetch-state" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, fetch persistent state when joining a cluster. If multiple cache stores are chained, only one of them can have this property enabled.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                },
                                "singleton" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, the singleton store cache store is enabled. SingletonStore is a delegating cache store used for situations when only one instance in a cluster should interact with the underlying store.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "preload" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, when the cache starts, data stored in the cache store will be pre-loaded into memory. This is particularly useful when data in the cache store will be needed immediately after startup and you want to avoid cache operations being delayed as a result of loading this data lazily. Can be used to provide a 'warm-cache' on startup, however there is a performance penalty as startup time is affected by this process.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => false
                                },
                                "class" => {
                                    "type" => STRING,
                                    "description" => "The custom store implementation class to use for this cache store.",
                                    "expressions-allowed" => true,
                                    "nillable" => false,
                                    "min-length" => 1L,
                                    "max-length" => 2147483647L
                                },
                                "purge" => {
                                    "type" => BOOLEAN,
                                    "description" => "If true, purges this cache store when it starts up.",
                                    "expressions-allowed" => true,
                                    "nillable" => true,
                                    "default" => true
                                }
                            },
                            "operations" => undefined,
                            "children" => {
                                "write-behind" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "model-description" => undefined
                                },
                                "property" => {
                                    "description" => "A cache store property with name and value.",
                                    "model-description" => undefined
                                }
                            }
                        },
                        "address" => [
                            ("subsystem" => "infinispan"),
                            ("cache-container" => "*"),
                            ("local-cache" => "*"),
                            ("store" => "STORE")
                        ],
                        "children" => [
                            {
                                "model-description" => {
                                    "description" => "Configures a cache store as write-behind instead of write-through.",
                                    "attributes" => {
                                        "modification-queue-size" => {
                                            "type" => INT,
                                            "description" => "Maximum number of entries in the asynchronous queue. When the queue is full, the store becomes write-through until it can accept new entries.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1024
                                        },
                                        "flush-lock-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout to acquire the lock which guards the state to be flushed to the cache store periodically.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "thread-pool-size" => {
                                            "type" => INT,
                                            "description" => "Size of the thread pool whose threads are responsible for applying the modifications to the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 1
                                        },
                                        "shutdown-timeout" => {
                                            "type" => LONG,
                                            "description" => "Timeout in milliseconds to stop the cache store.",
                                            "expressions-allowed" => true,
                                            "nillable" => true,
                                            "default" => 25000
                                        }
                                    },
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("local-cache" => "*"),
                                    ("store" => "STORE"),
                                    ("write-behind" => "WRITE_BEHIND")
                                ]
                            },
                            {
                                "model-description" => {
                                    "description" => "A cache store property with name and value.",
                                    "attributes" => {"value" => {
                                        "type" => STRING,
                                        "description" => "The value of the cache store property.",
                                        "expressions-allowed" => true,
                                        "nillable" => false,
                                        "min-length" => 1L,
                                        "max-length" => 2147483647L
                                    }},
                                    "operations" => undefined,
                                    "children" => {}
                                },
                                "address" => [
                                    ("subsystem" => "infinispan"),
                                    ("cache-container" => "*"),
                                    ("local-cache" => "*"),
                                    ("store" => "STORE"),
                                    ("property" => "*")
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "model-description" => {
                    "description" => "The description of the transport used by this cache container",
                    "attributes" => {
                        "lock-timeout" => {
                            "type" => LONG,
                            "description" => "The timeout for locks for the transport",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "default" => 240000,
                            "unit" => "MILLISECONDS"
                        },
                        "cluster" => {
                            "type" => STRING,
                            "description" => "The name of the group communication cluster",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "stack" => {
                            "type" => STRING,
                            "description" => "The jgroups stack to use for the transport",
                            "expressions-allowed" => true,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        },
                        "executor" => {
                            "type" => STRING,
                            "description" => "The executor to use for the transport",
                            "expressions-allowed" => false,
                            "nillable" => true,
                            "min-length" => 1L,
                            "max-length" => 2147483647L
                        }
                    },
                    "operations" => undefined,
                    "children" => {}
                },
                "address" => [
                    ("subsystem" => "infinispan"),
                    ("cache-container" => "*"),
                    ("transport" => "TRANSPORT")
                ]
            }
        ]
    }]
}