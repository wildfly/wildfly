
#
# Copyright The WildFly Authors
# SPDX-License-Identifier: Apache-2.0
#

batch.jberet=Batch Subsystem (JSR-352)

# Operations
batch.jberet.add=Adds the batch subsystem.
batch.jberet.remove=Removes the batch subsystem.

# Subsystem attributes
batch.jberet.default-job-repository=The name of the default job repository.
batch.jberet.default-thread-pool=The name of the default thread-pool.
batch.jberet.restart-jobs-on-resume=If set to true when a resume operation has been invoked after a suspend operation any \
  jobs stopped during the suspend will be restarted. A value of false will leave the jobs in a stopped state.
batch.jberet.security-domain=References the security domain for batch jobs. This can only be defined if the Elytron \
  subsystem is available.

# In-Memory job repository
batch.jberet.in-memory-job-repository=A job repository that stores job information in memory.
batch.jberet.in-memory-job-repository.add=Adds an in-memory job repository.
batch.jberet.in-memory-job-repository.remove=Removes an in-memory job repository.
batch.jberet.in-memory-job-repository.execution-records-limit=The maximum number of job execution records that should \
  be returned by the job repository.

batch.jberet.jdbc-job-repository=A job repository that stores job information in a database.
batch.jberet.jdbc-job-repository.add=Adds a JDBC job repository.
batch.jberet.jdbc-job-repository.remove=Removes a JDBC job repository.
batch.jberet.jdbc-job-repository.data-source=The data source name used to connect to the database.
batch.jberet.jdbc-job-repository.execution-records-limit=The maximum number of job execution records that should \
  be returned by the job repository.

batch.jberet.jpa-job-repository=A job repository that stores job information in a database using JPA.
batch.jberet.jpa-job-repository.add=Adds a JPA job repository.
batch.jberet.jpa-job-repository.remove=Removes a JPA job repository.
batch.jberet.jpa-job-repository.data-source=The data source name used to connect to the database.

# Thread pool
batch.jberet.thread-pool=The thread pool used for batch jobs. Note that the max-thread attribute should always be greater \
   than 3. Two threads are reserved to ensure partition jobs can execute.
batch.jberet.thread-pool.add=Adds an unbounded thread pool.
batch.jberet.thread-pool.remove=Removes an unbounded thread pool.
batch.jberet.thread-pool.name=The name of the thread pool.
batch.jberet.thread-pool.rejected-count=The number of tasks that have been rejected.
# These must be prefixed with threadpool.common for the default thread-pool resources to resolve the description
threadpool.common.active-count=The approximate number of threads that are actively executing tasks.
threadpool.common.completed-task-count=The approximate total number of tasks that have completed execution.
threadpool.common.current-thread-count=The current number of threads in the pool.
threadpool.common.keepalive-time=Used to specify the amount of time that pool threads should be kept running when idle; if not specified, threads will run until the executor is shut down.
threadpool.common.keepalive-time.time=The time
threadpool.common.keepalive-time.unit=The time unit
threadpool.common.largest-thread-count=The largest number of threads that have ever simultaneously been in the pool.
threadpool.common.max-threads=The maximum thread pool size. Note this should always be greater than 3. Two threads are \
  reserved to ensure partition jobs can execute as expected.
threadpool.common.name=The name of the thread pool.
threadpool.common.queue-size=The queue size.
threadpool.common.task-count=The approximate total number of tasks that have ever been scheduled for execution.
threadpool.common.thread-factory=Specifies the name of a specific thread factory to use to create worker threads. If not defined an appropriate default thread factory will be used.

# Thread factory
batch.jberet.thread-factory=The thread factory used for the thread-pool.

# Batch deployment resource
batch.jberet.deployment=Information about the batch subsystem for the deployment.
batch.jberet.deployment.job-xml-names=A list of job XML job descriptors found for the deployment.
# Batch deployment operations
batch.jberet.deployment.start-job=Starts a batch job.
batch.jberet.deployment.start-job.job-xml-name=The name of the job XML descriptor to use when starting the job.
batch.jberet.deployment.start-job.properties=Optional properties to use when starting the batch job.

batch.jberet.deployment.stop-job=Stops a running batch job.
batch.jberet.deployment.stop-job.execution-id=The execution id of the job to be stopped.

batch.jberet.deployment.restart-job=Restarts a batch job. Only jobs in a STOPPED or FAILED state can be restarted.
batch.jberet.deployment.restart-job.execution-id=The execution id of the job to restart. This must be the most recent job execution id.
batch.jberet.deployment.restart-job.properties=Optional properties to use when restarting the batch job.

# Batch job information
batch.jberet.deployment.job=Information about a specific batch job.
batch.jberet.deployment.job.running-executions=The number of currently running executions for the job.
batch.jberet.deployment.job.instance-count=The number of instances for the job.
batch.jberet.deployment.job.job-xml-names=A list of job XML job descriptors found that describe this job.
batch.jberet.deployment.job.execution=The execution information for the job with the value of the path being the execution id.
batch.jberet.deployment.job.execution.instance-id=The instance id for the execution.
batch.jberet.deployment.job.execution.batch-status=The status of the execution.
batch.jberet.deployment.job.execution.exit-status=The exit status of the execution.
batch.jberet.deployment.job.execution.create-time=The time the execution was created in ISO 8601 format.
batch.jberet.deployment.job.execution.start-time=The time the execution entered the STARTED status in ISO 8601 format.
batch.jberet.deployment.job.execution.last-updated-time=The time the execution was last updated in ISO 8601 format.
batch.jberet.deployment.job.execution.end-time=The time, in ISO 8601 format, the execution entered a status of: COMPLETED, STOPPED or FAILED
# Batch deployment executed jobs operations
batch.jberet.deployment.job.execution.stop-job=Stops a running batch job.

batch.jberet.deployment.job.execution.restart-job=Restarts a batch job. Only jobs in a STOPPED or FAILED state can be restarted. This must also be the most recent job execution.
batch.jberet.deployment.job.execution.restart-job.properties=Optional properties to use when restarting the batch job.
