datasources=The data-sources subsystem, used to declare JDBC data-sources
datasources.add=Adds the data-sources subsystem
datasources.remove=Removes the data-sources subsystem

datasources.disable=Disable the data-source
datasources.enable=Enable the data-source
datasources.enable.persistent=if true enable attribute is persisted
datasources.flush-all-connection-in-pool=Flushes all connections in the pool
datasources.flush-idle-connection-in-pool=Flushes all idle connections in the pool
datasources.flush-invalid-connection-in-pool=Flushes all invalid connections in the pool
datasources.flush-gracefully-connection-in-pool=Flushes all connections gracefully in the pool
datasources.test-connection-in-pool=Test if a connection can be obtained
datasources.test-connection-in-pool.user-name=User name to authenticate connection
datasources.test-connection-in-pool.password=Password to authenticate connection


datasources.jdbc-driver=Service that make a JDBC driver available for use in the runtime
datasources.jdbc-driver.add=Add a new JDBC driver
datasources.jdbc-driver.description=A service that makes a JDBC driver available for use in the runtime
datasources.jdbc-driver.module=The name of the module that makes the JDBC driver available under the service type "java.sql.Driver"
datasources.jdbc-driver.remove=Remove a JDBC driver

datasources.jdbc-driver.driver-major-version=The driver's major version number
datasources.jdbc-driver.driver-minor-version=The driver's minor version number
datasources.jdbc-driver.driver-datasource-class-name=The fully qualified class name of the javax.sql.DataSource implementation
datasources.jdbc-driver.driver-xa-datasource-class-name=The fully qualified class name of the javax.sql.XADataSource implementation
datasources.jdbc-driver.driver-class-name=The fully qualified class name of the java.sql.Driver implementation
datasources.jdbc-driver.driver-name=Defines the JDBC driver the datasource should use. It is a symbolic name matching the the name of installed driver. In case the driver is deployed as jar, the name is the name of deployment unit
datasources.jdbc-driver.driver-module-name=The name of the module from which the driver was loaded, if it was loaded from the module path
datasources.jdbc-driver.deployment-name=The name of the deployment unit from which the driver was loaded
datasources.jdbc-driver.jdbc-compliant=Whether or not the driver is JDBC compliant
datasources.jdbc-driver.module-slot=The slot of the module from which the driver was loaded, if it was loaded from the module path
datasources.jdbc-driver.xa-datasource-class=XA datasource class
datasources.get-installed-driver=Get a description of an installed driver
datasources.installed-drivers-list=List of JDBC drivers that have been installed in the runtime
datasources.installed-drivers.installed-driver=JDBC driver that have been installed in the runtime
datasources.installed-drivers=List of JDBC drivers that have been installed in the runtime

datasources.installed-drivers.driver-major-version=The driver's major version number
datasources.installed-drivers.driver-minor-version=The driver's minor version number
datasources.installed-drivers.driver-datasource-class-name=The fully qualified class name of the javax.sql.DataSource implementation
datasources.installed-drivers.driver-xa-datasource-class-name=The fully qualified class name of the javax.sql.XADataSource implementation
datasources.installed-drivers.driver-class-name=The fully qualified class name of the java.sql.Driver implementation
datasources.installed-drivers.driver-name=Defines the JDBC driver the datasource should use. It is a symbolic name matching the the name of installed driver. In case the driver is deployed as jar, the name is the name of deployment unit
datasources.installed-drivers.driver-module-name=The name of the module from which the driver was loaded, if it was loaded from the module path
datasources.installed-drivers.deployment-name=The name of the deployment unit from which the driver was loaded
datasources.installed-drivers.jdbc-compliant=Whether or not the driver is JDBC compliant
datasources.installed-drivers.module-slot=The slot of the module from which the driver was loaded, if it was loaded from the module path
datasources.installed-drivers.xa-datasource-class=XA datasource class



datasources.data-source=A JDBC data-source configuration
datasources.data-source.add=Add a new data-source
datasources.data-source.remove=Remove the data-source
datasources.data-source.description=A JDBC data-source configuration
datasources.data-source.clear-statistics=Clear statistics values for this resource

datasources.data-source.connection-url=The JDBC driver connection URL
datasources.data-source.driver-name=Defines the JDBC driver the datasource should use. It is a symbolic name matching the the name of installed driver. In case the driver is deployed as jar, the name is the name of deployment unit
datasources.data-source.datasource-class=The fully qualified name of the JDBC datasource class
datasources.data-source.driver-class=The fully qualified name of the JDBC driver class
datasources.data-source.driver=Defines the JDBC driver the datasource should use. It is a symbolic name matching the the name of installed driver. In case the driver is deployed as jar, the name is the name of deployment unit

datasources.data-source.enabled=Specifies if the datasource should be enabled
datasources.data-source.exception-sorter-class-name=An org.jboss.jca.adapters.jdbc.ExceptionSorter that provides an isExceptionFatal(SQLException) method to validate if an exception should broadcast an error
datasources.data-source.exception-sorter-properties.exception-sorter-class-name=An org.jboss.jca.adapters.jdbc.ExceptionSorter that provides an isExceptionFatal(SQLException) method to validate if an exception should broadcast an error
datasources.data-source.exception-sorter-properties=The exception sorter properties

datasources.data-source.idle-timeout-minutes=The idle-timeout-minutes elements specifies the maximum time, in minutes, a connection may be idle before being closed. The actual maximum time depends also on the IdleRemover scan time, which is half of the smallest idle-timeout-minutes value of any pool. Changing this value can be done only on disabled datasource, requires a server restart otherwise.
datasources.data-source.interleaving=An element to enable interleaving for XA connections
datasources.data-source.jndi-name=Specifies the JNDI name for the datasource

datasources.data-source.jta=Enable JTA integration

datasources.data-source.max-pool-size=The max-pool-size element specifies the maximum number of connections for a pool. No more connections will be created in each sub-pool
datasources.data-source.min-pool-size=The min-pool-size element specifies the minimum number of connections for a pool
datasources.data-source.initial-pool-size=The initial-pool-size element indicates the initial number of connections a pool should hold.
datasources.data-source.capacity-incrementer-class=Class defining the policy for incrementing connections in the pool
datasources.data-source.capacity-incrementer-properties=Properties to be injected in class defining the policy for incrementing connections in the pool
datasources.data-source.capacity-decrementer-class=Class defining the policy for decrementing connections in the pool
datasources.data-source.capacity-decrementer-properties=Properties to be injected in class defining the policy for decrementing connections in the pool

datasources.data-source.new-connection-sql=Specifies an SQL statement to execute whenever a connection is added to the connection pool
datasources.data-source.no-tx-separate-pool=Oracle does not like XA connections getting used both inside and outside a JTA transaction. To workaround the problem you can create separate sub-pools for the different contexts

datasources.data-source.pad-xid=Should the Xid be padded
datasources.data-source.password=Specifies the password used when creating a new connection
datasources.data-source.pool-name=Specifies the pool name for the datasource used for management
datasources.data-source.pool-prefill=Should the pool be prefilled. Changing this value can be done only on disabled datasource, requires a server restart otherwise.
datasources.data-source.pool-use-strict-min=Specifies if the min-pool-size should be considered strictly
datasources.data-source.prepared-statements-cache-size=The number of prepared statements per connection in an LRU cache
datasources.data-source.property-name=The property name
datasources.data-source.property-value=The property value

datasources.data-source.query-timeout=Any configured query timeout in seconds. If not provided no timeout will be set

datasources.data-source.same-rm-override=The is-same-rm-override element allows one to unconditionally set whether the javax.transaction.xa.XAResource.isSameRM(XAResource) returns true or false
datasources.data-source.security-domain=Specifies the security domain which defines the javax.security.auth.Subject that are used to distinguish connections in the pool
datasources.data-source.set-tx-query-timeout=Whether to set the query timeout based on the time remaining until transaction timeout. Any configured query timeout will be used if there is no transaction
datasources.data-source.share-prepared-statements=Whether to share prepared statements, i.e. whether asking for same statement twice without closing uses the same underlying prepared statement
datasources.data-source.spy=Enable spying of SQL statements
datasources.data-source.stale-connection-checker-properties.stale-connection-checker-class-name=An org.jboss.jca.adapters.jdbc.StaleConnectionChecker that provides an isStaleConnection(SQLException) method which if it returns true will wrap the exception in an org.jboss.jca.adapters.jdbc.StaleConnectionException
datasources.data-source.stale-connection-checker-class-name=An org.jboss.jca.adapters.jdbc.StaleConnectionChecker that provides an isStaleConnection(SQLException) method which if it returns true will wrap the exception in an org.jboss.jca.adapters.jdbc.StaleConnectionException
datasources.data-source.stale-connection-checker-properties=The stale connection checker properties

datasources.data-source.track-statements=Whether to check for unclosed statements when a connection is returned to the pool, result sets are closed, a statement is closed or return to the prepared statement cache. Valid values are: "false" - do not track statements, "true" - track statements and result sets and warn when they are not closed, "nowarn" - track statements but do not warn about them being unclosed
datasources.data-source.transaction-isolation=Set the java.sql.Connection transaction isolation level. Valid values are: TRANSACTION_READ_UNCOMMITTED, TRANSACTION_READ_COMMITTED, TRANSACTION_REPEATABLE_READ, TRANSACTION_SERIALIZABLE and TRANSACTION_NONE

datasources.data-source.url-delimiter=Specifies the delimiter for URLs in connection-url for HA datasources
datasources.data-source.url-selector-strategy-class-name=A class that implements org.jboss.jca.adapters.jdbc.URLSelectorStrategy
datasources.data-source.use-fast-fail=Whether to fail a connection allocation on the first try if it is invalid (true) or keep trying until the pool is exhausted of all potential connections (false)
datasources.data-source.use-java-context=Setting this to false will bind the datasource into global JNDI
datasources.data-source.use-try-lock=Any configured timeout for internal locks on the resource adapter objects in seconds
datasources.data-source.user-name=Specify the user name used when creating a new connection

datasources.data-source.valid-connection-checker-class-name=An org.jboss.jca.adapters.jdbc.ValidConnectionChecker that provides an isValidConnection(Connection) method to validate a connection. If an exception is returned that means the connection is invalid. This overrides the check-valid-connection-sql element
datasources.data-source.valid-connection-checker-properties.valid-connection-checker-class-name=An org.jboss.jca.adapters.jdbc.ValidConnectionChecker that provides an isValidConnection(Connection) method to validate a connection. If an exception is returned that means the connection is invalid. This overrides the check-valid-connection-sql element
datasources.data-source.valid-connection-checker-properties=The valid connection checker properties
datasources.data-source.validate-on-match=The validate-on-match element specifies if connection validation should be done when a connection factory attempts to match a managed connection. This is typically exclusive to the use of background validation

datasources.data-source.wrap-xa-resource=Should the XAResource instances be wrapped in an org.jboss.tm.XAResourceWrapper instance

datasources.data-source.xa-datasource-properties=List of xa-datasource-property
datasources.data-source.xa-resource-timeout=The value is passed to XAResource.setTransactionTimeout(), in seconds. Default is zero


datasources.data-source.allocation-retry-wait-millis=The allocation retry wait millis element specifies the amount of time, in milliseconds, to wait between retrying to allocate a connection
datasources.data-source.allocation-retry=The allocation retry element indicates the number of times that allocating a connection should be tried before throwing an exception

datasources.data-source.allow-multiple-users= Specifies if multiple users will access the datasource through the getConnection(user, password) method and hence if the internal pool type should account for that

datasources.data-source.background-validation-millis=The background-validation-millis element specifies the amount of time, in milliseconds, that background validation will run. Changing this value can be done only on disabled datasource,  requires a server restart otherwise
datasources.data-source.background-validation=An element to specify that connections should be validated on a background thread versus being validated prior to use. Changing this value can be done only on disabled datasource,  requires a server restart otherwise.
datasources.data-source.blocking-timeout-wait-millis=The blocking-timeout-millis element specifies the maximum time, in milliseconds, to block while waiting for a connection before throwing an exception. Note that this blocks only while waiting for locking a connection, and will never throw an exception if creating a new connection takes an inordinately long time

datasources.data-source.check-valid-connection-sql=Specify an SQL statement to check validity of a pool connection. This may be called when managed connection is obtained from the pool
datasources.data-source.connection-properties.add=Add a connection property
datasources.data-source.connection-properties.remove=Remove the connection property
datasources.data-source.connection-properties.value=Each connection-property specifies a string name/value pair with the property name coming from the name attribute and the value coming from the element content
datasources.data-source.connection-properties=The connection-properties element allows you to pass in arbitrary connection properties to the Driver.connect(url, props) method

datasources.data-source.reauth-plugin-class-name=The fully qualified class name of the reauthentication plugin implementation
datasources.data-source.reauth-plugin-properties.reauth-plugin-class-name=The fully qualified class name of the reauthentication plugin implementation
datasources.data-source.reauth-plugin-properties=The properties for the reauthentication plugin

datasources.data-source.flush-strategy=Specifies how the pool should be flush in case of an error. Valid values are: FailingConnectionOnly (default), IdleConnections and EntirePool
datasources.data-source.use-ccm=Enable the use of a cached connection manager

datasources.data-source.recovery-username=The user name used for recovery
datasources.data-source.recovery-password=The password used for recovery
datasources.data-source.recovery-security-domain=The security domain used for recovery
datasources.data-source.recovery-plugin-properties.recovery-plugin-class-name=The fully qualified class name of the recovery plugin implementation
datasources.data-source.recovery-plugin-class-name=The fully qualified class name of the recovery plugin implementation
datasources.data-source.recovery-plugin-properties=The properties for the recovery plugin
datasources.data-source.no-recovery=Specifies if the connection pool should be excluded from recovery

datasources.data-source.enable.persistent=if true enable attribute is persisted
datasources.data-source.connection-listener-class=Speciefies class name extending org.jboss.jca.adapters.jdbc.spi.listener.ConnectionListener that provides a possible to listen for connection activation and passivation in order to perform actions before the connection is returned to the application or returned to the pool.
datasources.data-source.connection-listener-property=Properties to be injected in class specidied in connection-listener-class




datasources.xa-data-source=A JDBC XA data-source configuration
datasources.xa-data-source.add=Add a new XA data-source
datasources.xa-data-source.description=A JDBC XA data-source configuration
datasources.xa-data-source.disable=Disable the XA data-source
datasources.xa-data-source.enable=Enable the XA data-source

datasources.xa-data-source.remove=Remove the XA data-source

datasources.xa-data-source.connection-url=The JDBC driver connection URL
datasources.xa-data-source.driver-name=Defines the JDBC driver the datasource should use. It is a symbolic name matching the the name of installed driver. In case the driver is deployed as jar, the name is the name of deployment unit

datasources.xa-data-source.datasource-class=The fully qualified name of the JDBC datasource class
datasources.xa-data-source.driver-class=The fully qualified name of the JDBC driver class
datasources.xa-data-source.driver=Defines the JDBC driver the datasource should use. It is a symbolic name matching the the name of installed driver. In case the driver is deployed as jar, the name is the name of deployment unit

datasources.xa-data-source.enabled=Specifies if the datasource should be enabled
datasources.xa-data-source.exception-sorter-class-name=An org.jboss.jca.adapters.jdbc.ExceptionSorter that provides an isExceptionFatal(SQLException) method to validate if an exception should broadcast an error
datasources.xa-data-source.exception-sorter-properties.exception-sorter-class-name=An org.jboss.jca.adapters.jdbc.ExceptionSorter that provides an isExceptionFatal(SQLException) method to validate if an exception should broadcast an error
datasources.xa-data-source.exception-sorter-properties=The exception sorter properties

datasources.xa-data-source.idle-timeout-minutes=The idle-timeout-minutes elements specifies the maximum time, in minutes, a connection may be idle before being closed. The actual maximum time depends also on the IdleRemover scan time, which is half of the smallest idle-timeout-minutes value of any pool. Changing this value can be done only on disabled datasource, requires a server restart otherwise.
datasources.xa-data-source.interleaving=An element to enable interleaving for XA connections
datasources.xa-data-source.jndi-name=Specifies the JNDI name for the datasource

datasources.xa-data-source.jta=Enable JTA integration

datasources.xa-data-source.max-pool-size=The max-pool-size element specifies the maximum number of connections for a pool. No more connections will be created in each sub-pool
datasources.xa-data-source.min-pool-size=The min-pool-size element specifies the minimum number of connections for a pool
datasources.xa-data-source.initial-pool-size=The initial-pool-size element indicates the initial number of connections a pool should hold.
datasources.xa-data-source.capacity-incrementer-class=Class defining the policy for incrementing connections in the pool
datasources.xa-data-source.capacity-incrementer-properties=Properties to inject in class defining the policy for incrementing connections in the pool
datasources.xa-data-source.capacity-decrementer-class=Class defining the policy for decrementing connections in the pool
datasources.xa-data-source.capacity-decrementer-properties=Properties to inject in class defining the policy for decrementing connections in the pool

datasources.xa-data-source.new-connection-sql=Specifies an SQL statement to execute whenever a connection is added to the connection pool
datasources.xa-data-source.no-tx-separate-pool=Oracle does not like XA connections getting used both inside and outside a JTA transaction. To workaround the problem you can create separate sub-pools for the different contexts

datasources.xa-data-source.pad-xid=Should the Xid be padded
datasources.xa-data-source.password=Specifies the password used when creating a new connection
datasources.xa-data-source.pool-name=Specifies the pool name for the datasource used for management
datasources.xa-data-source.pool-prefill=Should the pool be prefilled. Changing this value can be done only on disabled datasource, requires a server restart otherwise.
datasources.xa-data-source.pool-use-strict-min=Specifies if the min-pool-size should be considered strictly
datasources.xa-data-source.prepared-statements-cache-size=The number of prepared statements per connection in an LRU cache
datasources.xa-data-source.property-name=The property name
datasources.xa-data-source.property-value=The property value

datasources.xa-data-source.query-timeout=Any configured query timeout in seconds. If not provided no timeout will be set

datasources.xa-data-source.same-rm-override=The is-same-rm-override element allows one to unconditionally set whether the javax.transaction.xa.XAResource.isSameRM(XAResource) returns true or false
datasources.xa-data-source.security-domain=Specifies the security domain which defines the javax.security.auth.Subject that are used to distinguish connections in the pool
datasources.xa-data-source.set-tx-query-timeout=Whether to set the query timeout based on the time remaining until transaction timeout. Any configured query timeout will be used if there is no transaction
datasources.xa-data-source.share-prepared-statements=Whether to share prepared statements, i.e. whether asking for same statement twice without closing uses the same underlying prepared statement
datasources.xa-data-source.spy=Enable spying of SQL statements
datasources.xa-data-source.stale-connection-checker-properties.stale-connection-checker-class-name=An org.jboss.jca.adapters.jdbc.StaleConnectionChecker that provides an isStaleConnection(SQLException) method which if it returns true will wrap the exception in an org.jboss.jca.adapters.jdbc.StaleConnectionException
datasources.xa-data-source.stale-connection-checker-class-name=An org.jboss.jca.adapters.jdbc.StaleConnectionChecker that provides an isStaleConnection(SQLException) method which if it returns true will wrap the exception in an org.jboss.jca.adapters.jdbc.StaleConnectionException
datasources.xa-data-source.stale-connection-checker-properties=The stale connection checker properties

datasources.xa-data-source.track-statements=Whether to check for unclosed statements when a connection is returned to the pool, result sets are closed, a statement is closed or return to the prepared statement cache. Valid values are: "false" - do not track statements, "true" - track statements and result sets and warn when they are not closed, "nowarn" - track statements but do not warn about them being unclosed
datasources.xa-data-source.transaction-isolation=Set the java.sql.Connection transaction isolation level. Valid values are: TRANSACTION_READ_UNCOMMITTED, TRANSACTION_READ_COMMITTED, TRANSACTION_REPEATABLE_READ, TRANSACTION_SERIALIZABLE and TRANSACTION_NONE

datasources.xa-data-source.url-delimiter=Specifies the delimiter for URLs in connection-url for HA datasources
datasources.xa-data-source.url-property=Specifies the property for the URL property in the xa-datasource-property values
datasources.xa-data-source.url-selector-strategy-class-name=A class that implements org.jboss.jca.adapters.jdbc.URLSelectorStrategy
datasources.xa-data-source.use-fast-fail=Whether to fail a connection allocation on the first try if it is invalid (true) or keep trying until the pool is exhausted of all potential connections (false)
datasources.xa-data-source.use-java-context=Setting this to false will bind the datasource into global JNDI
datasources.xa-data-source.use-try-lock=Any configured timeout for internal locks on the resource adapter objects in seconds
datasources.xa-data-source.user-name=Specify the user name used when creating a new connection

datasources.xa-data-source.valid-connection-checker-class-name=An org.jboss.jca.adapters.jdbc.ValidConnectionChecker that provides an isValidConnection(Connection) method to validate a connection. If an exception is returned that means the connection is invalid. This overrides the check-valid-connection-sql element
datasources.xa-data-source.valid-connection-checker-properties.valid-connection-checker-class-name=An org.jboss.jca.adapters.jdbc.ValidConnectionChecker that provides an isValidConnection(Connection) method to validate a connection. If an exception is returned that means the connection is invalid. This overrides the check-valid-connection-sql element
datasources.xa-data-source.valid-connection-checker-properties=The valid connection checker properties
datasources.xa-data-source.validate-on-match=The validate-on-match element specifies if connection validation should be done when a connection factory attempts to match a managed connection. This is typically exclusive to the use of background validation

datasources.xa-data-source.wrap-xa-resource=Should the XAResource instances be wrapped in an org.jboss.tm.XAResourceWrapper instance

datasources.xa-data-source.xa-datasource-class=The fully qualified name of the javax.sql.XADataSource implementation
datasources.xa-data-source.xa-datasource-properties.add=Add a single xa-datasource-property
datasources.xa-data-source.xa-datasource-properties.remove=Remove the xa-datasource-property
datasources.xa-data-source.xa-datasource-properties.value=Specifies a property value to assign to the XADataSource implementation class. Each property is identified by the name attribute and the property value is given by the xa-datasource-property element content. The property is mapped onto the XADataSource implementation by looking for a JavaBeans style getter method for the property name. If found, the value of the property is set using the JavaBeans setter with the element text translated to the true property type using the java.beans.PropertyEditor
datasources.xa-data-source.xa-datasource-properties=List of xa-datasource-property
datasources.xa-data-source.xa-resource-timeout=The value is passed to XAResource.setTransactionTimeout(), in seconds. Default is zero
datasources.xa-data-source.get-installed-driver=Get a description of an installed driver

datasources.xa-data-source.allocation-retry-wait-millis=The allocation retry wait millis element specifies the amount of time, in milliseconds, to wait between retrying to allocate a connection
datasources.xa-data-source.allocation-retry=The allocation retry element indicates the number of times that allocating a connection should be tried before throwing an exception

datasources.xa-data-source.allow-multiple-users= Specifies if multiple users will access the datasource through the getConnection(user, password) method and hence if the internal pool type should account for that
datasources.xa-data-source.connection-listener-class=Speciefies class name extending org.jboss.jca.adapters.jdbc.spi.listener.ConnectionListener that provides a possible to listen for connection activation and passivation in order to perform actions before the connection is returned to the application or returned to the pool.
datasources.xa-data-source.connection-listener-property=Properties to be injected in class specified in connection-listener-class
datasources.xa-data-source.background-validation-millis=The background-validation-millis element specifies the amount of time, in milliseconds, that background validation will run. Changing this value can be done only on disabled datasource,  requires a server restart otherwise
datasources.xa-data-source.background-validation=An element to specify that connections should be validated on a background thread versus being validated prior to use. Changing this value can be done only on disabled datasource,  requires a server restart otherwise.
datasources.xa-data-source.blocking-timeout-wait-millis=The blocking-timeout-millis element specifies the maximum time, in milliseconds, to block while waiting for a connection before throwing an exception. Note that this blocks only while waiting for locking a connection, and will never throw an exception if creating a new connection takes an inordinately long time

datasources.xa-data-source.check-valid-connection-sql=Specify an SQL statement to check validity of a pool connection. This may be called when managed connection is obtained from the pool

datasources.xa-data-source.reauth-plugin-class-name=The fully qualified class name of the reauthentication plugin implementation
datasources.xa-data-source.reauth-plugin-properties.reauth-plugin-class-name=The fully qualified class name of the reauthentication plugin implementation
datasources.xa-data-source.reauth-plugin-properties=The properties for the reauthentication plugin

datasources.xa-data-source.flush-strategy=Specifies how the pool should be flush in case of an error. Valid values are: FailingConnectionOnly (default), IdleConnections and EntirePool
datasources.xa-data-source.use-ccm=Enable the use of a cached connection manager

datasources.xa-data-source.recovery-username=The user name used for recovery
datasources.xa-data-source.recovery-password=The password used for recovery
datasources.xa-data-source.recovery-security-domain=The security domain used for recovery
datasources.xa-data-source.recovery-plugin-properties.recovery-plugin-class-name=The fully qualified class name of the recovery plugin implementation
datasources.xa-data-source.recovery-plugin-class-name=The fully qualified class name of the recovery plugin implementation
datasources.xa-data-source.recovery-plugin-properties=The properties for the recovery plugin
datasources.xa-data-source.no-recovery=Specifies if the connection pool should be excluded from recovery


datasources.jdbc-driver.get-installed-driver.driver-minor-version=Minor driver version
datasources.jdbc-driver.get-installed-driver.driver-major-version=Major driver version
datasources.jdbc-driver.get-installed-driver.driver-name=Driver name
datasources.jdbc-driver.get-installed-driver.driver-class-name=Driver class name
datasources.jdbc-driver.get-installed-driver.driver-xa-datasource-class-name=XA datasource class name
datasources.jdbc-driver.get-installed-driver.driver-module-name=The name of the module from which the driver was loaded, if it was loaded from the module path
datasources.jdbc-driver.get-installed-driver.deployment-name=The name of the deployment unit from which the driver was loaded
datasources.jdbc-driver.get-installed-driver.jdbc-compliant=Whether or not the driver is JDBC compliant
datasources.jdbc-driver.get-installed-driver.module-slot=The slot of the module from which the driver was loaded, if it was loaded from the module path
datasources.jdbc-driver.get-installed-driver.xa-datasource-class=XA datasource class




datasources.statistics=Runtime statistics provided by the resource adapter.
datasources.data-source.statistics=Runtime statistics provided by the DataSource.
datasources.xa-data-source.statistics=Runtime statistics provided by the XADataSource.
statistics=Runtime statistics provided by the resource adapter.
datasources.clear-statistics=Clear statistics values for this resource

datasources.deployed=Runtime resources exposed by data sources included in this deployment.
deployed=Runtime resources exposed by data sources included in this deployment.

statistics.statistics-enabled=define if runtime statistics is enabled or not
