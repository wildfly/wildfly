datasources=The data-sources subsystem, used to declare JDBC data-sources
datasources.add=Adds the data-sources subsystem. 

jdbc-driver=Services that make a JDBC driver available for use in the runtime
jdbc-driver.description=A service that makes a JDBC driver available for use in the runtime
jdbc-driver.module=The name of the module that makes the JDBC driver available via the java.util.ServiceLoader mechanism under service type "java.sql.Driver"
jdbc-driver.add=Adds a new JDBC driver service
jdbc-driver.describe=TODO remove this operation
jdbc-driver.remove=Removes a JDBC driver service

data-source=A jdbc data-source configuration
data-source.description=A jdbc data-source configuration
data-source.add=Adds a new data-source
data-source.remove=Removes a data-source
data-source.enable=Enables a data-source
data-source.disable=Disables a data-source
data-source.describe=TODO remove this operation

xa-data-source=A jdbc XA data-source configuration
xa-data-source.description=A jdbc XA data-source configuration
xa-data-source.add=Adds a new XA data-source
xa-data-source.remove=Removes a XA data-source
xa-data-source.enable=Enables a XA data-source
xa-data-source.disable=Disables a XA data-source
xa-data-source.describe=TODO remove this operation

connection-url=The JDBC driver connection URL
driver-class=The fully qualifed name of the JDBC driver class
driver=Defines the JDBC driver the datasource should use with this format: <driver-name>#<major-version>.<minor-version> where <driver-name> is the fully qualifed name of the JDBC driver class
connection-properties=The connection-properties element allows you to pass in arbitrary connection properties to the Driver.connect(url, props) method.
connection-property=Each connection-property specifies a string name/value pair with the property name coming from the name attribute and the value coming from the element content
property-name=the property name
property-value=the property value
new-connection-sql=Specify an SQL statement to execute whenever a connection is added to the connection pool.
transaction-isolation= Set java.sql.Connection transaction isolation level to use. The constants defined by transaction-isolation-values are the possible transaction isolation levels and include: TRANSACTION_READ_UNCOMMITTED TRANSACTION_READ_COMMITTED TRANSACTION_REPEATABLE_READ TRANSACTION_SERIALIZABLE TRANSACTION_NONE
url-delimiter=Specifies the delimeter for URLs in connection-url for HA datasources
url-selector-strategy-class-name=A class that implements org.jboss.jca.adapters.jdbc.URLSelectorStrategy
use-java-context=Setting this to false will bind the DataSource into global JNDI;
pool-name=Specifies the pool name for the datasource used for management
enabled=Specifies if the datasource should be enabled
jndi-name=Specifies the JNDI name for the datasource
url-delimiter=Specifies the delimeter for URLs in connection-url for HA datasources
min-pool-size=The min-pool-size element indicates the minimum number of connections a pool should hold. These are not created until a Subject is known from a request for a connection.
max-pool-size=The max-pool-size element indicates the maximum number of connections for a pool. No more connections will be created in each sub-pool.
pool-prefill=Whether to attempt to prefill the connection pool. Changing this value require a server restart.
pool-use-strict-min=Define if the min-pool-size should be considered a strictly.
allocation-retry=The allocation retry element indicates the number of times that allocating a connection should be tried before throwing an exception.
allocation-retry-wait-millis=he allocation retry wait millis element indicates the time in milliseconds to wait between retrying to allocate a connection.
blocking-timeout-wait-millis=The blocking-timeout-millis element indicates the maximum time in milliseconds to block while waiting for a connection before throwing an exception. Note that this blocks only while waiting for a permit for a connection, and will never throw an exception if creating a new connection takes an inordinately long time.
idle-timeout-minutes=The idle-timeout-minutes elements indicates the maximum time in minutes a connection may be idle before being closed. The actual maximum time depends also on the IdleRemover scan time, which is 1/2 the smallest idle-timeout-minutes of any pool. Changing this value require a server restart.
set-tx-query-timeout=Whether to set the query timeout based on the time remaining until transaction timeout, any configured query timeout will be used if there is no transaction.
xa-resource-timeout=Passed to XAResource.setTransactionTimeout() Default is zero which does not invoke the setter. In seconds
query-timeout=Any configured query timeout in seconds The default is no timeout
use-try-lock=Any configured timeout for internal locks on the resource adapter objects in seconds
user-name=Specify the username used when creating a new connection.
password=Specify the passwprd used when creating a new connection.
security-domain=Indicates Subject (from security domain) are used to distinguish connections in the pool. The content of the security-domain is the name of the JAAS security manager that will handleauthentication. This name correlates to the JAAS login-config.xml descriptor application-policy/name attribute.
share-prepared-statements=Whether to share prepare statements, i.e. whether asking for same statement twice without closing uses the same underlying prepared statement
prepared-statements-cacheSize=The number of prepared statements per connection in an LRU cache
track-statements=Whether to check for unclosed statements when a connection is returned to the pool and result sets are closed when a statement is closed/return to the prepared statement cache. valid values are: false - do not track statements and results true - track statements and result sets and warn when they are not closed nowarn - track statements but do no warn about them being unclosed
valid-connection-checker-class-name=An org.jboss.jca.adapters.jdbc.ValidConnectionChecker that provides a SQLException isValidConnection(Connection e) method to validate is a connection is valid. An exception means the connection is destroyed. This overrides the check-valid-connection-sql when present.
check-valid-connection-sql= Specify an SQL statement to check validity of a pool connection. This may be called when managed connection is taken from pool for use.
validate-on-match=The validate-on-match element indicates whether or not connection level validation should be done when a connection factory attempts to match a managed connection for a given set. This is typically exclusive to the use of background validation
spy=whatever spy or not the jdbc connection
stale-connection-checker-class-name=An org.jboss.jca.adapters.jdbc.StaleConnectionChecker that provides a boolean isStaleConnection(SQLException e) method which if it it returns true will wrap the exception in an org.jboss.jca.adapters.jdbc.StaleConnectionException
background-validation-minutes=The background-validation-minutes element specifies the amount of time, in minutes, that background validation will run. Changing this value require a server restart.
background-validation=An element to specify that connections should be validated on a background thread versus being validated prior to use. Changing this value require a server restart.
use-fast-fail=Whether fail a connection allocation on the first connection if it is invalid (true) or keep trying until the pool is exhausted of all potential connections (false)
exception-sorter-class-name=An org.jboss.jca.adapters.jdbc.ExceptionSorter that provides a boolean isExceptionFatal(SQLException e) method to validate is an exception should be broadcast to all javax.resource.spi.ConnectionEventListener as a connectionErrorOccurred
xa-data-source-property=Specifies a property to assign to the XADataSource implementation class. Each property is identified by the name attribute and the property value is given by the xa-datasource-property element content. The property is mapped onto the XADataSource implementation by looking for a JavaBeans style getter method for the property name. If found, the value of the property is set using the JavaBeans setter with the element text translated to the true property type using the java.beans.PropertyEditor
xa-data-source-properties=List of xa-data-source-property
xa-data-source-class=The fully qualifed name of the javax.sql.XADataSource implementation
interliving=An element to enable interleaving for XA connection factories
no-tx-separate-pool=Oracle does not like XA connections getting used both inside and outside a JTA transaction. To workaround the problem you can create separate sub-pools for the different context
pad-xid=Should the Xid be padded
same-rm-override=The is-same-rm-override element allows one to unconditionally set whether the javax.transaction.xa.XAResource.isSameRM(XAResource) returns true or false
wrap-xa-datasource=Should the XAResource instances be wrapped in a org.jboss.tm.XAResourceWrapper instance
new-connection-sql=Specifies an SQL statement to execute whenever a connection is added to the connection pool.
exceptionsorter-properties=exceptionsorter properties
staleconnectionchecker-properties=staleconnectionchecker properties
validconnectionchecker-properties=validconnectionchecker properties
