datasources=The data-sources subsystem, used to declare JDBC data-sources
datasources.add=Adds the data-sources subsystem
datasources.remove=Removes the data-sources subsystem

jdbc-driver=Service that make a JDBC driver available for use in the runtime
jdbc-driver.add=Add a new JDBC driver
jdbc-driver.description=A service that makes a JDBC driver available for use in the runtime
jdbc-driver.module=The name of the module that makes the JDBC driver available under the service type "java.sql.Driver"
jdbc-driver.remove=Remove a JDBC driver

data-source=A JDBC data-source configuration
data-source.add=Add a new data-source
data-source.description=A JDBC data-source configuration
data-source.disable=Disable the data-source
data-source.enable=Enable the data-source
data-source.flush-all-connection-in-pool=Flushes all connections in the pool
data-source.flush-idle-connection-in-pool=Flushes all idle connections in the pool
data-source.remove=Remove the data-source
data-source.test-connection-in-pool=Test if a connection can be obtained
data-source.clear-statistics=Clear statistics values for this resource


xa-data-source=A JDBC XA data-source configuration
xa-data-source.add=Add a new XA data-source
xa-data-source.description=A JDBC XA data-source configuration
xa-data-source.disable=Disable the XA data-source
xa-data-source.enable=Enable the XA data-source
xa-data-source.remove=Remove the XA data-source

allocation-retry-wait-millis=The allocation retry wait millis element specifies the amount of time, in milliseconds, to wait between retrying to allocate a connection
allocation-retry=The allocation retry element indicates the number of times that allocating a connection should be tried before throwing an exception

background-validation-millis=The background-validation-millis element specifies the amount of time, in milliseconds, that background validation will run. Changing this value requires a server restart
background-validation=An element to specify that connections should be validated on a background thread versus being validated prior to use. Changing this value requires a server restart
blocking-timeout-wait-millis=The blocking-timeout-millis element specifies the maximum time, in milliseconds, to block while waiting for a connection before throwing an exception. Note that this blocks only while waiting for locking a connection, and will never throw an exception if creating a new connection takes an inordinately long time

check-valid-connection-sql=Specify an SQL statement to check validity of a pool connection. This may be called when managed connection is obtained from the pool
connection-properties.add=Add a connection property
connection-properties.remove=Remove the connection property
connection-properties.value=Each connection-property specifies a string name/value pair with the property name coming from the name attribute and the value coming from the element content
connection-properties=The connection-properties element allows you to pass in arbitrary connection properties to the Driver.connect(url, props) method
connection-url=The JDBC driver connection URL

datasource-class=The fully qualifed name of the JDBC datasource class
driver-class=The fully qualifed name of the JDBC driver class
driver-name=Defines the JDBC driver the datasource should use. It is a symbolic name matching the the name of installed driver. In case the driver is deployed as jar, the name is the name of deployment unit
driver=Defines the JDBC driver the datasource should use. It is a symbolic name matching the the name of installed driver. In case the driver is deployed as jar, the name is the name of deployment unit

enabled=Specifies if the datasource should be enabled
exception-sorter-class-name=An org.jboss.jca.adapters.jdbc.ExceptionSorter that provides an isExceptionFatal(SQLException) method to validate if an exception should broadcast an error
exception-sorter-properties=The exception sorter properties

idle-timeout-minutes=The idle-timeout-minutes elements specifies the maximum time, in minutes, a connection may be idle before being closed. The actual maximum time depends also on the IdleRemover scan time, which is half of the smallest idle-timeout-minutes value of any pool. Changing this value requires a server restart.
interleaving=An element to enable interleaving for XA connections
jndi-name=Specifies the JNDI name for the datasource

jta=Enable JTA integration

max-pool-size=The max-pool-size element specifies the maximum number of connections for a pool. No more connections will be created in each sub-pool
min-pool-size=The min-pool-size element specifies the minimum number of connections for a pool

new-connection-sql=Specifies an SQL statement to execute whenever a connection is added to the connection pool
no-tx-separate-pool=Oracle does not like XA connections getting used both inside and outside a JTA transaction. To workaround the problem you can create separate sub-pools for the different contexts

pad-xid=Should the Xid be padded
password=Specifies the password used when creating a new connection
pool-name=Specifies the pool name for the datasource used for management
pool-prefill=Should the pool be prefilled. Changing this value requires a server restart
pool-use-strict-min=Specifies if the min-pool-size should be considered strictly
prepared-statements-cache-size=The number of prepared statements per connection in an LRU cache
property-name=The property name
property-value=The property value

query-timeout=Any configured query timeout in seconds. If not provided no timeout will be set

same-rm-override=The is-same-rm-override element allows one to unconditionally set whether the javax.transaction.xa.XAResource.isSameRM(XAResource) returns true or false
security-domain=Specifies the security domain which defines the javax.security.auth.Subject that are used to distinguish connections in the pool
set-tx-query-timeout=Whether to set the query timeout based on the time remaining until transaction timeout. Any configured query timeout will be used if there is no transaction
share-prepared-statements=Whether to share prepared statements, i.e. whether asking for same statement twice without closing uses the same underlying prepared statement
spy=Enable spying of SQL statements
stale-connection-checker-class-name=An org.jboss.jca.adapters.jdbc.StaleConnectionChecker that provides an isStaleConnection(SQLException) method which if it returns true will wrap the exception in an org.jboss.jca.adapters.jdbc.StaleConnectionException
stale-connection-checker-properties=The stale connection checker properties

track-statements=Whether to check for unclosed statements when a connection is returned to the pool, result sets are closed, a statement is closed or return to the prepared statement cache. Valid values are: "false" - do not track statements, "true" - track statements and result sets and warn when they are not closed, "nowarn" - track statements but do not warn about them being unclosed
transaction-isolation=Set the java.sql.Connection transaction isolation level. Valid values are: TRANSACTION_READ_UNCOMMITTED, TRANSACTION_READ_COMMITTED, TRANSACTION_REPEATABLE_READ, TRANSACTION_SERIALIZABLE and TRANSACTION_NONE

url-delimiter=Specifies the delimeter for URLs in connection-url for HA datasources
url-selector-strategy-class-name=A class that implements org.jboss.jca.adapters.jdbc.URLSelectorStrategy
use-fast-fail=Whether to fail a connection allocation on the first try if it is invalid (true) or keep trying until the pool is exhausted of all potential connections (false)
use-java-context=Setting this to false will bind the datasource into global JNDI
use-try-lock=Any configured timeout for internal locks on the resource adapter objects in seconds
user-name=Specify the user name used when creating a new connection

valid-connection-checker-class-name=An org.jboss.jca.adapters.jdbc.ValidConnectionChecker that provides an isValidConnection(Connection) method to validate a connection. If an exception is returned that means the connection is invalid. This overrides the check-valid-connection-sql element
valid-connection-checker-properties=The valid connection checker properties
validate-on-match=The validate-on-match element specifies if connection validation should be done when a connection factory attempts to match a managed connection. This is typically exclusive to the use of background validation

wrap-xa-resource=Should the XAResource instances be wrapped in a org.jboss.tm.XAResourceWrapper instance

xa-datasource-class=The fully qualifed name of the javax.sql.XADataSource implementation
xa-datasource-properties.add=Add a single xa-datasource-property
xa-datasource-properties.remove=Remove the xa-datasource-property
xa-datasource-properties.value=Specifies a property value to assign to the XADataSource implementation class. Each property is identified by the name attribute and the property value is given by the xa-datasource-property element content. The property is mapped onto the XADataSource implementation by looking for a JavaBeans style getter method for the property name. If found, the value of the property is set using the JavaBeans setter with the element text translated to the true property type using the java.beans.PropertyEditor
xa-datasource-properties=List of xa-datasource-property
xa-resource-timeout=The value is passed to XAResource.setTransactionTimeout(), in seconds. Default is zero

get-installed-driver=Get a description of an installed driver

installed-drivers=List of JDBC drivers that have been installed in the runtime
installed-drivers-list=List of JDBC drivers that have been installed in the runtime
installed-drivers.datasource-class-name=The fully qualified class name of the javax.sql.DataSource implementation
installed-drivers.deployment-name=The name of the deployment unit from which the driver was loaded
installed-drivers.driver-class=The fully qualified class name of the java.sql.Driver implementation
installed-drivers.driver-datasource-class-name=The fully qualified class name of the javax.sql.DataSource implementation
installed-drivers.driver-name=The symbolic name of this driver used to reference it in the registry
installed-drivers.driver-xa-datasource-class-name=The fully qualified class name of the javax.sql.XADataSource implementation
installed-drivers.jdbc-compliant=Whether or not the driver is JDBC compliant
installed-drivers.major-version=The driver's major version number
installed-drivers.minor-version=The driver's minor version number
installed-drivers.module-name=The name of the module from which the driver was loaded, if it was loaded from the module path
installed-drivers.module-slot=The slot of the module from which the driver was loaded, if it was loaded from the module path
installed-drivers.xa-datasource-class-name=The fully qualified class name of the javax.sql.XADataSource implementation

reauth-plugin-class-name=The fully qualified class name of the reauthentication plugin implementation
reauth-plugin-properties=The properties for the reauthentication plugin

flush-strategy=Specifies how the pool should be flush in case of an error. Valid values are: FailingConnectionOnly (default), IdleConnections and EntirePool
use-ccm=Enable the use of a cached connection manager

recovery-username=The user name used for recovery
recovery-password=The password used for recovery
recovery-security-domain=The security domain used for recovery
recovery-plugin-class-name=The fully qualified class name of the recovery plugin implementation
recovery-plugin-properties=The properties for the recovery plugin
no-recovery=Specifies if the connection pool should be excluded from recovery

persistent=if true enable attribute is persisted

statistics=Runtime statistics provided by the resource adapter.
