host=El nodo ra\u00EDz del modelo de administraci\u00F3n a nivel de host.
host.name=El nombre a utilizar para este controlador host del host. Debe ser \u00FAnico atrav\u00E9s del dominio. Si no se establece entonces por defecto es el valor del tiempo de ejecuci\u00F3n de InetAddress.getLocalHost().getHostName().
host.release-version=La versi\u00F3n del lanzamiento del servidor de aplicaciones de JBoss en que est\u00E1 ejecutando este controlador de host.
host.release-codename=El nombre del c\u00F3digo del lanzamiento del servidor de aplicaciones de JBoss en que est\u00E1 ejecutando este controlador de host.
host.product-name=El nombre del producto basado en JBoss AS que este controlador de host est\u00E1 ejecutando.
host.product-version=La versi\u00F3n del producto basado en JBoss AS que este controlador de host est\u00E1 ejecutando.
host.management-major-version=La versi\u00F3n importante de la interfaz de administraci\u00F3n de JBoss AS que este controlador de host proporciona.
host.management-minor-version=La versi\u00F3n menor de la interfaz de administraci\u00F3n de JBoss AS que este controlador de host proporciona.
host.running-mode=El modo actual de ejecuci\u00F3n del controlador host. Puede ser NORMAL (operaciones normales) o ADMIN_ONLY.  Un servidor ADMIN_ONLY iniciar\u00E1 las interfaces de administraci\u00F3n configuradas y acepta las peticiones de administraci\u00F3n, pero no iniciar\u00E1 los servidores o si este contralador host es el maestro para el dominio, acepta conexiones entrantes de los controladores host esclavos.
host.management=Configuraci\u00F3n del sistema de administraci\u00F3n del host.
host.management.interface=Interfaz en la cual se debe abrir el socket del host para la comunicaci\u00F3n de administraci\u00F3n intra-dominio.
host.directory-grouping=Describe la manera en que se deben organizar los directorios escribibles para los servidores administrados por este controlador host. El valor predeterminado, 'by-server', indica que los directorios escribibles de cada servidor se deben agrupar bajo el nombre del servidor en el directorio de dominios/servidores. La alternativa, 'by-type' indica que los directorios escribibles del servidor se deben agrupar con base en su "tipo" (es decir, "data", "log", "tmp") con los directorios de un tipo dado para todos los servidores que aparecen en el directorio a nivel del dominio para ese tipo, por ejemplo, dominio/datos/servidores/nombre-servidor.
host.management.port=Puerto en el cual se debe abrir el socket del host para la comunicaci\u00F3n de administraci\u00F3n intra-dominio.
host.domain-controller=Configuraci\u00F3n de la manera en que el host debe interactuar con el controlador de dominio
host.domain-controller.local=Configuraci\u00F3n de un controlador de dominio local
host.domain-controller.local.add=Configura el host para que act\u00FAe como el controlador del dominio
host.domain-controller.remote=Configuraci\u00F3n de la conexi\u00F3n del controlador de dominio remoto
host.domain-controller.remote.add=Agrega una configuraci\u00F3n de la conexi\u00F3n del controlador de dominio remoto
host.domain-controller.remote.host=La direcci\u00F3n utilizada para la conexi\u00F3n del controlador de dominio
host.domain-controller.remote.port=El puerto utilizado para la conexi\u00F3n del controlador de dominio
host.extension=Una lista de m\u00F3dulos de extensi\u00F3n.
host.path=Una lista de rutas del sistema de archivos nombrado.
host.interface=Una lista de interfaces de red nombradas especificadas completamente disponibles para utilizarlas en el host.
host.jvm=Una lista de configuraciones de la m\u00E1quina virtual Java que se pueden aplicar a los servidores en el host. Por hacer\: hijos
host.system-properties=Una lista de propiedades del sistema para establecer en todos los servidores en el host.
host.system-property=Una propiedad del sistema para establecer en todos los servidores en el host.
host.core-services=Servicios centrales proporcionados por el controlador host del host.
host.server-config=Configuraciones a nivel del host para los servidores que pueden ejecutar en este  host.
host.server=Servidores ejecutando actualmente en el host
host.shutdown=Apaga el host y sus servidores
host.shutdown.restart=Si es verdadero entonces una vez se apague el controlador host ser\u00E1 re-iniciado una vez m\u00E1s
host.start-server=Iniciar un servidor.
host.start-server.server=El nombre del servidor. 
host.start-server.reply=El estatus del servidor despu\u00E9s de la ejecuci\u00F3n de esta operaci\u00F3n.
host.state=El estado actual del controlador host; ya sea STARTING, RUNNING o RESTART_REQUIRED
host.restart-server=Reiniciar un servidor ejecutando actualmente.
host.restart-server.server=El nombre del servidor. 
host.restart-server.reply=El estatus del servidor despu\u00E9s de la ejecuci\u00F3n de esta operaci\u00F3n.
host.stop-server=Detener un servidor ejecutando actualmente.
host.stop-server.server=El nombre del servidor. 
host.stop-server.reply=El estatus del servidor despu\u00E9s de la ejecuci\u00F3n de esta operaci\u00F3n.
host.master=Si este host es es el host maestro para el dominio; es decir, si este proceso act\u00FAa como el controlador de dominio.
host.resolve-expression-on-domain=Operaci\u00F3n que acepta una expresi\u00F3n como entrada (o una cadena que se puede analizar en una expresi\u00F3n) y la resuelve frente a las propiedades locales del sistema y variables del entorno en todos los servidores administrados por el controlador de host.
host.resolve-expression-on-domain.expression=La expresi\u00F3n a resolver.
host.resolve-expression-on-domain.reply=La expresi\u00F3n resuelta o la cadena forman el valor de entrada original si no represent an expression.
host.env=El entorno del controlador de host.
host.env.process-controller-address=La direcci\u00F3n del controlador del proceso al que este controlador de host est\u00E1 conectado.
host.env.process-controller-port=El puerto del controlador del proceso al que este controlador de host est\u00E1 conectado.
host.env.host-controller-address=La direcci\u00F3n que este controlador de host utiliza para escuchar la comunicaci\u00F3n de los servidores.
host.env.host-controller-port=El puerto que este controlador de host utiliza para escuchar la comunicaci\u00F3n de los servidores.
host.env.home-dir=El directorio base de este controlador de host del servidor de aplicaciones JBoss.
host.env.modules-dir=El directorio en donde se encuentran los m\u00F3dulos.
host.env.domain-base-dir=El directorio base del dominio del servidor de aplicaciones JBoss.
host.env.domain-config-dir=El directorio de configuraci\u00F3n del dominio.
host.env.host-config-file=El archivo de configuraci\u00F3n para este host.
host.env.domain-config-file=El archivo de configuraci\u00F3n para este dominio.
host.env.domain-content-dir=El directorio donde es almacenado el contenido de usuario administrado por el servidor.
host.env.domain-data-dir=El directorio de datos.
host.env.domain-log-dir=El directorio a donde se env\u00EDan los archivos de registro.
host.env.domain-servers-dir=El directorio en donde estos servidores iniciados de host almacenan sus datos de tiempo de ejecuci\u00F3n. 
host.env.domain-temp-dir=El directorio temporal.
host.env.default-jvm=La MVJ predeterminada. 
host.env.is-restart=Si este host fue iniciado o no por el controlador de proceso
host.env.backup-domain-files=Si este controlador de host debe respaldar el contenido de dominio del controlador de dominio maestro. Solamente puede ser verdadero en controladores de host esclavos. 
host.env.use-cached-dc=Si este controlador de host debe usar un dominio en cache (como se obtuvo al iniciar con --backup) al iniciar el host. Solamente puede ser verdadero en controladores de host esclavos. 
host.env.initial-running-mode=El modo actual de ejecuci\u00F3n del controlador de host. Puede ser LIVE (operaciones normales) o ADMIN_ONLY.  Un servidor ADMIN_ONLY iniciar\u00E1 las interfaces de administraci\u00F3n configuradas y aceptar\u00E1 las peticiones de administraci\u00F3n, pero no iniciar\u00E1 servicios utilizados para para el manejo de peticiones de usuarios finales.
host.env.qualified-host-name=El nombre de host completamente calificado detectado en el inicio. 
host.env.host-name=El nombre de host local detectado en el inicio del servidor.
host.reload=Recarga el controlador de host al apagar todos sus servicios e iniciar de nuevo. La MVJ no se inicia. Observe sin embargo, que esto conllevar\u00E1 a un reinicio total del proceso para cualquier proceso del servidor administrado  por el controlador de host.
host.reload.admin-only=Si el controlador de host debe reiniciar en un modo de ejecuci\u00F3n ADMIN_ONLY.  Un controlador de host  ADMIN_ONLY iniciar\u00E1 las interfaces de administraci\u00F3n configuradas y aceptar\u00E1 las peticiones de administraci\u00F3n, pero no iniciar\u00E1 los servidores o si este controlador de host es el maestro para el dominio, aceptar\u00E1  conexiones entrantes de los controladores de host esclavos.
host.reload.restart-servers=Si es verdadero, los servidores se recargar\u00E1n, y si es fa\u013Aso, los servidores se dejar\u00E1n ejecutando y se  reconectar\u00E1n al controlador de  host una vez se reinicien.   
server=Define un servidor en el modelo de administraci\u00F3n del nivel de host. 
server.add=Agrega una nueva configuraci\u00F3n del servidor.
server.remove=Borra una configuraci\u00F3n existente del servidor.
server.cpu-affinity=La afinidad de CPU del servidor.
server.interface=Una lista de interfaces de red nombradas completamente y disponibles para usar el servidor. Hijos TODO
server.jvm=Una MVJ nombrada. Hijos TODO
server.name=El nombre del servidor. 
server.group=El nombre de un grupo de servidor del modelo de dominio.
server.path=Una lista de rutas del sistema de archivos nombrado.
server.priority=La prioridad del servidor.
server.socket-binding-group=El grupo de enlace de socket al que pertenece este servidor.
server.socket-binding-port-offset=Una compensaci\u00F3n que va a ser a\u00F1adida a los valores de puerto determinado por el grupo de enlace de socket para este servidor.
server.auto-start=Si este servidor debe iniciarse cuando se inicie el controlador de  host. 
server.system-properties=Una lista de propiedades del sistema para establecer en este servidor.
server.system-property=Una propiedad del sistema para establecer en este servidor.
core.management.native-interface=Configuraci\u00F3n de la interfaz de administraci\u00F3n nativa del servidor
core.management.native-interface.add=Agrega la interfaz de administraci\u00F3n nativa del servidor
core.management.native-interface.remove=Borra la interfaz de administraci\u00F3n nativa del servidor
core.management.native-interface.interface=--use 'socket-binding' descontinuado. La interfaz de red en la cual la comunicaci\u00F3n de administraci\u00F3n nativa del socket del servidor debe estar abierta. Debe ser 'indefinida' si se configura el atributo 'socket-binding'.
core.management.native-interface.port=--use 'socket-binding' descontinuado. El puerto de red en el cual la comunicaci\u00F3n de administraci\u00F3n nativa del socket del servidor debe estar abierta. Debe ser 'indefinida' si se configura el atributo 'socket-binding'.
core.management.native-interface.security-realm=Los l\u00EDmites de seguridad a utilizar para la interfaz de administraci\u00F3n nativa.
core.management.http-interface=Configuraci\u00F3n de la interfaz de administraci\u00F3n HTTP del servidor
core.management.http-interface.add=Agrega la configuraci\u00F3n de la interfaz de administraci\u00F3n HTTP del servidor
core.management.http-interface.remove=Agrega la configuraci\u00F3n de la interfaz de administraci\u00F3n HTTP del servidor
core.management.http-interface.interface=--use 'socket-binding' descontinuado. La interfaz de red en el cual la comunicaci\u00F3n de administraci\u00F3n HTTP del socket del servidor debe estar abierta. Debe ser 'indefinida' si se configura el atributo 'socket-binding' o 'secure-binding'.
core.management.http-interface.port=--use 'socket-binding' descontinuado. El puerto de red en el cual la comunicaci\u00F3n de administraci\u00F3n nativa del socket del servidor debe estar abierta. Debe ser 'indefinida' si se configura el atributo 'socket-binding'.
core.management.http-interface.secure-port=--use 'socket-binding' descontinuado. El puerto en el cual la comunicaci\u00F3n de administraci\u00F3n HTTPS del socket del servidor debe estar abierta. Debe ser 'indefinida' si se configura el atributo 'socket-binding'.
core.management.http-interface.security-realm=Los l\u00EDmites de seguridad a utilizar para la interfaz de administraci\u00F3n HTTP.
core.management.http-interface.console-enabled=Bandera que indica que la consola de administraci\u00F3n est\u00E1 habilitada
ignored-resources=Nombres de recursos de hijos directos de peticiones de recursos de ra\u00EDz de dominio que este controlador de host debe ignorar. La configuraci\u00F3n de dichos 'recursos ignorados' puede ayudar a permitir que un controlador de host  de un lanzamiento previo\nfuncione como un esclavo para el controlador de host maestro ejecutando un lanzamiento posterior y permitiendo que el esclavo ignore porciones de la configuraci\u00F3n que su versi\u00F3n de software no puede entender. Esta estrategia solamente puede tener \u00E9xito si los servidores administrados por el controlador de host esclavo no hacen referencia a ninguna configuraci\u00F3n ignorada.
ignored-resource-type=Identifica un tipo de instancias de recursos  (por ejemplo, 'profile' o 'socket-binding-group') algunos de los cuales deben ser ignorados.
ignored-resource-type.add=A\u00F1ade un tipo de instancias de recursos algunos de los cuales deben ser ignorados
ignored-resource-type.remove=Retira un tipo de recursos de la serie de aquellos por los cuales  ciertas instancias deben ignorarse.
ignored-resource-type.names=Una lista de nombres de instancias espec\u00EDficas de este tipo de recursos que deben ser ignorados. La inclusi\u00F3n de '*'  en la lista significa que todos los recursos del tipo deben ser ignorados.
ignored-resource-type.wildcard=Un boolean que si es 'Verdadero' indica que todos los recursos del tipo deben ser ignorados.
