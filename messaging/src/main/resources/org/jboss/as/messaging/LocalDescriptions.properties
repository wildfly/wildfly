messaging=The configuration of the messaging subsystem.
messaging.add=Operation adding the messaging subsystem
messaging.remove=Operation removing the messaging subsystem
messaging.name=Not used.
messaging.clustered=Whether the server is clustered.
messaging.persistence-enabled=Whether the server will use the file based journal for persistence.
messaging.scheduled-thread-pool-max-size=The number of threads that the main scheduled thread pool has.
messaging.thread-pool-max-size=The number of threads that the main thread pool has. -1 means no limit.
messaging.security-enabled=Whether security is enabled.
messaging.security-invalidation-interval=How long (in ms) to wait before invalidating the security cache.
messaging.wild-card-routing-enabled=Whether the server supports wild card routing.
messaging.management-address=Address to send management messages to.
messaging.management-notification-address=The name of the address that consumers bind to  to receive management notifications.
messaging.cluster-user=The user used by cluster connections to communicate between the clustered nodes.
messaging.cluster-password=The password used by cluster connections to communicate between the clustered nodes.
messaging.jmx-management-enabled=Whether HornetQ should expose its internal management API via JMX. This is not recommended, as accessing these MBeans can lead to inconsistent configuration.
messaging.jmx-domain=The JMX domain used to register internal HornetQ MBeans in the MBeanServer.
messaging.message-counter-enabled=Whether message counters are enabled.
messaging.message-counter-sample-period=The sample period (in ms) to use for message counters.
messaging.message-counter-max-day-history=How many days to keep message counter history.
messaging.connection-ttl-override=If set, this will override how long (in ms) to keep a connection alive without receiving a ping.
messaging.async-connection-execution-enabled=Whether incoming packets on the server should be handed off to a thread from the thread pool for processing. False if they should be handled on the remoting thread.
#messaging.transaction=TODO
messaging.transaction-timeout=How long (in ms) before a transaction can be removed from the resource manager after create time.
messaging.transaction-timeout-scan-period=How often (in ms) to scan for timeout transactions.
messaging.message-expiry-scan-period=How often (in ms) to scan for expired messages.
messaging.message-expiry-thread-priority=The priority of the thread expiring messages.
messaging.id-cache-size=The size of the cache for pre-creating message IDs.
messaging.persist-id-cache=Whether IDs are persisted to the journal.
messaging.remoting-interceptors=The list of interceptor classes used by this server.
messaging.backup=Whether this server is a backup server.
messaging.allow-failback=Whether this server will automatically shutdown if the original live server comes back up.
messaging.failback-delay=How long to wait before failback occurs on live server restart.
messaging.failover-on-shutdown=Whether this backup server (if it is a backup server) should come live on a normal server shutdown.
messaging.shared-store=Whether this server is using a shared store for failover.
messaging.persist-delivery-count-before-delivery=Whether the delivery count is persisted before delivery. False means that this only happens after a message has been cancelled.
messaging.live-connector-ref=The name of the connector used to connect to the live connector. If this server is not a backup that uses shared nothing HA, it's value is "undefined".
messaging.create-bindings-dir=Whether the server should create the bindings directory on start up.
messaging.create-journal-dir=Whether the server should create the journal directory on start up.
messaging.journal-type=The type of journal to use.
messaging.journal-buffer-timeout=The timeout (in nanoseconds) used to flush internal buffers on the journal.
messaging.journal-buffer-size=The size of the internal buffer on the journal.
messaging.journal-sync-transactional=Whether to wait for transaction data to be synchronized to the journal before returning a response to the client.
messaging.journal-sync-non-transactional=Whether to wait for non transaction data to be synced to the journal before returning a response to the client.
messaging.log-journal-write-rate=Whether to periodically log the journal's write rate and flush rate.
messaging.journal-file-size=The size (in bytes) of each journal file.
messaging.journal-min-files=How many journal files to pre-create.
messaging.journal-compact-percentage=The percentage of live data on which we consider compacting the journal.
messaging.journal-compact-min-files=The minimal number of journal data files before we can start compacting.
messaging.journal-max-io=The maximum number of write requests that can be in the AIO queue at any one time.
messaging.perf-blast-pages=TODO
messaging.run-sync-speed-test=Whether on startup to perform a diagnostic test on how fast your disk can sync. Useful when determining performance issues.
messaging.server-dump-interval=How often to dump basic runtime information to the server log. A value less than 1 disables this feature.
messaging.memory-warning-threshold=Percentage of available memory which if exceeded results in a warning log
messaging.memory-measure-interval=Frequency to sample JVM memory in ms (or -1 to disable memory sampling)

match=Expression matched against a queue address.

path=A filesystem path.
path.add=Add a file system path.
path.remove=Remove a path.
path.path=The actual filesystem path. Treated as an absolute path, unless the 'relative-to' attribute is specified, in which case the value is treated as relative to that path. <p>If treated as an absolute path, the actual runtime pathname specified by the value of this attribute will be determined as follows: </p>If this value is already absolute, then the value is directly used.  Otherwise the runtime pathname is resolved in a system-dependent way.  On UNIX systems, a relative pathname is made absolute by resolving it against the current user directory. On Microsoft Windows systems, a relative pathname is made absolute by resolving it against the current directory of the drive named by the pathname, if any; if not, it is resolved against the current user directory.
path.relative-to=The name of another previously named path, or of one of the standard paths provided by the system. If 'relative-to' is provided, the value of the 'path' attribute is treated as relative to the path specified by this attribute. The standard paths provided by the system include:<ul><li>jboss.home - the root directory of the JBoss AS distribution</li><li>user.home - user's home directory</li><li>user.dir - user's current working directory</li><li>java.home - java installation directory</li><li>jboss.server.base.dir - root directory for an individual server instance</li><li>jboss.server.data.dir - directory the server will use for persistent data file storage</li><li>jboss.server.log.dir - directory the server will use for log file storage</li><li>jboss.server.tmp.dir - directory the server will use for temporary file storage</li><li>jboss.domain.servers.dir - directory under which a host controller will create the working area for individual server instances</li></ul>

bindings.directory=The directory in which the bindings journal lives. The default is ${jboss.server.data.dir}/messaging/bindings.
journal.directory=The directory in which the message journal lives. The default is ${jboss.server.data.dir}/messaging/journal.
large.messages.directory=The directory in which large messages are stored. The default is ${jboss.server.data.dir}/messaging/largemessages.
paging.directory=The directory where page files are stored. The default is ${jboss.server.data.dir}/messaging/paging.

grouping-handler=Makes decisions about which node in a cluster should handle a message with a group id assigned.
grouping-handler.add=Operation adding the grouping handler. Only one grouping handler is allowed.
grouping-handler.remove=Operation removing the grouping handler.
grouping-handler.type=Whether the handler is the single "Local" handler for the cluster, which makes handling decisions, or a "Remote" handler which converses with the local handler.
grouping-handler.grouping-handler-address=A reference to a cluster connection and the address it uses.
grouping-handler.timeout=How long to wait for a handling decision to be made; an exception will be thrown during the send if this timeout is reached, ensuring that strict ordering is kept.

acceptor=An acceptor defines a way in which connections can be made to the HornetQ server.
acceptor.remote=A remote acceptor
acceptor.in-vm=An IN-VM acceptor
acceptor.add=Operation adding an acceptor
acceptor.remove=Operation adding an acceptor
acceptor.started=Whether this acceptor is started.
acceptor.start=Starts the acceptor.
acceptor.stop=Stops the acceptor.

address-setting=An address setting defines some attributes that are defined against an address wildcard rather than a specific queue.
address-setting.add=Operation adding an address-setting
address-setting.remove=Operation removing an existing address-setting
address-setting.address-full-policy=Determines what happens when an address where max-size-bytes is specified becomes full. (PAGE, DROP or BLOCK)
address-setting.dead-letter-address=The dead letter address
address-setting.last-value-queue=Defines whether a queue only uses last values or not
address-setting.max-delivery-attempts=Defines how many time a cancelled message can be redelivered before sending to the dead-letter-address
address-setting.max-size-bytes=The max bytes size.
address-setting.message-counter-history-day-limit=Day limit for the message counter history.
address-setting.expiry-address=Defines where to send a message that has expired.
address-setting.redelivery-delay=Defines how long to wait before attempting redelivery of a cancelled message
address-setting.redistribution-delay=Defines how long to wait when the last consumer is closed on a queue before redistributing any messages
address-setting.page-size-bytes=The paging size.
address-setting.send-to-dla-on-no-route=If this parameter is set to true for that address, if the message is not routed to any queues it will instead be sent to the dead letter address (DLA) for that address, if it exists.

connector=A connector can be used by a client to define how it connects to a server.
connector.remote=A remote connector
connector.in-vm=An IN-VM connector
connector.add=Operation adding a connector
connector.remove=Operation removing a connector

queue=A Queue.
queue.add=Operation adding a core queue.
queue.remove=Operation removing an existing queue.
queue.name=The unique queue name.
queue.queue-address=The queue address defines what address is used for routing messages.
queue.filter=The queue message filter definition.
queue.durable=Defines whether the queue is durable.

broadcast-group=A broadcast group is the means by which a server broadcasts connectors over the network.
broadcast-group.add=Add a broadcast group.
broadcast-group.remove=Remove a broadcast group.
broadcast-group.local-bind-address=The local bind address that the datagram socket is bound to. If you have multiple network interfaces on your server, you would specify which one you wish to use for broadcasts by setting this attrbute. If this attribute is not specified then the socket will be bound to the wildcard address, an IP address chosen by the kernel.
broadcast-group.local-bind-port=The local port to which the datagram socket is bound. Normally you would just use the default value of -1 which signifies that an anonymous port should be used. This parameter is alawys specified in conjunction with local-bind-address.
broadcast-group.group-address=The multicast address to which the data will be broadcast. It is a class D IP address in the range 224.0.0.0 to 239.255.255.255, inclusive. The address 224.0.0.0 is reserved and is not available for use.
broadcast-group.group-port=The UDP port number used for broadcasting.
broadcast-group.broadcast-period=The period in milliseconds between consecutive broadcasts.
broadcast-group.connectors=Specifies the names of connectors that will be broadcast.
broadcast-group.socket-binding=The broadcast group socket binding.
broadcast-group.started=Whether the broadcast group is started.
broadcast-group.start=Starts the broadcast group.
broadcast-group.stop=Stops the broadcast group.
broadcast-group.get-connector-pairs-as-json=Returns the pairs of live-backup connectors that are broadcasted by this broadcast group using JSON serialization.

discovery-group=Multicast group to listen to receive broadcast from other servers announcing their connectors.
discovery-group.add=Add a discovery group.
discovery-group.remove=Remove a discovery group.
discovery-group.local-bind-address=The local bind address that the datagram socket is bound to.
discovery-group.group-address=Multicast IP address of the group to listen on.
discovery-group.group-port=UDP port of the multicast group.
discovery-group.refresh-timeout=Period the discovery group waits after receiving the last broadcast from a particular server before removing that server's connector pair entry from its list.
discovery-group.initial-wait-timeout=Period, in ms, to wait for an initial broadcast to give us at least one node in the cluster.
discovery-group.socket-binding=The discovery group socket binding.

bridge=The function of a bridge is to consume messages from a source queue, and forward them to a target address, typically on a different HornetQ server.
bridge.add=Operation adding a bridge.
bridge.remove=Operation removing a bridge.
bridge.queue-name=The unique name of the local queue that the bridge consumes from.
bridge.forwarding-address=The address on the target server that the message will be forwarded to. If a forwarding address is not specified then the original destination of the message will be retained.
bridge.ha=Whether or not this bridge should support high availability. True means it will connect to any available server in a cluster and support failover.
bridge.filter=An optional filter string. If specified then only messages which match the filter expression specified will be forwarded. The filter string follows the HornetQ filter expression syntax desribed in the HornetQ documentation.
bridge.transformer-class-name=The name of a user-defined class which implements the org.hornetq.core.server.cluster.Transformer interface.
bridge.retry-interval=The period in milliseconds between subsequent reconnection attempts, if the connection to the target server has failed.
bridge.retry-interval-multiplier=A multiplier to apply to the time since the last retry to compute the time to the next retry. This allows you to implement an exponential backoff between retry attempts.
bridge.reconnect-attempts=The total number of reconnect attempts the bridge will make before giving up and shutting down. A value of -1 signifies an unlimited number of attempts.
bridge.failover-on-server-shutdown=Whether the bridge will attempt to failover onto a backup server (if specified) when the target server is cleanly shutdown rather than crashed.
bridge.use-duplicate-detection=Whether the bridge will automatically insert a duplicate id property into each message that it forwards.
bridge.confirmation-window-size=The confirmation-window-size to use for the connection used to forward messages to the target node.
bridge.user=The user name to use when creating the bridge connection to the remote server. If it is not specified the default cluster user specified by the cluster-user attribute in the root messaging subsystem resource will be used.
bridge.password=The password to use when creating the bridge connection to the remote server. If it is not specified the default cluster password specified by the cluster-password attribute in the root messaging subsystem resource will be used.
bridge.static-connectors=A list of names of statically defined connectors used by this bridge. Must be undefined (null) if 'discovery-group-name' is defined.
bridge.discovery-group-name=The name of the discovery group used by this bridge. Must be undefined (null) if 'static-connectors' is defined.
bridge.started=Whether the bridge is started.
bridge.start=Starts the bridge.
bridge.stop=Stops the bridge.

divert=A messaging resource that allows you to transparently divert messages routed to one address to some other address, without making any changes to any client application logic.
divert.add=Operation adding a divert
divert.remove=Operation removing a divert
divert.routing-name=Routing name of the divert
divert.divert-address=Address to divert from
divert.forwarding-address=Address to divert to
divert.filter=An optional filter string. If specified then only messages which match the filter expression specified will be diverted. The filter string follows the HornetQ filter expression syntax desribed in the HornetQ documentation.
divert.exclusive=Whether the divert is exclusive, meaning that the message is diverted to the new address, and does not go to the old address at all.
divert.transformer-class-name=The name of a class used to transform the message's body or properties before it is diverted.

cluster-connection=Cluster connections group servers into clusters so that messages can be load balanced between the nodes of the cluster.
cluster-connection.add=Operation adding a cluster connection
cluster-connection.remove=Operation removing a cluster connection
cluster-connection.cluster-connection-address=Each cluster connection only applies to messages sent to an address that starts with this value.
cluster-connection.connector-ref=The confirmation-window-size to use for the connection used to forward messages to a target node.
cluster-connection.retry-interval=The period in milliseconds between subsequent attempts to reconnect to a target server, if the connection to the target server has failed.
cluster-connection.use-duplicate-detection=Whether the bridge will automatically insert a duplicate id property into each message that it forwards.
cluster-connection.forward-when-no-consumers=Whether messages will be distributed round robin between other nodes of the cluster irrespective of whether there are matching or indeed any consumers on other nodes. If this is set to false (the default) then HornetQ will only forward messages to other nodes of the cluster if the address to which they are being forwarded has queues which have consumers, and if those consumers have message filters (selectors) at least one of those selectors must match the message.
cluster-connection.max-hops=The maximum number of times a message can be forwarded. HornetQ can be configured to also load balance messages to nodes which might be connected to it only indirectly with other HornetQ servers as intermediates in a chain.
cluster-connection.confirmation-window-size=The confirmation-window-size to use for the connection used to forward messages to a target node.
cluster-connection.static-connectors=The statically defined list of connectors to which this cluster connection will make connections. Must be undefined (null) if 'discovery-group-name' is defined.
cluster-connection.allow-direct-connections-only=Whether, if a node learns of the existence of a node that is more than 1 hop away, we do not create a bridge for direct cluster connection. Only relevant if 'static-connectors' is defined.
cluster-connection.discovery-group-name=The discovery group used to obtain the list of other servers in the cluster to which this cluster connection will make connections. Must be undefined (null) if 'static-connectors' is defined.
cluster-connection.node-id=The node ID used by this cluster connection.
cluster-connection.get-nodes=Returns a map of the nodes connected to this cluster connection, where keys are node IDs and values are the addresses used to connect to the nodes.
cluster-connection.get-nodes.reply=A map where keys are node IDs and values are the addresses used to connect to the nodes.
cluster-connection.get-static-connectors-as-json=Returns the list of static connectors as a string in JSON format.
cluster-connection.started=Whether the cluster connection is started.
cluster-connection.start=Starts the cluster connection.
cluster-connection.stop=Stops the cluster connection.

connector-service=TODO
connector-service.add=Operation adding a connector service
connector-service.remove=Operation removing a connector service
connector-service.factory-class=Class name of the factory class that can instantiate the connector service.
connector-service.param=A key/value pair understood by the connector service's factory-class
connector-service.param.add=Adds a key/value pair understood by the connector service's factory-class
connector-service.param.remove=Removes a key/value pair understood by the connector service's factory-class
connector-service.param.value=Value portion of a key/value pair understood by the connector service's factory-class

factory-class=The factory class.

#jms stuff
jms=The configuration of the JMS subsystem.
jms.connection-factories=The JMS connection factories.
jms.queues=The JMS queues.
jms.topics=The JMS topics.
jms.pooled-connection-factories=The Managed JMS connection factories.

jms.add=Adds the jms subsystem.


jms-queue=Defines a JMS queue.
jms-queue.add=Add a JMS queue.
jms-queue.remove=Remove a JMS queue.
jms-queue.entries=The jndi names the queue will be bound to.
jms-queue.selector=The queue selector.
jms-queue.durable=Whether the queue is durable or not.

topic=Defines a JMS topic.
topic.add=Add a JMS topic.
topic.remove=Remove a JMS topic.
topic.entries=The jndi names the topic will be bound to.

transport-config.param=A parameter
transport-config.param.value=The parameter value
transport-config.param.add=Operation adding a new parameter
transport-config.param.remove=Operation removing an existing parameter
transport-config.param.optional=Optional parameters

connection-factory=Defines a connection factory.
connection-factory.add=Adds a connection factory.
connection-factory.remove=Removes a connection factory.
connection-factory.ha=Whether the connection factory supports High Availability.
connection-factory.factory-type=The type of connection factory. 0 = jms cf, 1 = queue cf, 2 = topic cf, 3 = xa cf, 4 = xa queue cf, 5 = xa topic cf
connection-factory.initial-message-packet-size=The initial size of messages created through this factory.

pooled-connection-factory=Defines a managed connection factory.
pooled-connection-factory.add=Adds a managed connection factory.
pooled-connection-factory.remove=Removes managed a connection factory.

connection-factory.auto-group=Whether or not message grouping is automatically used
connection-factory.block-on-acknowledge=True to set block on ackowledge.
connection-factory.block-on-durable-send=True to set block on durable send.
connection-factory.block-on-non-durable-send=True to set block on non durable send.
connection-factory.cache-large-message-client=True to cache large messages.
connection-factory.call-timeout=The call time out.
connection-factory.client-failure-check-period=The client failure check period.
connection-factory.client-id=The client id.
connection-factory.compress-large-messages=Whether large messages should be compressed.
connection-factory.confirmation-window-size=The confirmation window size.
connection-factory.connection-factory=Defines a connection factory.
connection-factory.connection-ttl=The connection ttl.
connection-factory.connector=Defines the connectors. These are stored in a map by connector name, with the backup connectors stored as described in the 'value-type'.
connection-factory.consumer-max-rate=The consumer max rate.
connection-factory.consumer-window-size=The consumer window size.
connection-factory.discovery-group-name=The discovery group name.
connection-factory.discovery-initial-wait-timeout=The discovery initial wait time out.
connection-factory.dups-ok-batch-size=The dups ok batch size.
connection-factory.entries=The jndi names the connection factory should be bound to.
connection-factory.failover-on-initial-connection=True to fail over on initial connection.
connection-factory.failover-on-server-shutdown=True to fail over on server shutdown.
connection-factory.group-id=The group id.
connection-factory.connection-load-balancing-policy-class-name=Name of a class implementing a client-side load balancing policy that a client can use to load balance sessions across different nodes in a cluster.
connection-factory.max-retry-interval=The max retry interval.
connection-factory.min-large-message-size=The min large message size.
connection-factory.pre-acknowledge=True to pre-acknowledge.
connection-factory.producer-max-rate=The producer max rate.
connection-factory.producer-window-size=The producer window size.
connection-factory.reconnect-attempts=The reconnect attempts.
connection-factory.retry-interval=The retry interval.
connection-factory.retry-interval-multiplier=The retry interval multiplier.
connection-factory.scheduled-thread-pool-max-size=The scheduled thread pool max size.
connection-factory.thread-pool-max-size=The thread pool max size.
connection-factory.transaction-batch-size=The transaction batch size.
connection-factory.use-global-pools=True to use global pools.

pooled-connection-factory.auto-group=The autogroup.
pooled-connection-factory.block-on-acknowledge=True to set block on ackowledge.
pooled-connection-factory.block-on-durable-send=True to set block on durable send.
pooled-connection-factory.block-on-non-durable-send=True to set block on non durable send.
pooled-connection-factory.cache-large-message-client=True to cache large messages.
pooled-connection-factory.call-timeout=The call time out.
pooled-connection-factory.client-failure-check-period=The client failure check period.
pooled-connection-factory.client-id=The client id.
pooled-connection-factory.confirmation-window-size=The confirmation window size.
pooled-connection-factory.connection-factory=Defines a connection factory.
pooled-connection-factory.connection-ttl=The connection ttl.
pooled-connection-factory.connector=Defines the connectors. These are stored in a map by connector name, with the backup connectors stored as described in the 'value-type'.
pooled-connection-factory.consumer-max-rate=The consumer max rate.
pooled-connection-factory.consumer-window-size=The consumer window size.
pooled-connection-factory.discovery-group-name=The discovery group name.
pooled-connection-factory.discovery-initial-wait-timeout=The discovery initial wait time out.
pooled-connection-factory.dups-ok-batch-size=The dups ok batch size.
pooled-connection-factory.entries=The jndi names the connection factory should be bound to.
pooled-connection-factory.failover-on-initial-connection=True to fail over on initial connection.
pooled-connection-factory.failover-on-server-shutdown=True to fail over on server shutdown.
pooled-connection-factory.group-id=The group id.
pooled-connection-factory.connection-load-balancing-policy-class-name=Name of a class implementing a client-side load balancing policy that a client can use to load balance sessions across different nodes in a cluster.
pooled-connection-factory.max-retry-interval=The max retry interval.
pooled-connection-factory.min-large-message-size=The min large message size.
pooled-connection-factory.pre-acknowledge=True to pre-acknowledge.
pooled-connection-factory.producer-max-rate=The producer max rate.
pooled-connection-factory.producer-window-size=The producer window size.
pooled-connection-factory.reconnect-attempts=The reconnect attempts.
pooled-connection-factory.retry-interval=The retry interval.
pooled-connection-factory.retry-interval-multiplier=The retry interval multiplier.
pooled-connection-factory.scheduled-thread-pool-max-size=The scheduled thread pool max size.
pooled-connection-factory.thread-pool-max-size=The thread pool max size.
pooled-connection-factory.transaction-batch-size=The transaction batch size.
pooled-connection-factory.use-global-pools=True to use global pools.
pooled-connection-factory.use-jndi=Use JNDI to locate the destination for incoming connections
pooled-connection-factory.jndi-params=The JNDI params to use for locating the destination for incoming connections.
pooled-connection-factory.use-local-tx=Use a local transaction for incoming sessions
pooled-connection-factory.setup-attempts=The number of times to set up an MDB endpoint
pooled-connection-factory.setup-interval=The interval between attempts at setting up an MDB endpoint.
pooled-connection-factory.transaction=TODO

server-id=The server id.

security-setting=A security setting allows sets of permissions to be defined against queues based on their address.
security-setting.add=Add new security setting.
security-setting.remove=Remove an existing security setting.

security-role=A security role.
security-role.add=Add new security role.
security-role.remove=Remove an existing security role.
security-role.send= This permission allows the user to send a message to matching addresses.
security-role.consume=his permission allows the user to consume a message from a queue bound to matching addresses.
security-role.create-durable-queue=This permission allows the user to create a durable queue.
security-role.delete-durable-queue=This permission allows the user to delete a durable queue.
security-role.create-non-durable-queue=This permission allows the user to create a temporary queue.
security-role.delete-non-durable-queue=This permission allows the user to delete a temporary queue.
security-role.manage=This permission allows the user to invoke management operations by sending management messages to the management address.

socket-binding=The socket binding reference.


